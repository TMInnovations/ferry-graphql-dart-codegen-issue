type AddressCountAggregate {
  id: Int!
  line1: Int!
  line2: Int!
  city: Int!
  province: Int!
  zip: Int!
  countryId: Int!
  personId: Int!
  _all: Int!
}

type AddressCount {
  Wardrobes: Int!
}

type AddressMaxAggregate {
  id: String
  line1: String
  line2: String
  city: String
  province: String
  zip: String
  countryId: String
  personId: String
}

type AddressMinAggregate {
  id: String
  line1: String
  line2: String
  city: String
  province: String
  zip: String
  countryId: String
  personId: String
}

type Address {
  id: ID!
  line1: String
  line2: String
  city: String
  province: String
  zip: String
  Country: Country
  countryId: String
  Person: Person
  personId: String
  Wardrobes(
    where: WardrobeWhereInput
    orderBy: [WardrobeOrderByWithRelationInput!]
    cursor: WardrobeWhereUniqueInput
    take: Int
    skip: Int
    distinct: [WardrobeScalarFieldEnum!]
  ): [Wardrobe!]
  _count: AddressCount!
  Wardrobe_address_wardrobes(
    where: WardrobeWhereInput
    orderBy: [WardrobeOrderByWithRelationInput!]
    cursor: WardrobeWhereUniqueInput
    take: Int
    skip: Int
    distinct: [WardrobeScalarFieldEnum!]
  ): [Wardrobe!]!
}

input WardrobeWhereInput {
  AND: [WardrobeWhereInput!]
  OR: [WardrobeWhereInput!]
  NOT: [WardrobeWhereInput!]
  id: StringFilter
  name: StringNullableFilter
  Address: AddressRelationFilter
  Cloths: ClothListRelationFilter
}

input StringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  mode: QueryMode
  not: NestedStringFilter
}

enum QueryMode {
  default
  insensitive
}

input NestedStringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input StringNullableFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  mode: QueryMode
  not: NestedStringNullableFilter
}

input NestedStringNullableFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringNullableFilter
}

input AddressRelationFilter {
  is: AddressWhereInput
  isNot: AddressWhereInput
}

input AddressWhereInput {
  AND: [AddressWhereInput!]
  OR: [AddressWhereInput!]
  NOT: [AddressWhereInput!]
  id: StringFilter
  line1: StringNullableFilter
  line2: StringNullableFilter
  city: StringNullableFilter
  province: StringNullableFilter
  zip: StringNullableFilter
  Country: CountryRelationFilter
  Person: PersonRelationFilter
  Wardrobes: WardrobeListRelationFilter
}

input CountryRelationFilter {
  is: CountryWhereInput
  isNot: CountryWhereInput
}

input CountryWhereInput {
  AND: [CountryWhereInput!]
  OR: [CountryWhereInput!]
  NOT: [CountryWhereInput!]
  id: StringFilter
  name: StringFilter
  Address_county_addresses: AddressListRelationFilter
}

input AddressListRelationFilter {
  every: AddressWhereInput
  some: AddressWhereInput
  none: AddressWhereInput
}

input PersonRelationFilter {
  is: PersonWhereInput
  isNot: PersonWhereInput
}

input PersonWhereInput {
  AND: [PersonWhereInput!]
  OR: [PersonWhereInput!]
  NOT: [PersonWhereInput!]
  id: StringFilter
  email: StringNullableFilter
  birthday: DateTimeNullableFilter
  firstName: StringNullableFilter
  lastName: StringNullableFilter
  Gender: GenderRelationFilter
  ItemGenders: ItemGenderListRelationFilter
  History: HistoryRelationFilter
  Telephone: TelephoneRelationFilter
  Address: AddressListRelationFilter
  Picture: PictureRelationFilter
  pictureId: StringNullableFilter
  ClothSizes: ClothSizeListRelationFilter
  ClothStyles: ClothStyleListRelationFilter
  Event_who_events: EventListRelationFilter
  Item_owner_items: ItemListRelationFilter
  Channel: ChannelRelationFilter
  TradePackage_wantedBy_tradePackages: TradePackageListRelationFilter
  TradePackage_from_tradePackages: TradePackageListRelationFilter
  Rating_person_ratings: RatingListRelationFilter
}

input DateTimeNullableFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeNullableFilter
}

# A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
scalar DateTime

input NestedDateTimeNullableFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeNullableFilter
}

input GenderRelationFilter {
  is: GenderWhereInput
  isNot: GenderWhereInput
}

input GenderWhereInput {
  AND: [GenderWhereInput!]
  OR: [GenderWhereInput!]
  NOT: [GenderWhereInput!]
  id: StringFilter
  name: StringNullableFilter
  Profile_gender_profiles: PersonListRelationFilter
}

input PersonListRelationFilter {
  every: PersonWhereInput
  some: PersonWhereInput
  none: PersonWhereInput
}

input ItemGenderListRelationFilter {
  every: ItemGenderWhereInput
  some: ItemGenderWhereInput
  none: ItemGenderWhereInput
}

input ItemGenderWhereInput {
  AND: [ItemGenderWhereInput!]
  OR: [ItemGenderWhereInput!]
  NOT: [ItemGenderWhereInput!]
  id: StringFilter
  name: StringNullableFilter
  rank: IntNullableFilter
  Items_itemGender_items: ItemListRelationFilter
  Person_itemGender_persons: PersonListRelationFilter
}

input IntNullableFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntNullableFilter
}

input NestedIntNullableFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntNullableFilter
}

input ItemListRelationFilter {
  every: ItemWhereInput
  some: ItemWhereInput
  none: ItemWhereInput
}

input ItemWhereInput {
  AND: [ItemWhereInput!]
  OR: [ItemWhereInput!]
  NOT: [ItemWhereInput!]
  id: StringFilter
  active: BoolNullableFilter
  description: StringNullableFilter
  Category: CategoryRelationFilter
  Value: MoneyRelationFilter
  Colors: ColorListRelationFilter
  ItemGenders: ItemGenderListRelationFilter
  Pictures: PictureListRelationFilter
  Condition: ConditionRelationFilter
  Owner: PersonRelationFilter
  Booster: BoosterListRelationFilter
  Cloth_item_cloth: ClothRelationFilter
  TradePackage_item_tradePackages: TradePackageListRelationFilter
}

input BoolNullableFilter {
  equals: Boolean
  not: NestedBoolNullableFilter
}

input NestedBoolNullableFilter {
  equals: Boolean
  not: NestedBoolNullableFilter
}

input CategoryRelationFilter {
  is: CategoryWhereInput
  isNot: CategoryWhereInput
}

input CategoryWhereInput {
  AND: [CategoryWhereInput!]
  OR: [CategoryWhereInput!]
  NOT: [CategoryWhereInput!]
  id: StringFilter
  name: StringNullableFilter
  ClothSizes: ClothSizeListRelationFilter
  Brand_category_brands: BrandListRelationFilter
  Item_category_items: ItemListRelationFilter
  ParentCategory: CategoryRelationFilter
  SubCategories: CategoryListRelationFilter
}

input ClothSizeListRelationFilter {
  every: ClothSizeWhereInput
  some: ClothSizeWhereInput
  none: ClothSizeWhereInput
}

input ClothSizeWhereInput {
  AND: [ClothSizeWhereInput!]
  OR: [ClothSizeWhereInput!]
  NOT: [ClothSizeWhereInput!]
  id: StringFilter
  name: StringNullableFilter
  rank: IntNullableFilter
  SizeModel: EnumSizeModelNullableFilter
  Categories: CategoryListRelationFilter
  Cloth_clothSize_cloth: ClothListRelationFilter
  Person_clothSize_persons: PersonListRelationFilter
  ComparableTo: ClothSizeListRelationFilter
  ClothSize: ClothSizeListRelationFilter
}

input EnumSizeModelNullableFilter {
  equals: SizeModel
  in: [SizeModel!]
  notIn: [SizeModel!]
  not: NestedEnumSizeModelNullableFilter
}

enum SizeModel {
  GERMAN
  FRANCE
  BRITTAIN
  USA
}

input NestedEnumSizeModelNullableFilter {
  equals: SizeModel
  in: [SizeModel!]
  notIn: [SizeModel!]
  not: NestedEnumSizeModelNullableFilter
}

input CategoryListRelationFilter {
  every: CategoryWhereInput
  some: CategoryWhereInput
  none: CategoryWhereInput
}

input ClothListRelationFilter {
  every: ClothWhereInput
  some: ClothWhereInput
  none: ClothWhereInput
}

input ClothWhereInput {
  AND: [ClothWhereInput!]
  OR: [ClothWhereInput!]
  NOT: [ClothWhereInput!]
  id: StringFilter
  code: StringNullableFilter
  Material: MaterialRelationFilter
  Item: ItemRelationFilter
  ClothSizes: ClothSizeListRelationFilter
  ClothStyles: ClothStyleListRelationFilter
  History: HistoryRelationFilter
  Wardrobe: WardrobeRelationFilter
}

input MaterialRelationFilter {
  is: MaterialWhereInput
  isNot: MaterialWhereInput
}

input MaterialWhereInput {
  AND: [MaterialWhereInput!]
  OR: [MaterialWhereInput!]
  NOT: [MaterialWhereInput!]
  id: StringFilter
  name: StringNullableFilter
  Cloth_material_cloths: ClothListRelationFilter
}

input ItemRelationFilter {
  is: ItemWhereInput
  isNot: ItemWhereInput
}

input ClothStyleListRelationFilter {
  every: ClothStyleWhereInput
  some: ClothStyleWhereInput
  none: ClothStyleWhereInput
}

input ClothStyleWhereInput {
  AND: [ClothStyleWhereInput!]
  OR: [ClothStyleWhereInput!]
  NOT: [ClothStyleWhereInput!]
  id: StringFilter
  name: StringNullableFilter
  Item_clothStyle_items: ClothListRelationFilter
  Person_clothStyle_persons: PersonListRelationFilter
}

input HistoryRelationFilter {
  is: HistoryWhereInput
  isNot: HistoryWhereInput
}

input HistoryWhereInput {
  AND: [HistoryWhereInput!]
  OR: [HistoryWhereInput!]
  NOT: [HistoryWhereInput!]
  id: StringFilter
  Created: EventRelationFilter
  Updated: EventListRelationFilter
  Deleted: EventRelationFilter
  User_history_user: PersonRelationFilter
  Money_history_money: MoneyRelationFilter
  Cloth_history_cloth: ClothRelationFilter
}

input EventRelationFilter {
  is: EventWhereInput
  isNot: EventWhereInput
}

input EventWhereInput {
  AND: [EventWhereInput!]
  OR: [EventWhereInput!]
  NOT: [EventWhereInput!]
  id: StringFilter
  when: DateTimeFilter
  what: StringFilter
  from: JsonNullableFilter
  to: JsonNullableFilter
  Who: PersonRelationFilter
  History_created_history: HistoryRelationFilter
  History_updated_history: HistoryRelationFilter
  History_deleted_history: HistoryRelationFilter
}

input DateTimeFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeFilter
}

input JsonNullableFilter {
  equals: JSON
  not: JSON
}

# The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
scalar JSON

input EventListRelationFilter {
  every: EventWhereInput
  some: EventWhereInput
  none: EventWhereInput
}

input MoneyRelationFilter {
  is: MoneyWhereInput
  isNot: MoneyWhereInput
}

input MoneyWhereInput {
  AND: [MoneyWhereInput!]
  OR: [MoneyWhereInput!]
  NOT: [MoneyWhereInput!]
  id: StringFilter
  value: FloatNullableFilter
  Currency: EnumCurrencyNullableFilter
  History: HistoryRelationFilter
  Item_value_item: ItemRelationFilter
  SubscriptionPlan_money_subscriptionPlans: SubscriptionPlanRelationFilter
  Subscription_money_subscription: SubscriptionRelationFilter
}

input FloatNullableFilter {
  equals: Float
  in: [Float!]
  notIn: [Float!]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: NestedFloatNullableFilter
}

input NestedFloatNullableFilter {
  equals: Float
  in: [Float!]
  notIn: [Float!]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: NestedFloatNullableFilter
}

input EnumCurrencyNullableFilter {
  equals: Currency
  in: [Currency!]
  notIn: [Currency!]
  not: NestedEnumCurrencyNullableFilter
}

enum Currency {
  EUR
  USD
}

input NestedEnumCurrencyNullableFilter {
  equals: Currency
  in: [Currency!]
  notIn: [Currency!]
  not: NestedEnumCurrencyNullableFilter
}

input SubscriptionPlanRelationFilter {
  is: SubscriptionPlanWhereInput
  isNot: SubscriptionPlanWhereInput
}

input SubscriptionPlanWhereInput {
  AND: [SubscriptionPlanWhereInput!]
  OR: [SubscriptionPlanWhereInput!]
  NOT: [SubscriptionPlanWhereInput!]
  id: StringFilter
  name: StringNullableFilter
  StandardDuration: DurationRelationFilter
  StandardPrice: MoneyRelationFilter
  Subscription_subscriptionType_subscription: SubscriptionListRelationFilter
}

input DurationRelationFilter {
  is: DurationWhereInput
  isNot: DurationWhereInput
}

input DurationWhereInput {
  AND: [DurationWhereInput!]
  OR: [DurationWhereInput!]
  NOT: [DurationWhereInput!]
  id: StringFilter
  seconds: IntNullableFilter
  minutes: IntNullableFilter
  hours: IntNullableFilter
  days: IntNullableFilter
  weeks: IntNullableFilter
  months: IntNullableFilter
  years: IntNullableFilter
  SubscriptionPlan_duration_subscriptionPlan: SubscriptionPlanRelationFilter
}

input SubscriptionListRelationFilter {
  every: SubscriptionWhereInput
  some: SubscriptionWhereInput
  none: SubscriptionWhereInput
}

input SubscriptionWhereInput {
  AND: [SubscriptionWhereInput!]
  OR: [SubscriptionWhereInput!]
  NOT: [SubscriptionWhereInput!]
  id: StringFilter
  Price: MoneyRelationFilter
  Timespan: TimespanRelationFilter
  Type: SubscriptionPlanRelationFilter
}

input TimespanRelationFilter {
  is: TimespanWhereInput
  isNot: TimespanWhereInput
}

input TimespanWhereInput {
  AND: [TimespanWhereInput!]
  OR: [TimespanWhereInput!]
  NOT: [TimespanWhereInput!]
  id: StringFilter
  start: DateTimeNullableFilter
  end: DateTimeNullableFilter
  Booster_timespan_booster: BoosterRelationFilter
  Subscription_timespan_subscription: SubscriptionRelationFilter
}

input BoosterRelationFilter {
  is: BoosterWhereInput
  isNot: BoosterWhereInput
}

input BoosterWhereInput {
  AND: [BoosterWhereInput!]
  OR: [BoosterWhereInput!]
  NOT: [BoosterWhereInput!]
  id: StringFilter
  Timespan: TimespanRelationFilter
  TimespanId: StringNullableFilter
  Item_booster_item: ItemRelationFilter
}

input SubscriptionRelationFilter {
  is: SubscriptionWhereInput
  isNot: SubscriptionWhereInput
}

input ClothRelationFilter {
  is: ClothWhereInput
  isNot: ClothWhereInput
}

input WardrobeRelationFilter {
  is: WardrobeWhereInput
  isNot: WardrobeWhereInput
}

input BrandListRelationFilter {
  every: BrandWhereInput
  some: BrandWhereInput
  none: BrandWhereInput
}

input BrandWhereInput {
  AND: [BrandWhereInput!]
  OR: [BrandWhereInput!]
  NOT: [BrandWhereInput!]
  id: StringFilter
  name: StringNullableFilter
  Categories: CategoryListRelationFilter
}

input ColorListRelationFilter {
  every: ColorWhereInput
  some: ColorWhereInput
  none: ColorWhereInput
}

input ColorWhereInput {
  AND: [ColorWhereInput!]
  OR: [ColorWhereInput!]
  NOT: [ColorWhereInput!]
  id: StringFilter
  name: StringNullableFilter
  Type: EnumColorTypeNullableFilter
  Item_color_items: ItemListRelationFilter
}

input EnumColorTypeNullableFilter {
  equals: ColorType
  in: [ColorType!]
  notIn: [ColorType!]
  not: NestedEnumColorTypeNullableFilter
}

enum ColorType {
  MATT
  SHINY
  SPARKLING
}

input NestedEnumColorTypeNullableFilter {
  equals: ColorType
  in: [ColorType!]
  notIn: [ColorType!]
  not: NestedEnumColorTypeNullableFilter
}

input PictureListRelationFilter {
  every: PictureWhereInput
  some: PictureWhereInput
  none: PictureWhereInput
}

input PictureWhereInput {
  AND: [PictureWhereInput!]
  OR: [PictureWhereInput!]
  NOT: [PictureWhereInput!]
  id: StringFilter
  rank: IntNullableFilter
  LQ: FileRelationFilter
  MQ: FileRelationFilter
  HQ: FileRelationFilter
  Person: PersonRelationFilter
  Item_picture_item: ItemRelationFilter
}

input FileRelationFilter {
  is: FileWhereInput
  isNot: FileWhereInput
}

input FileWhereInput {
  AND: [FileWhereInput!]
  OR: [FileWhereInput!]
  NOT: [FileWhereInput!]
  id: StringFilter
  extension: StringNullableFilter
  File_lqPictureFile_file: PictureRelationFilter
  File_mqPictureFile_file: PictureRelationFilter
  File_hqPictureFile_file: PictureRelationFilter
}

input PictureRelationFilter {
  is: PictureWhereInput
  isNot: PictureWhereInput
}

input ConditionRelationFilter {
  is: ConditionWhereInput
  isNot: ConditionWhereInput
}

input ConditionWhereInput {
  AND: [ConditionWhereInput!]
  OR: [ConditionWhereInput!]
  NOT: [ConditionWhereInput!]
  id: StringFilter
  name: StringFilter
  Item_condition_items: ItemListRelationFilter
}

input BoosterListRelationFilter {
  every: BoosterWhereInput
  some: BoosterWhereInput
  none: BoosterWhereInput
}

input TradePackageListRelationFilter {
  every: TradePackageWhereInput
  some: TradePackageWhereInput
  none: TradePackageWhereInput
}

input TradePackageWhereInput {
  AND: [TradePackageWhereInput!]
  OR: [TradePackageWhereInput!]
  NOT: [TradePackageWhereInput!]
  id: StringFilter
  WantedBy: PersonListRelationFilter
  From: PersonRelationFilter
  Items: ItemListRelationFilter
  Offer_tradePackage_offers: OfferListRelationFilter
}

input OfferListRelationFilter {
  every: OfferWhereInput
  some: OfferWhereInput
  none: OfferWhereInput
}

input OfferWhereInput {
  AND: [OfferWhereInput!]
  OR: [OfferWhereInput!]
  NOT: [OfferWhereInput!]
  id: StringFilter
  TradePackages: TradePackageListRelationFilter
  Contract: ContractRelationFilter
}

input ContractRelationFilter {
  is: ContractWhereInput
  isNot: ContractWhereInput
}

input ContractWhereInput {
  AND: [ContractWhereInput!]
  OR: [ContractWhereInput!]
  NOT: [ContractWhereInput!]
  id: StringFilter
  Offer: OfferRelationFilter
  Rating: RatingListRelationFilter
}

input OfferRelationFilter {
  is: OfferWhereInput
  isNot: OfferWhereInput
}

input RatingListRelationFilter {
  every: RatingWhereInput
  some: RatingWhereInput
  none: RatingWhereInput
}

input RatingWhereInput {
  AND: [RatingWhereInput!]
  OR: [RatingWhereInput!]
  NOT: [RatingWhereInput!]
  id: StringFilter
  amount: IntNullableFilter
  Contract: ContractRelationFilter
  From: PersonRelationFilter
}

input TelephoneRelationFilter {
  is: TelephoneWhereInput
  isNot: TelephoneWhereInput
}

input TelephoneWhereInput {
  AND: [TelephoneWhereInput!]
  OR: [TelephoneWhereInput!]
  NOT: [TelephoneWhereInput!]
  id: StringFilter
  telephoneNumber: StringNullableFilter
  Person_telephone_person: PersonRelationFilter
}

input ChannelRelationFilter {
  is: ChannelWhereInput
  isNot: ChannelWhereInput
}

input ChannelWhereInput {
  AND: [ChannelWhereInput!]
  OR: [ChannelWhereInput!]
  NOT: [ChannelWhereInput!]
  id: StringFilter
  Participants: PersonListRelationFilter
}

input WardrobeListRelationFilter {
  every: WardrobeWhereInput
  some: WardrobeWhereInput
  none: WardrobeWhereInput
}

input WardrobeOrderByWithRelationInput {
  id: SortOrder
  name: SortOrder
  Address: AddressOrderByWithRelationInput
  Cloths: ClothOrderByRelationAggregateInput
}

enum SortOrder {
  asc
  desc
}

input AddressOrderByWithRelationInput {
  id: SortOrder
  line1: SortOrder
  line2: SortOrder
  city: SortOrder
  province: SortOrder
  zip: SortOrder
  Country: CountryOrderByWithRelationInput
  Person: PersonOrderByWithRelationInput
  Wardrobes: WardrobeOrderByRelationAggregateInput
}

input CountryOrderByWithRelationInput {
  id: SortOrder
  name: SortOrder
  Address_county_addresses: AddressOrderByRelationAggregateInput
}

input AddressOrderByRelationAggregateInput {
  _count: SortOrder
}

input PersonOrderByWithRelationInput {
  id: SortOrder
  email: SortOrder
  birthday: SortOrder
  firstName: SortOrder
  lastName: SortOrder
  Gender: GenderOrderByWithRelationInput
  ItemGenders: ItemGenderOrderByRelationAggregateInput
  History: HistoryOrderByWithRelationInput
  Telephone: TelephoneOrderByWithRelationInput
  Address: AddressOrderByRelationAggregateInput
  Picture: PictureOrderByWithRelationInput
  pictureId: SortOrder
  ClothSizes: ClothSizeOrderByRelationAggregateInput
  ClothStyles: ClothStyleOrderByRelationAggregateInput
  Event_who_events: EventOrderByRelationAggregateInput
  Item_owner_items: ItemOrderByRelationAggregateInput
  Channel: ChannelOrderByWithRelationInput
  TradePackage_wantedBy_tradePackages: TradePackageOrderByRelationAggregateInput
  TradePackage_from_tradePackages: TradePackageOrderByRelationAggregateInput
  Rating_person_ratings: RatingOrderByRelationAggregateInput
}

input GenderOrderByWithRelationInput {
  id: SortOrder
  name: SortOrder
  Profile_gender_profiles: PersonOrderByRelationAggregateInput
}

input PersonOrderByRelationAggregateInput {
  _count: SortOrder
}

input ItemGenderOrderByRelationAggregateInput {
  _count: SortOrder
}

input HistoryOrderByWithRelationInput {
  id: SortOrder
  Created: EventOrderByWithRelationInput
  Updated: EventOrderByRelationAggregateInput
  Deleted: EventOrderByWithRelationInput
  User_history_user: PersonOrderByWithRelationInput
  Money_history_money: MoneyOrderByWithRelationInput
  Cloth_history_cloth: ClothOrderByWithRelationInput
}

input EventOrderByWithRelationInput {
  id: SortOrder
  when: SortOrder
  what: SortOrder
  from: SortOrder
  to: SortOrder
  Who: PersonOrderByWithRelationInput
  History_created_history: HistoryOrderByWithRelationInput
  History_updated_history: HistoryOrderByWithRelationInput
  History_deleted_history: HistoryOrderByWithRelationInput
}

input EventOrderByRelationAggregateInput {
  _count: SortOrder
}

input MoneyOrderByWithRelationInput {
  id: SortOrder
  value: SortOrder
  Currency: SortOrder
  History: HistoryOrderByWithRelationInput
  Item_value_item: ItemOrderByWithRelationInput
  SubscriptionPlan_money_subscriptionPlans: SubscriptionPlanOrderByWithRelationInput
  Subscription_money_subscription: SubscriptionOrderByWithRelationInput
}

input ItemOrderByWithRelationInput {
  id: SortOrder
  active: SortOrder
  description: SortOrder
  Category: CategoryOrderByWithRelationInput
  Value: MoneyOrderByWithRelationInput
  Colors: ColorOrderByRelationAggregateInput
  ItemGenders: ItemGenderOrderByRelationAggregateInput
  Pictures: PictureOrderByRelationAggregateInput
  Condition: ConditionOrderByWithRelationInput
  Owner: PersonOrderByWithRelationInput
  Booster: BoosterOrderByRelationAggregateInput
  Cloth_item_cloth: ClothOrderByWithRelationInput
  TradePackage_item_tradePackages: TradePackageOrderByRelationAggregateInput
}

input CategoryOrderByWithRelationInput {
  id: SortOrder
  name: SortOrder
  ClothSizes: ClothSizeOrderByRelationAggregateInput
  Brand_category_brands: BrandOrderByRelationAggregateInput
  Item_category_items: ItemOrderByRelationAggregateInput
  ParentCategory: CategoryOrderByWithRelationInput
  SubCategories: CategoryOrderByRelationAggregateInput
}

input ClothSizeOrderByRelationAggregateInput {
  _count: SortOrder
}

input BrandOrderByRelationAggregateInput {
  _count: SortOrder
}

input ItemOrderByRelationAggregateInput {
  _count: SortOrder
}

input CategoryOrderByRelationAggregateInput {
  _count: SortOrder
}

input ColorOrderByRelationAggregateInput {
  _count: SortOrder
}

input PictureOrderByRelationAggregateInput {
  _count: SortOrder
}

input ConditionOrderByWithRelationInput {
  id: SortOrder
  name: SortOrder
  Item_condition_items: ItemOrderByRelationAggregateInput
}

input BoosterOrderByRelationAggregateInput {
  _count: SortOrder
}

input ClothOrderByWithRelationInput {
  id: SortOrder
  code: SortOrder
  Material: MaterialOrderByWithRelationInput
  Item: ItemOrderByWithRelationInput
  ClothSizes: ClothSizeOrderByRelationAggregateInput
  ClothStyles: ClothStyleOrderByRelationAggregateInput
  History: HistoryOrderByWithRelationInput
  Wardrobe: WardrobeOrderByWithRelationInput
}

input MaterialOrderByWithRelationInput {
  id: SortOrder
  name: SortOrder
  Cloth_material_cloths: ClothOrderByRelationAggregateInput
}

input ClothOrderByRelationAggregateInput {
  _count: SortOrder
}

input ClothStyleOrderByRelationAggregateInput {
  _count: SortOrder
}

input TradePackageOrderByRelationAggregateInput {
  _count: SortOrder
}

input SubscriptionPlanOrderByWithRelationInput {
  id: SortOrder
  name: SortOrder
  StandardDuration: DurationOrderByWithRelationInput
  StandardPrice: MoneyOrderByWithRelationInput
  Subscription_subscriptionType_subscription: SubscriptionOrderByRelationAggregateInput
}

input DurationOrderByWithRelationInput {
  id: SortOrder
  seconds: SortOrder
  minutes: SortOrder
  hours: SortOrder
  days: SortOrder
  weeks: SortOrder
  months: SortOrder
  years: SortOrder
  SubscriptionPlan_duration_subscriptionPlan: SubscriptionPlanOrderByWithRelationInput
}

input SubscriptionOrderByRelationAggregateInput {
  _count: SortOrder
}

input SubscriptionOrderByWithRelationInput {
  id: SortOrder
  Price: MoneyOrderByWithRelationInput
  Timespan: TimespanOrderByWithRelationInput
  Type: SubscriptionPlanOrderByWithRelationInput
}

input TimespanOrderByWithRelationInput {
  id: SortOrder
  start: SortOrder
  end: SortOrder
  Booster_timespan_booster: BoosterOrderByWithRelationInput
  Subscription_timespan_subscription: SubscriptionOrderByWithRelationInput
}

input BoosterOrderByWithRelationInput {
  id: SortOrder
  Timespan: TimespanOrderByWithRelationInput
  TimespanId: SortOrder
  Item_booster_item: ItemOrderByWithRelationInput
}

input TelephoneOrderByWithRelationInput {
  id: SortOrder
  telephoneNumber: SortOrder
  Person_telephone_person: PersonOrderByWithRelationInput
}

input PictureOrderByWithRelationInput {
  id: SortOrder
  rank: SortOrder
  LQ: FileOrderByWithRelationInput
  MQ: FileOrderByWithRelationInput
  HQ: FileOrderByWithRelationInput
  Person: PersonOrderByWithRelationInput
  Item_picture_item: ItemOrderByWithRelationInput
}

input FileOrderByWithRelationInput {
  id: SortOrder
  extension: SortOrder
  File_lqPictureFile_file: PictureOrderByWithRelationInput
  File_mqPictureFile_file: PictureOrderByWithRelationInput
  File_hqPictureFile_file: PictureOrderByWithRelationInput
}

input ChannelOrderByWithRelationInput {
  id: SortOrder
  Participants: PersonOrderByRelationAggregateInput
}

input RatingOrderByRelationAggregateInput {
  _count: SortOrder
}

input WardrobeOrderByRelationAggregateInput {
  _count: SortOrder
}

input WardrobeWhereUniqueInput {
  id: String
}

enum WardrobeScalarFieldEnum {
  id
  name
  addressId
}

type BoosterCountAggregate {
  id: Int!
  TimespanId: Int!
  itemId: Int!
  _all: Int!
}

type BoosterMaxAggregate {
  id: String
  TimespanId: String
  itemId: String
}

type BoosterMinAggregate {
  id: String
  TimespanId: String
  itemId: String
}

type Booster {
  id: ID!
  Timespan: Timespan
  TimespanId: String
  Item_booster_item: Item
  itemId: String
}

type BrandCountAggregate {
  id: Int!
  name: Int!
  _all: Int!
}

type BrandCount {
  Categories: Int!
}

type BrandMaxAggregate {
  id: String
  name: String
}

type BrandMinAggregate {
  id: String
  name: String
}

type Brand {
  id: ID!
  name: String
  Categories(
    where: CategoryWhereInput
    orderBy: [CategoryOrderByWithRelationInput!]
    cursor: CategoryWhereUniqueInput
    take: Int
    skip: Int
    distinct: [CategoryScalarFieldEnum!]
  ): [Category!]
  _count: BrandCount!
}

input CategoryWhereUniqueInput {
  id: String
}

enum CategoryScalarFieldEnum {
  id
  name
  categoryId
}

type CategoryCountAggregate {
  id: Int!
  name: Int!
  categoryId: Int!
  _all: Int!
}

type CategoryCount {
  ClothSizes: Int!
  Brand_category_brands: Int!
  Item_category_items: Int!
  SubCategories: Int!
}

type CategoryMaxAggregate {
  id: String
  name: String
  categoryId: String
}

type CategoryMinAggregate {
  id: String
  name: String
  categoryId: String
}

type Category {
  id: ID!
  name: String
  ClothSizes(
    where: ClothSizeWhereInput
    orderBy: [ClothSizeOrderByWithRelationInput!]
    cursor: ClothSizeWhereUniqueInput
    take: Int
    skip: Int
    distinct: [ClothSizeScalarFieldEnum!]
  ): [ClothSize!]
  Brand_category_brands(
    where: BrandWhereInput
    orderBy: [BrandOrderByWithRelationInput!]
    cursor: BrandWhereUniqueInput
    take: Int
    skip: Int
    distinct: [BrandScalarFieldEnum!]
  ): [Brand!]
  Item_category_items(
    where: ItemWhereInput
    orderBy: [ItemOrderByWithRelationInput!]
    cursor: ItemWhereUniqueInput
    take: Int
    skip: Int
    distinct: [ItemScalarFieldEnum!]
  ): [Item!]
  categoryId: String
  ParentCategory: Category
  SubCategories(
    where: CategoryWhereInput
    orderBy: [CategoryOrderByWithRelationInput!]
    cursor: CategoryWhereUniqueInput
    take: Int
    skip: Int
    distinct: [CategoryScalarFieldEnum!]
  ): [Category!]
  _count: CategoryCount!
}

input ClothSizeOrderByWithRelationInput {
  id: SortOrder
  name: SortOrder
  rank: SortOrder
  SizeModel: SortOrder
  Categories: CategoryOrderByRelationAggregateInput
  Cloth_clothSize_cloth: ClothOrderByRelationAggregateInput
  Person_clothSize_persons: PersonOrderByRelationAggregateInput
  ComparableTo: ClothSizeOrderByRelationAggregateInput
  ClothSize: ClothSizeOrderByRelationAggregateInput
}

input ClothSizeWhereUniqueInput {
  id: String
}

enum ClothSizeScalarFieldEnum {
  id
  name
  rank
  SizeModel
}

input BrandOrderByWithRelationInput {
  id: SortOrder
  name: SortOrder
  Categories: CategoryOrderByRelationAggregateInput
}

input BrandWhereUniqueInput {
  id: String
}

enum BrandScalarFieldEnum {
  id
  name
}

input ItemWhereUniqueInput {
  id: String
}

enum ItemScalarFieldEnum {
  id
  active
  description
  categoryId
  conditionId
  ownerId
}

type ChannelCountAggregate {
  id: Int!
  _all: Int!
}

type ChannelCount {
  Participants: Int!
}

type ChannelMaxAggregate {
  id: String
}

type ChannelMinAggregate {
  id: String
}

type Channel {
  id: ID!
  Participants(
    where: PersonWhereInput
    orderBy: [PersonOrderByWithRelationInput!]
    cursor: PersonWhereUniqueInput
    take: Int
    skip: Int
    distinct: [PersonScalarFieldEnum!]
  ): [Person!]
  _count: ChannelCount!
}

input PersonWhereUniqueInput {
  id: String
  pictureId: String
}

enum PersonScalarFieldEnum {
  id
  email
  birthday
  firstName
  lastName
  genderId
  historyId
  telephoneId
  pictureId
  channelId
}

type ClothCountAggregate {
  id: Int!
  code: Int!
  materialId: Int!
  itemId: Int!
  historyId: Int!
  wardrobeId: Int!
  _all: Int!
}

type ClothCount {
  ClothSizes: Int!
  ClothStyles: Int!
}

type ClothMaxAggregate {
  id: String
  code: String
  materialId: String
  itemId: String
  historyId: String
  wardrobeId: String
}

type ClothMinAggregate {
  id: String
  code: String
  materialId: String
  itemId: String
  historyId: String
  wardrobeId: String
}

type Cloth {
  id: ID!
  code: String
  Material: Material
  materialId: String
  Item: Item!
  itemId: String!
  ClothSizes(
    where: ClothSizeWhereInput
    orderBy: [ClothSizeOrderByWithRelationInput!]
    cursor: ClothSizeWhereUniqueInput
    take: Int
    skip: Int
    distinct: [ClothSizeScalarFieldEnum!]
  ): [ClothSize!]!
  ClothStyles(
    where: ClothStyleWhereInput
    orderBy: [ClothStyleOrderByWithRelationInput!]
    cursor: ClothStyleWhereUniqueInput
    take: Int
    skip: Int
    distinct: [ClothStyleScalarFieldEnum!]
  ): [ClothStyle!]
  History: History
  historyId: String
  Wardrobe: Wardrobe
  wardrobeId: String
  _count: ClothCount!
}

input ClothStyleOrderByWithRelationInput {
  id: SortOrder
  name: SortOrder
  Item_clothStyle_items: ClothOrderByRelationAggregateInput
  Person_clothStyle_persons: PersonOrderByRelationAggregateInput
}

input ClothStyleWhereUniqueInput {
  id: String
}

enum ClothStyleScalarFieldEnum {
  id
  name
}

type ClothSizeAvgAggregate {
  rank: Float
}

type ClothSizeCountAggregate {
  id: Int!
  name: Int!
  rank: Int!
  SizeModel: Int!
  _all: Int!
}

type ClothSizeCount {
  Categories: Int!
  Cloth_clothSize_cloth: Int!
  Person_clothSize_persons: Int!
  ComparableTo: Int!
  ClothSize: Int!
}

type ClothSizeMaxAggregate {
  id: String
  name: String
  rank: Int
  SizeModel: SizeModel
}

type ClothSizeMinAggregate {
  id: String
  name: String
  rank: Int
  SizeModel: SizeModel
}

type ClothSizeSumAggregate {
  rank: Int
}

type ClothSize {
  id: ID!
  name: String
  rank: Int
  SizeModel: SizeModel
  Categories(
    where: CategoryWhereInput
    orderBy: [CategoryOrderByWithRelationInput!]
    cursor: CategoryWhereUniqueInput
    take: Int
    skip: Int
    distinct: [CategoryScalarFieldEnum!]
  ): [Category!]
  Cloth_clothSize_cloth(
    where: ClothWhereInput
    orderBy: [ClothOrderByWithRelationInput!]
    cursor: ClothWhereUniqueInput
    take: Int
    skip: Int
    distinct: [ClothScalarFieldEnum!]
  ): [Cloth!]
  Person_clothSize_persons(
    where: PersonWhereInput
    orderBy: [PersonOrderByWithRelationInput!]
    cursor: PersonWhereUniqueInput
    take: Int
    skip: Int
    distinct: [PersonScalarFieldEnum!]
  ): [Person!]
  ComparableTo(
    where: ClothSizeWhereInput
    orderBy: [ClothSizeOrderByWithRelationInput!]
    cursor: ClothSizeWhereUniqueInput
    take: Int
    skip: Int
    distinct: [ClothSizeScalarFieldEnum!]
  ): [ClothSize!]
  ClothSize(
    where: ClothSizeWhereInput
    orderBy: [ClothSizeOrderByWithRelationInput!]
    cursor: ClothSizeWhereUniqueInput
    take: Int
    skip: Int
    distinct: [ClothSizeScalarFieldEnum!]
  ): [ClothSize!]
  _count: ClothSizeCount!
}

input ClothWhereUniqueInput {
  id: String
}

enum ClothScalarFieldEnum {
  id
  code
  materialId
  itemId
  historyId
  wardrobeId
}

type ClothStyleCountAggregate {
  id: Int!
  name: Int!
  _all: Int!
}

type ClothStyleCount {
  Item_clothStyle_items: Int!
  Person_clothStyle_persons: Int!
}

type ClothStyleMaxAggregate {
  id: String
  name: String
}

type ClothStyleMinAggregate {
  id: String
  name: String
}

type ClothStyle {
  id: ID!
  name: String
  Item_clothStyle_items(
    where: ClothWhereInput
    orderBy: [ClothOrderByWithRelationInput!]
    cursor: ClothWhereUniqueInput
    take: Int
    skip: Int
    distinct: [ClothScalarFieldEnum!]
  ): [Cloth!]
  Person_clothStyle_persons(
    where: PersonWhereInput
    orderBy: [PersonOrderByWithRelationInput!]
    cursor: PersonWhereUniqueInput
    take: Int
    skip: Int
    distinct: [PersonScalarFieldEnum!]
  ): [Person!]
  _count: ClothStyleCount!
}

type ColorCountAggregate {
  id: Int!
  name: Int!
  Type: Int!
  _all: Int!
}

type ColorCount {
  Item_color_items: Int!
}

type ColorMaxAggregate {
  id: String
  name: String
  Type: ColorType
}

type ColorMinAggregate {
  id: String
  name: String
  Type: ColorType
}

type Color {
  id: ID!
  name: String
  Type: ColorType
  Item_color_items(
    where: ItemWhereInput
    orderBy: [ItemOrderByWithRelationInput!]
    cursor: ItemWhereUniqueInput
    take: Int
    skip: Int
    distinct: [ItemScalarFieldEnum!]
  ): [Item!]
  _count: ColorCount!
}

type ConditionCountAggregate {
  id: Int!
  name: Int!
  _all: Int!
}

type ConditionCount {
  Item_condition_items: Int!
}

type ConditionMaxAggregate {
  id: String
  name: String
}

type ConditionMinAggregate {
  id: String
  name: String
}

type Condition {
  id: ID!
  name: String!
  Item_condition_items(
    where: ItemWhereInput
    orderBy: [ItemOrderByWithRelationInput!]
    cursor: ItemWhereUniqueInput
    take: Int
    skip: Int
    distinct: [ItemScalarFieldEnum!]
  ): [Item!]
  _count: ConditionCount!
}

type ContractCountAggregate {
  id: Int!
  offerId: Int!
  _all: Int!
}

type ContractCount {
  Rating: Int!
}

type ContractMaxAggregate {
  id: String
  offerId: String
}

type ContractMinAggregate {
  id: String
  offerId: String
}

type Contract {
  id: ID!
  Offer: Offer
  offerId: String
  Rating(
    where: RatingWhereInput
    orderBy: [RatingOrderByWithRelationInput!]
    cursor: RatingWhereUniqueInput
    take: Int
    skip: Int
    distinct: [RatingScalarFieldEnum!]
  ): [Rating!]
  _count: ContractCount!
}

input RatingOrderByWithRelationInput {
  id: SortOrder
  amount: SortOrder
  Contract: ContractOrderByWithRelationInput
  From: PersonOrderByWithRelationInput
}

input ContractOrderByWithRelationInput {
  id: SortOrder
  Offer: OfferOrderByWithRelationInput
  Rating: RatingOrderByRelationAggregateInput
}

input OfferOrderByWithRelationInput {
  id: SortOrder
  TradePackages: TradePackageOrderByRelationAggregateInput
  Contract: ContractOrderByWithRelationInput
}

input RatingWhereUniqueInput {
  id: String
}

enum RatingScalarFieldEnum {
  id
  amount
  contractId
  personId
}

type CountryCountAggregate {
  id: Int!
  name: Int!
  _all: Int!
}

type CountryCount {
  Address_county_addresses: Int!
}

type CountryMaxAggregate {
  id: String
  name: String
}

type CountryMinAggregate {
  id: String
  name: String
}

type Country {
  id: ID!
  name: String!
  Address_county_addresses(
    where: AddressWhereInput
    orderBy: [AddressOrderByWithRelationInput!]
    cursor: AddressWhereUniqueInput
    take: Int
    skip: Int
    distinct: [AddressScalarFieldEnum!]
  ): [Address!]
  _count: CountryCount!
}

input AddressWhereUniqueInput {
  id: String
}

enum AddressScalarFieldEnum {
  id
  line1
  line2
  city
  province
  zip
  countryId
  personId
}

type DurationAvgAggregate {
  seconds: Float
  minutes: Float
  hours: Float
  days: Float
  weeks: Float
  months: Float
  years: Float
}

type DurationCountAggregate {
  id: Int!
  seconds: Int!
  minutes: Int!
  hours: Int!
  days: Int!
  weeks: Int!
  months: Int!
  years: Int!
  _all: Int!
}

type DurationMaxAggregate {
  id: String
  seconds: Int
  minutes: Int
  hours: Int
  days: Int
  weeks: Int
  months: Int
  years: Int
}

type DurationMinAggregate {
  id: String
  seconds: Int
  minutes: Int
  hours: Int
  days: Int
  weeks: Int
  months: Int
  years: Int
}

type DurationSumAggregate {
  seconds: Int
  minutes: Int
  hours: Int
  days: Int
  weeks: Int
  months: Int
  years: Int
}

type Duration {
  id: ID!
  seconds: Int
  minutes: Int
  hours: Int
  days: Int
  weeks: Int
  months: Int
  years: Int
  SubscriptionPlan_duration_subscriptionPlan: SubscriptionPlan
}

type EventCountAggregate {
  id: Int!
  when: Int!
  what: Int!
  from: Int!
  to: Int!
  whoId: Int!
  historyId: Int!
  _all: Int!
}

type EventMaxAggregate {
  id: String
  when: DateTime
  what: String
  whoId: String
  historyId: String
}

type EventMinAggregate {
  id: String
  when: DateTime
  what: String
  whoId: String
  historyId: String
}

type Event {
  id: ID!
  when: DateTime!
  what: String!
  from: JSON
  to: JSON
  Who: Person
  whoId: String
  History_created_history: History
  History_updated_history: History
  historyId: String
  History_deleted_history: History
}

type FileCountAggregate {
  id: Int!
  _all: Int!
}

type FileMaxAggregate {
  id: String
}

type FileMinAggregate {
  id: String
}

type File {
  id: ID!
  File_lqPictureFile_file: Picture
  File_mqPictureFile_file: Picture
  File_hqPictureFile_file: Picture

  # Base64 encoded file
  data: String
}

type GenderCountAggregate {
  id: Int!
  name: Int!
  _all: Int!
}

type GenderCount {
  Profile_gender_profiles: Int!
}

type GenderMaxAggregate {
  id: String
  name: String
}

type GenderMinAggregate {
  id: String
  name: String
}

type Gender {
  id: ID!
  name: String
  Profile_gender_profiles(
    where: PersonWhereInput
    orderBy: [PersonOrderByWithRelationInput!]
    cursor: PersonWhereUniqueInput
    take: Int
    skip: Int
    distinct: [PersonScalarFieldEnum!]
  ): [Person!]
  _count: GenderCount!
}

type HistoryCountAggregate {
  id: Int!
  createdId: Int!
  deletedId: Int!
  userId: Int!
  _all: Int!
}

type HistoryCount {
  Updated: Int!
}

type HistoryMaxAggregate {
  id: String
  createdId: String
  deletedId: String
  userId: String
}

type HistoryMinAggregate {
  id: String
  createdId: String
  deletedId: String
  userId: String
}

type History {
  id: ID!
  Created: Event
  createdId: String
  Updated(
    where: EventWhereInput
    orderBy: [EventOrderByWithRelationInput!]
    cursor: EventWhereUniqueInput
    take: Int
    skip: Int
    distinct: [EventScalarFieldEnum!]
  ): [Event!]
  Deleted: Event
  deletedId: String
  User_history_user: Person
  userId: String
  Money_history_money: Money
  Cloth_history_cloth: Cloth
  _count: HistoryCount!
}

input EventWhereUniqueInput {
  id: String
}

enum EventScalarFieldEnum {
  id
  when
  what
  from
  to
  whoId
  historyId
}

type ItemCountAggregate {
  id: Int!
  active: Int!
  description: Int!
  categoryId: Int!
  conditionId: Int!
  ownerId: Int!
  _all: Int!
}

type ItemCount {
  Colors: Int!
  ItemGenders: Int!
  Pictures: Int!
  Booster: Int!
  TradePackage_item_tradePackages: Int!
}

type ItemGenderCount {
  Items_itemGender_items: Int!
  Person_itemGender_persons: Int!
}

type ItemMaxAggregate {
  id: String
  active: Boolean
  description: String
  categoryId: String
  conditionId: String
  ownerId: String
}

type ItemMinAggregate {
  id: String
  active: Boolean
  description: String
  categoryId: String
  conditionId: String
  ownerId: String
}

type Item {
  id: ID!
  active: Boolean
  description: String
  Category: Category
  categoryId: String!
  Value: Money
  Colors(
    where: ColorWhereInput
    orderBy: [ColorOrderByWithRelationInput!]
    cursor: ColorWhereUniqueInput
    take: Int
    skip: Int
    distinct: [ColorScalarFieldEnum!]
  ): [Color!]
  ItemGenders(
    where: ItemGenderWhereInput
    orderBy: [ItemGenderOrderByWithRelationInput!]
    cursor: ItemGenderWhereUniqueInput
    take: Int
    skip: Int
    distinct: [ItemGenderScalarFieldEnum!]
  ): [ItemGender!]
  Pictures(
    where: PictureWhereInput
    orderBy: [PictureOrderByWithRelationInput!]
    cursor: PictureWhereUniqueInput
    take: Int
    skip: Int
    distinct: [PictureScalarFieldEnum!]
  ): [Picture!]
  Condition: Condition
  conditionId: String
  Owner: Person
  ownerId: String
  Booster(
    where: BoosterWhereInput
    orderBy: [BoosterOrderByWithRelationInput!]
    cursor: BoosterWhereUniqueInput
    take: Int
    skip: Int
    distinct: [BoosterScalarFieldEnum!]
  ): [Booster!]
  Cloth_item_cloth: Cloth
  TradePackage_item_tradePackages(
    where: TradePackageWhereInput
    orderBy: [TradePackageOrderByWithRelationInput!]
    cursor: TradePackageWhereUniqueInput
    take: Int
    skip: Int
    distinct: [TradePackageScalarFieldEnum!]
  ): [TradePackage!]
  _count: ItemCount!
}

input ColorOrderByWithRelationInput {
  id: SortOrder
  name: SortOrder
  Type: SortOrder
  Item_color_items: ItemOrderByRelationAggregateInput
}

input ColorWhereUniqueInput {
  id: String
}

enum ColorScalarFieldEnum {
  id
  name
  Type
}

input ItemGenderOrderByWithRelationInput {
  id: SortOrder
  name: SortOrder
  rank: SortOrder
  Items_itemGender_items: ItemOrderByRelationAggregateInput
  Person_itemGender_persons: PersonOrderByRelationAggregateInput
}

input ItemGenderWhereUniqueInput {
  id: String
}

enum ItemGenderScalarFieldEnum {
  id
  name
  rank
}

input PictureWhereUniqueInput {
  id: String
}

enum PictureScalarFieldEnum {
  id
  rank
  lQFileId
  mQFileId
  hQFileId
  itemId
}

input BoosterWhereUniqueInput {
  id: String
  TimespanId: String
}

enum BoosterScalarFieldEnum {
  id
  TimespanId
  itemId
}

input TradePackageOrderByWithRelationInput {
  id: SortOrder
  WantedBy: PersonOrderByRelationAggregateInput
  From: PersonOrderByWithRelationInput
  Items: ItemOrderByRelationAggregateInput
  Offer_tradePackage_offers: OfferOrderByRelationAggregateInput
}

input OfferOrderByRelationAggregateInput {
  _count: SortOrder
}

input TradePackageWhereUniqueInput {
  id: String
}

enum TradePackageScalarFieldEnum {
  id
  fromId
}

type ItemGenderAvgAggregate {
  rank: Float
}

type ItemGenderCountAggregate {
  id: Int!
  name: Int!
  rank: Int!
  _all: Int!
}

type ItemGenderMaxAggregate {
  id: String
  name: String
  rank: Int
}

type ItemGenderMinAggregate {
  id: String
  name: String
  rank: Int
}

type ItemGenderSumAggregate {
  rank: Int
}

type ItemGender {
  id: ID!
  name: String
  rank: Int
  Items_itemGender_items(
    where: ItemWhereInput
    orderBy: [ItemOrderByWithRelationInput!]
    cursor: ItemWhereUniqueInput
    take: Int
    skip: Int
    distinct: [ItemScalarFieldEnum!]
  ): [Item!]
  Person_itemGender_persons(
    where: PersonWhereInput
    orderBy: [PersonOrderByWithRelationInput!]
    cursor: PersonWhereUniqueInput
    take: Int
    skip: Int
    distinct: [PersonScalarFieldEnum!]
  ): [Person!]
  _count: ItemGenderCount!
}

type MaterialCountAggregate {
  id: Int!
  name: Int!
  _all: Int!
}

type MaterialCount {
  Cloth_material_cloths: Int!
}

type MaterialMaxAggregate {
  id: String
  name: String
}

type MaterialMinAggregate {
  id: String
  name: String
}

type Material {
  id: ID!
  name: String
  Cloth_material_cloths(
    where: ClothWhereInput
    orderBy: [ClothOrderByWithRelationInput!]
    cursor: ClothWhereUniqueInput
    take: Int
    skip: Int
    distinct: [ClothScalarFieldEnum!]
  ): [Cloth!]
  _count: MaterialCount!
}

type MoneyAvgAggregate {
  value: Float
}

type MoneyCountAggregate {
  id: Int!
  value: Int!
  Currency: Int!
  historyId: Int!
  itemId: Int!
  _all: Int!
}

type MoneyMaxAggregate {
  id: String
  value: Float
  Currency: Currency
  historyId: String
  itemId: String
}

type MoneyMinAggregate {
  id: String
  value: Float
  Currency: Currency
  historyId: String
  itemId: String
}

type MoneySumAggregate {
  value: Float
}

type Money {
  id: ID!
  value: Float
  Currency: Currency
  History: History
  historyId: String
  Item_value_item: Item
  itemId: String
  SubscriptionPlan_money_subscriptionPlans: SubscriptionPlan
  Subscription_money_subscription: Subscription
}

type OfferCountAggregate {
  id: Int!
  _all: Int!
}

type OfferCount {
  TradePackages: Int!
}

type OfferMaxAggregate {
  id: String
}

type OfferMinAggregate {
  id: String
}

type Offer {
  id: ID!
  TradePackages(
    where: TradePackageWhereInput
    orderBy: [TradePackageOrderByWithRelationInput!]
    cursor: TradePackageWhereUniqueInput
    take: Int
    skip: Int
    distinct: [TradePackageScalarFieldEnum!]
  ): [TradePackage!]
  Contract: Contract
  _count: OfferCount!
}

type PersonCountAggregate {
  id: Int!
  email: Int!
  birthday: Int!
  firstName: Int!
  lastName: Int!
  genderId: Int!
  historyId: Int!
  telephoneId: Int!
  pictureId: Int!
  channelId: Int!
  _all: Int!
}

type PersonCount {
  ItemGenders: Int!
  Address: Int!
  ClothSizes: Int!
  ClothStyles: Int!
  Event_who_events: Int!
  Item_owner_items: Int!
  TradePackage_wantedBy_tradePackages: Int!
  TradePackage_from_tradePackages: Int!
  Rating_person_ratings: Int!
}

type PersonMaxAggregate {
  id: String
  email: String
  birthday: DateTime
  firstName: String
  lastName: String
  genderId: String
  historyId: String
  telephoneId: String
  pictureId: String
  channelId: String
}

type PersonMinAggregate {
  id: String
  email: String
  birthday: DateTime
  firstName: String
  lastName: String
  genderId: String
  historyId: String
  telephoneId: String
  pictureId: String
  channelId: String
}

type Person {
  id: ID!
  email: String
  birthday: DateTime
  firstName: String
  lastName: String
  Gender: Gender
  genderId: String
  ItemGenders(
    where: ItemGenderWhereInput
    orderBy: [ItemGenderOrderByWithRelationInput!]
    cursor: ItemGenderWhereUniqueInput
    take: Int
    skip: Int
    distinct: [ItemGenderScalarFieldEnum!]
  ): [ItemGender!]
  History: History
  historyId: String
  Telephone: Telephone
  telephoneId: String
  Address(
    where: AddressWhereInput
    orderBy: [AddressOrderByWithRelationInput!]
    cursor: AddressWhereUniqueInput
    take: Int
    skip: Int
    distinct: [AddressScalarFieldEnum!]
  ): [Address!]
  Picture: Picture
  pictureId: String
  ClothSizes(
    where: ClothSizeWhereInput
    orderBy: [ClothSizeOrderByWithRelationInput!]
    cursor: ClothSizeWhereUniqueInput
    take: Int
    skip: Int
    distinct: [ClothSizeScalarFieldEnum!]
  ): [ClothSize!]
  ClothStyles(
    where: ClothStyleWhereInput
    orderBy: [ClothStyleOrderByWithRelationInput!]
    cursor: ClothStyleWhereUniqueInput
    take: Int
    skip: Int
    distinct: [ClothStyleScalarFieldEnum!]
  ): [ClothStyle!]
  Event_who_events(
    where: EventWhereInput
    orderBy: [EventOrderByWithRelationInput!]
    cursor: EventWhereUniqueInput
    take: Int
    skip: Int
    distinct: [EventScalarFieldEnum!]
  ): [Event!]
  Item_owner_items(
    where: ItemWhereInput
    orderBy: [ItemOrderByWithRelationInput!]
    cursor: ItemWhereUniqueInput
    take: Int
    skip: Int
    distinct: [ItemScalarFieldEnum!]
  ): [Item!]
  Channel: Channel
  channelId: String
  TradePackage_wantedBy_tradePackages(
    where: TradePackageWhereInput
    orderBy: [TradePackageOrderByWithRelationInput!]
    cursor: TradePackageWhereUniqueInput
    take: Int
    skip: Int
    distinct: [TradePackageScalarFieldEnum!]
  ): [TradePackage!]
  TradePackage_from_tradePackages(
    where: TradePackageWhereInput
    orderBy: [TradePackageOrderByWithRelationInput!]
    cursor: TradePackageWhereUniqueInput
    take: Int
    skip: Int
    distinct: [TradePackageScalarFieldEnum!]
  ): [TradePackage!]
  Rating_person_ratings(
    where: RatingWhereInput
    orderBy: [RatingOrderByWithRelationInput!]
    cursor: RatingWhereUniqueInput
    take: Int
    skip: Int
    distinct: [RatingScalarFieldEnum!]
  ): [Rating!]
  _count: PersonCount!
}

type PictureAvgAggregate {
  rank: Float
}

type PictureCountAggregate {
  id: Int!
  rank: Int!
  lQFileId: Int!
  mQFileId: Int!
  hQFileId: Int!
  itemId: Int!
  _all: Int!
}

type PictureMaxAggregate {
  id: String
  rank: Int
  lQFileId: String
  mQFileId: String
  hQFileId: String
  itemId: String
}

type PictureMinAggregate {
  id: String
  rank: Int
  lQFileId: String
  mQFileId: String
  hQFileId: String
  itemId: String
}

type PictureSumAggregate {
  rank: Int
}

type Picture {
  id: ID!
  rank: Int
  LQ: File
  lQFileId: String
  MQ: File
  mQFileId: String
  HQ: File
  hQFileId: String
  Person: Person
  Item_picture_item: Item
  itemId: String
}

type RatingAvgAggregate {
  amount: Float
}

type RatingCountAggregate {
  id: Int!
  amount: Int!
  contractId: Int!
  personId: Int!
  _all: Int!
}

type RatingMaxAggregate {
  id: String
  amount: Int
  contractId: String
  personId: String
}

type RatingMinAggregate {
  id: String
  amount: Int
  contractId: String
  personId: String
}

type RatingSumAggregate {
  amount: Int
}

type Rating {
  id: ID!
  amount: Int
  Contract: Contract
  contractId: String
  From: Person
  personId: String
}

type SubscriptionCountAggregate {
  id: Int!
  moneyId: Int!
  TimespanId: Int!
  subscriptionTypeId: Int!
  _all: Int!
}

type SubscriptionMaxAggregate {
  id: String
  moneyId: String
  TimespanId: String
  subscriptionTypeId: String
}

type SubscriptionMinAggregate {
  id: String
  moneyId: String
  TimespanId: String
  subscriptionTypeId: String
}

type Subscription {
  id: ID!
  Price: Money!
  moneyId: String!
  Timespan: Timespan
  TimespanId: String
  Type: SubscriptionPlan
  subscriptionTypeId: String
}

type SubscriptionPlanCountAggregate {
  id: Int!
  name: Int!
  DurationId: Int!
  moneyId: Int!
  _all: Int!
}

type SubscriptionPlanCount {
  Subscription_subscriptionType_subscription: Int!
}

type SubscriptionPlanMaxAggregate {
  id: String
  name: String
  DurationId: String
  moneyId: String
}

type SubscriptionPlanMinAggregate {
  id: String
  name: String
  DurationId: String
  moneyId: String
}

type SubscriptionPlan {
  id: ID!
  name: String
  StandardDuration: Duration!
  DurationId: String!
  StandardPrice: Money
  moneyId: String
  Subscription_subscriptionType_subscription(
    where: SubscriptionWhereInput
    orderBy: [SubscriptionOrderByWithRelationInput!]
    cursor: SubscriptionWhereUniqueInput
    take: Int
    skip: Int
    distinct: [SubscriptionScalarFieldEnum!]
  ): [Subscription!]
  _count: SubscriptionPlanCount!
}

input SubscriptionWhereUniqueInput {
  id: String
}

enum SubscriptionScalarFieldEnum {
  id
  moneyId
  TimespanId
  subscriptionTypeId
}

type TelephoneCountAggregate {
  id: Int!
  telephoneNumber: Int!
  _all: Int!
}

type TelephoneMaxAggregate {
  id: String
  telephoneNumber: String
}

type TelephoneMinAggregate {
  id: String
  telephoneNumber: String
}

type Telephone {
  id: ID!
  telephoneNumber: String
  Person_telephone_person: Person
}

type TimespanCountAggregate {
  id: Int!
  start: Int!
  end: Int!
  _all: Int!
}

type TimespanMaxAggregate {
  id: String
  start: DateTime
  end: DateTime
}

type TimespanMinAggregate {
  id: String
  start: DateTime
  end: DateTime
}

type Timespan {
  id: ID!
  start: DateTime
  end: DateTime
  Booster_timespan_booster: Booster
  Subscription_timespan_subscription: Subscription
}

type TradePackageCountAggregate {
  id: Int!
  fromId: Int!
  _all: Int!
}

type TradePackageCount {
  WantedBy: Int!
  Items: Int!
  Offer_tradePackage_offers: Int!
}

type TradePackageMaxAggregate {
  id: String
  fromId: String
}

type TradePackageMinAggregate {
  id: String
  fromId: String
}

type TradePackage {
  id: ID!
  WantedBy(
    where: PersonWhereInput
    orderBy: [PersonOrderByWithRelationInput!]
    cursor: PersonWhereUniqueInput
    take: Int
    skip: Int
    distinct: [PersonScalarFieldEnum!]
  ): [Person!]
  From: Person
  fromId: String
  Items(
    where: ItemWhereInput
    orderBy: [ItemOrderByWithRelationInput!]
    cursor: ItemWhereUniqueInput
    take: Int
    skip: Int
    distinct: [ItemScalarFieldEnum!]
  ): [Item!]
  Offer_tradePackage_offers(
    where: OfferWhereInput
    orderBy: [OfferOrderByWithRelationInput!]
    cursor: OfferWhereUniqueInput
    take: Int
    skip: Int
    distinct: [OfferScalarFieldEnum!]
  ): [Offer!]
  _count: TradePackageCount!
}

input OfferWhereUniqueInput {
  id: String
}

enum OfferScalarFieldEnum {
  id
}

type WardrobeCountAggregate {
  id: Int!
  name: Int!
  addressId: Int!
  _all: Int!
}

type WardrobeCount {
  Cloths: Int!
}

type WardrobeMaxAggregate {
  id: String
  name: String
  addressId: String
}

type WardrobeMinAggregate {
  id: String
  name: String
  addressId: String
}

type Wardrobe {
  id: ID!
  name: String
  Address: Address
  addressId: String
  Cloths(
    where: ClothWhereInput
    orderBy: [ClothOrderByWithRelationInput!]
    cursor: ClothWhereUniqueInput
    take: Int
    skip: Int
    distinct: [ClothScalarFieldEnum!]
  ): [Cloth!]
  _count: WardrobeCount!
}

type Query {
  clothStyles(
    where: ClothStyleWhereInput
    orderBy: [ClothStyleOrderByWithRelationInput!]
    cursor: ClothStyleWhereUniqueInput
    take: Int
    skip: Int
    distinct: [ClothStyleScalarFieldEnum!]
  ): [ClothStyle!]!
  clothStyle(where: ClothStyleWhereUniqueInput!): ClothStyle
  itemGenders(
    where: ItemGenderWhereInput
    orderBy: [ItemGenderOrderByWithRelationInput!]
    cursor: ItemGenderWhereUniqueInput
    take: Int
    skip: Int
    distinct: [ItemGenderScalarFieldEnum!]
  ): [ItemGender!]!
  itemGender(where: ItemGenderWhereUniqueInput!): ItemGender
  materials(
    where: MaterialWhereInput
    orderBy: [MaterialOrderByWithRelationInput!]
    cursor: MaterialWhereUniqueInput
    take: Int
    skip: Int
    distinct: [MaterialScalarFieldEnum!]
  ): [Material!]!
  material(where: MaterialWhereUniqueInput!): Material
  pictures(
    where: PictureWhereInput
    orderBy: [PictureOrderByWithRelationInput!]
    cursor: PictureWhereUniqueInput
    take: Int
    skip: Int
    distinct: [PictureScalarFieldEnum!]
  ): [Picture!]!
  picture(where: PictureWhereUniqueInput!): Picture
  files(
    where: FileWhereInput
    orderBy: [FileOrderByWithRelationInput!]
    cursor: FileWhereUniqueInput
    take: Int
    skip: Int
    distinct: [FileScalarFieldEnum!]
  ): [File!]!
  file(where: FileWhereUniqueInput!): File
  ratings(
    where: RatingWhereInput
    orderBy: [RatingOrderByWithRelationInput!]
    cursor: RatingWhereUniqueInput
    take: Int
    skip: Int
    distinct: [RatingScalarFieldEnum!]
  ): [Rating!]!
  rating(where: RatingWhereUniqueInput!): Rating
  subscriptions(
    where: SubscriptionWhereInput
    orderBy: [SubscriptionOrderByWithRelationInput!]
    cursor: SubscriptionWhereUniqueInput
    take: Int
    skip: Int
    distinct: [SubscriptionScalarFieldEnum!]
  ): [Subscription!]!
  subscription(where: SubscriptionWhereUniqueInput!): Subscription
  subscriptionPlans(
    where: SubscriptionPlanWhereInput
    orderBy: [SubscriptionPlanOrderByWithRelationInput!]
    cursor: SubscriptionPlanWhereUniqueInput
    take: Int
    skip: Int
    distinct: [SubscriptionPlanScalarFieldEnum!]
  ): [SubscriptionPlan!]!
  subscriptionPlan(where: SubscriptionPlanWhereUniqueInput!): SubscriptionPlan
  boosters(
    where: BoosterWhereInput
    orderBy: [BoosterOrderByWithRelationInput!]
    cursor: BoosterWhereUniqueInput
    take: Int
    skip: Int
    distinct: [BoosterScalarFieldEnum!]
  ): [Booster!]!
  booster(where: BoosterWhereUniqueInput!): Booster
  moneys(
    where: MoneyWhereInput
    orderBy: [MoneyOrderByWithRelationInput!]
    cursor: MoneyWhereUniqueInput
    take: Int
    skip: Int
    distinct: [MoneyScalarFieldEnum!]
  ): [Money!]!
  money(where: MoneyWhereUniqueInput!): Money
  contracts(
    where: ContractWhereInput
    orderBy: [ContractOrderByWithRelationInput!]
    cursor: ContractWhereUniqueInput
    take: Int
    skip: Int
    distinct: [ContractScalarFieldEnum!]
  ): [Contract!]!
  contract(where: ContractWhereUniqueInput!): Contract
  offers(
    where: OfferWhereInput
    orderBy: [OfferOrderByWithRelationInput!]
    cursor: OfferWhereUniqueInput
    take: Int
    skip: Int
    distinct: [OfferScalarFieldEnum!]
  ): [Offer!]!
  offer(where: OfferWhereUniqueInput!): Offer
  tradePackages(
    where: TradePackageWhereInput
    orderBy: [TradePackageOrderByWithRelationInput!]
    cursor: TradePackageWhereUniqueInput
    take: Int
    skip: Int
    distinct: [TradePackageScalarFieldEnum!]
  ): [TradePackage!]!
  tradePackage(where: TradePackageWhereUniqueInput!): TradePackage
  wardrobes(
    where: WardrobeWhereInput
    orderBy: [WardrobeOrderByWithRelationInput!]
    cursor: WardrobeWhereUniqueInput
    take: Int
    skip: Int
    distinct: [WardrobeScalarFieldEnum!]
  ): [Wardrobe!]!
  wardrobe(where: WardrobeWhereUniqueInput!): Wardrobe
  persons(
    where: PersonWhereInput
    orderBy: [PersonOrderByWithRelationInput!]
    cursor: PersonWhereUniqueInput
    take: Int
    skip: Int
    distinct: [PersonScalarFieldEnum!]
  ): [Person!]!
  person(where: PersonWhereUniqueInput!): Person
  me: Person
  cloths(
    where: ClothWhereInput
    orderBy: [ClothOrderByWithRelationInput!]
    cursor: ClothWhereUniqueInput
    take: Int
    skip: Int
    distinct: [ClothScalarFieldEnum!]
  ): [Cloth!]!
  cloth(where: ClothWhereUniqueInput!): Cloth
  conditions(
    where: ConditionWhereInput
    orderBy: [ConditionOrderByWithRelationInput!]
    cursor: ConditionWhereUniqueInput
    take: Int
    skip: Int
    distinct: [ConditionScalarFieldEnum!]
  ): [Condition!]!
  condition(where: ConditionWhereUniqueInput!): Condition
  clothSizes(
    where: ClothSizeWhereInput
    orderBy: [ClothSizeOrderByWithRelationInput!]
    cursor: ClothSizeWhereUniqueInput
    take: Int
    skip: Int
    distinct: [ClothSizeScalarFieldEnum!]
  ): [ClothSize!]!
  clothSize(where: ClothSizeWhereUniqueInput!): ClothSize
  colors(
    where: ColorWhereInput
    orderBy: [ColorOrderByWithRelationInput!]
    cursor: ColorWhereUniqueInput
    take: Int
    skip: Int
    distinct: [ColorScalarFieldEnum!]
  ): [Color!]!
  color(where: ColorWhereUniqueInput!): Color
  items(
    where: ItemWhereInput
    orderBy: [ItemOrderByWithRelationInput!]
    cursor: ItemWhereUniqueInput
    take: Int
    skip: Int
    distinct: [ItemScalarFieldEnum!]
  ): [Item!]!
  item(where: ItemWhereUniqueInput!): Item
  brands(
    where: BrandWhereInput
    orderBy: [BrandOrderByWithRelationInput!]
    cursor: BrandWhereUniqueInput
    take: Int
    skip: Int
    distinct: [BrandScalarFieldEnum!]
  ): [Brand!]!
  brand(where: BrandWhereUniqueInput!): Brand
  categorys(
    where: CategoryWhereInput
    orderBy: [CategoryOrderByWithRelationInput!]
    cursor: CategoryWhereUniqueInput
    take: Int
    skip: Int
    distinct: [CategoryScalarFieldEnum!]
  ): [Category!]!
  category(where: CategoryWhereUniqueInput!): Category
  addresss(
    where: AddressWhereInput
    orderBy: [AddressOrderByWithRelationInput!]
    cursor: AddressWhereUniqueInput
    take: Int
    skip: Int
    distinct: [AddressScalarFieldEnum!]
  ): [Address!]!
  address(where: AddressWhereUniqueInput!): Address
  countrys(
    where: CountryWhereInput
    orderBy: [CountryOrderByWithRelationInput!]
    cursor: CountryWhereUniqueInput
    take: Int
    skip: Int
    distinct: [CountryScalarFieldEnum!]
  ): [Country!]!
  country(where: CountryWhereUniqueInput!): Country
  telephones(
    where: TelephoneWhereInput
    orderBy: [TelephoneOrderByWithRelationInput!]
    cursor: TelephoneWhereUniqueInput
    take: Int
    skip: Int
    distinct: [TelephoneScalarFieldEnum!]
  ): [Telephone!]!
  telephone(where: TelephoneWhereUniqueInput!): Telephone
  channels(
    where: ChannelWhereInput
    orderBy: [ChannelOrderByWithRelationInput!]
    cursor: ChannelWhereUniqueInput
    take: Int
    skip: Int
    distinct: [ChannelScalarFieldEnum!]
  ): [Channel!]!
  channel(where: ChannelWhereUniqueInput!): Channel
  genders(
    where: GenderWhereInput
    orderBy: [GenderOrderByWithRelationInput!]
    cursor: GenderWhereUniqueInput
    take: Int
    skip: Int
    distinct: [GenderScalarFieldEnum!]
  ): [Gender!]!
  gender(where: GenderWhereUniqueInput!): Gender
  durations(
    where: DurationWhereInput
    orderBy: [DurationOrderByWithRelationInput!]
    cursor: DurationWhereUniqueInput
    take: Int
    skip: Int
    distinct: [DurationScalarFieldEnum!]
  ): [Duration!]!
  duration(where: DurationWhereUniqueInput!): Duration
  timespans(
    where: TimespanWhereInput
    orderBy: [TimespanOrderByWithRelationInput!]
    cursor: TimespanWhereUniqueInput
    take: Int
    skip: Int
    distinct: [TimespanScalarFieldEnum!]
  ): [Timespan!]!
  timespan(where: TimespanWhereUniqueInput!): Timespan
  historys(
    where: HistoryWhereInput
    orderBy: [HistoryOrderByWithRelationInput!]
    cursor: HistoryWhereUniqueInput
    take: Int
    skip: Int
    distinct: [HistoryScalarFieldEnum!]
  ): [History!]!
  history(where: HistoryWhereUniqueInput!): History
  events(
    where: EventWhereInput
    orderBy: [EventOrderByWithRelationInput!]
    cursor: EventWhereUniqueInput
    take: Int
    skip: Int
    distinct: [EventScalarFieldEnum!]
  ): [Event!]!
  event(where: EventWhereUniqueInput!): Event
  getToken(userId: String!): String!
  getUserId(token: String!): String!
}

input MaterialWhereUniqueInput {
  id: String
}

enum MaterialScalarFieldEnum {
  id
  name
}

input FileWhereUniqueInput {
  id: String
}

enum FileScalarFieldEnum {
  id
  uri
  bucket
  extension
}

input SubscriptionPlanWhereUniqueInput {
  id: String
}

enum SubscriptionPlanScalarFieldEnum {
  id
  name
  DurationId
  moneyId
}

input MoneyWhereUniqueInput {
  id: String
}

enum MoneyScalarFieldEnum {
  id
  value
  Currency
  historyId
  itemId
}

input ContractWhereUniqueInput {
  id: String
}

enum ContractScalarFieldEnum {
  id
  offerId
}

input ConditionWhereUniqueInput {
  id: String
}

enum ConditionScalarFieldEnum {
  id
  name
}

input CountryWhereUniqueInput {
  id: String
  name: String
}

enum CountryScalarFieldEnum {
  id
  name
}

input TelephoneWhereUniqueInput {
  id: String
}

enum TelephoneScalarFieldEnum {
  id
  telephoneNumber
}

input ChannelWhereUniqueInput {
  id: String
}

enum ChannelScalarFieldEnum {
  id
}

input GenderWhereUniqueInput {
  id: String
}

enum GenderScalarFieldEnum {
  id
  name
}

input DurationWhereUniqueInput {
  id: String
}

enum DurationScalarFieldEnum {
  id
  seconds
  minutes
  hours
  days
  weeks
  months
  years
}

input TimespanWhereUniqueInput {
  id: String
}

enum TimespanScalarFieldEnum {
  id
  start
  end
}

input HistoryWhereUniqueInput {
  id: String
}

enum HistoryScalarFieldEnum {
  id
  createdId
  deletedId
  userId
}

type Mutation {
  createClothStyle(createClothStyleInput: ClothStyleCreateInput!): ClothStyle!
  updateClothStyle(
    updateClothStyleInput: ClothStyleUpdateInput!
    where: ClothStyleWhereUniqueInput!
  ): ClothStyle!
  removeClothStyle(where: ClothStyleWhereUniqueInput!): ClothStyle!
  createItemGender(createItemGenderInput: ItemGenderCreateInput!): ItemGender!
  updateItemGender(
    updateItemGenderInput: ItemGenderUpdateInput!
    where: ItemGenderWhereUniqueInput!
  ): ItemGender!
  removeItemGender(where: ItemGenderWhereUniqueInput!): ItemGender!
  createMaterial(createMaterialInput: MaterialCreateInput!): Material!
  updateMaterial(
    updateMaterialInput: MaterialUpdateInput!
    where: MaterialWhereUniqueInput!
  ): Material!
  removeMaterial(where: MaterialWhereUniqueInput!): Material!
  createPicture(createPictureInput: PictureCreateInput!): Picture!
  updatePicture(
    updatePictureInput: PictureUpdateInput!
    where: PictureWhereUniqueInput!
  ): Picture!
  removePicture(where: PictureWhereUniqueInput!): Picture!
  createFile(createFileInput: FileCreateInput!): File!
  updateFile(
    updateFileInput: FileUpdateInput!
    where: FileWhereUniqueInput!
  ): File!
  removeFile(where: FileWhereUniqueInput!): File!
  createRating(createRatingInput: RatingCreateInput!): Rating!
  updateRating(
    updateRatingInput: RatingUpdateInput!
    where: RatingWhereUniqueInput!
  ): Rating!
  removeRating(where: RatingWhereUniqueInput!): Rating!
  createSubscription(
    createSubscriptionInput: SubscriptionCreateInput!
  ): Subscription!
  updateSubscription(
    updateSubscriptionInput: SubscriptionUpdateInput!
    where: SubscriptionWhereUniqueInput!
  ): Subscription!
  removeSubscription(where: SubscriptionWhereUniqueInput!): Subscription!
  createSubscriptionPlan(
    createSubscriptionPlanInput: SubscriptionPlanCreateInput!
  ): SubscriptionPlan!
  updateSubscriptionPlan(
    updateSubscriptionPlanInput: SubscriptionPlanUpdateInput!
    where: SubscriptionPlanWhereUniqueInput!
  ): SubscriptionPlan!
  removeSubscriptionPlan(
    where: SubscriptionPlanWhereUniqueInput!
  ): SubscriptionPlan!
  createBooster(createBoosterInput: BoosterCreateInput!): Booster!
  updateBooster(
    updateBoosterInput: BoosterUpdateInput!
    where: BoosterWhereUniqueInput!
  ): Booster!
  removeBooster(where: BoosterWhereUniqueInput!): Booster!
  createMoney(createMoneyInput: MoneyCreateInput!): Money!
  updateMoney(
    updateMoneyInput: MoneyUpdateInput!
    where: MoneyWhereUniqueInput!
  ): Money!
  removeMoney(where: MoneyWhereUniqueInput!): Money!
  createContract(createContractInput: ContractCreateInput!): Contract!
  updateContract(
    updateContractInput: ContractUpdateInput!
    where: ContractWhereUniqueInput!
  ): Contract!
  removeContract(where: ContractWhereUniqueInput!): Contract!
  createOffer(createOfferInput: OfferCreateInput!): Offer!
  updateOffer(
    updateOfferInput: OfferUpdateInput!
    where: OfferWhereUniqueInput!
  ): Offer!
  removeOffer(where: OfferWhereUniqueInput!): Offer!
  createTradePackage(
    createTradePackageInput: TradePackageCreateInput!
  ): TradePackage!
  updateTradePackage(
    updateTradePackageInput: TradePackageUpdateInput!
    where: TradePackageWhereUniqueInput!
  ): TradePackage!
  removeTradePackage(where: TradePackageWhereUniqueInput!): TradePackage!
  createWardrobe(createWardrobeInput: WardrobeCreateInput!): Wardrobe!
  updateWardrobe(
    updateWardrobeInput: WardrobeUpdateInput!
    where: WardrobeWhereUniqueInput!
  ): Wardrobe!
  removeWardrobe(where: WardrobeWhereUniqueInput!): Wardrobe!
  createPerson(createPersonInput: PersonCreateInput!): Person!
  updatePerson(
    updatePersonInput: PersonUpdateInput!
    where: PersonWhereUniqueInput!
  ): Person!
  removePerson(where: PersonWhereUniqueInput!): Person!
  updateMyPerson(personUpdateInput: PersonUncheckedUpdateInput!): Person
  updateMyPersonPicture(pictureBase64: PictureInput!): Person
  updateMyPersonClothSizes(clothSizeIds: [ClothSizeWhereUniqueInput!]!): Person
  updateMyPersonClothStyles(
    clothStyleIds: [ClothStyleWhereUniqueInput!]!
  ): Person
  updateMyPersonItemGenders(
    itemGenderIds: [ItemGenderWhereUniqueInput!]!
  ): Person
  createCloth(createClothInput: ClothCreateInput!): Cloth!
  updateCloth(
    updateClothInput: ClothUpdateInput!
    where: ClothWhereUniqueInput!
  ): Cloth!
  removeCloth(where: ClothWhereUniqueInput!): Cloth!
  createMyCloth(createMyClothInput: CreateMyClothInput!): Item
  createCondition(createConditionInput: ConditionCreateInput!): Condition!
  updateCondition(
    updateConditionInput: ConditionUpdateInput!
    where: ConditionWhereUniqueInput!
  ): Condition!
  removeCondition(where: ConditionWhereUniqueInput!): Condition!
  createClothSize(createClothSizeInput: ClothSizeCreateInput!): ClothSize!
  updateClothSize(
    updateClothSizeInput: ClothSizeUpdateInput!
    where: ClothSizeWhereUniqueInput!
  ): ClothSize!
  removeClothSize(where: ClothSizeWhereUniqueInput!): ClothSize!
  createColor(createColorInput: ColorCreateInput!): Color!
  updateColor(
    updateColorInput: ColorUpdateInput!
    where: ColorWhereUniqueInput!
  ): Color!
  removeColor(where: ColorWhereUniqueInput!): Color!
  createItem(createItemInput: ItemCreateInput!): Item!
  updateItem(
    updateItemInput: ItemUpdateInput!
    where: ItemWhereUniqueInput!
  ): Item!
  removeItem(where: ItemWhereUniqueInput!): Item!
  createBrand(createBrandInput: BrandCreateInput!): Brand!
  updateBrand(
    updateBrandInput: BrandUpdateInput!
    where: BrandWhereUniqueInput!
  ): Brand!
  removeBrand(where: BrandWhereUniqueInput!): Brand!
  createCategory(createCategoryInput: CategoryCreateInput!): Category!
  updateCategory(
    updateCategoryInput: CategoryUpdateInput!
    where: CategoryWhereUniqueInput!
  ): Category!
  removeCategory(where: CategoryWhereUniqueInput!): Category!
  createAddress(createAddressInput: AddressCreateInput!): Address!
  updateAddress(
    updateAddressInput: AddressUpdateInput!
    where: AddressWhereUniqueInput!
  ): Address!
  removeAddress(where: AddressWhereUniqueInput!): Address!
  createCountry(createCountryInput: CountryCreateInput!): Country!
  updateCountry(
    updateCountryInput: CountryUpdateInput!
    where: CountryWhereUniqueInput!
  ): Country!
  removeCountry(where: CountryWhereUniqueInput!): Country!
  createTelephone(createTelephoneInput: TelephoneCreateInput!): Telephone!
  updateTelephone(
    updateTelephoneInput: TelephoneUpdateInput!
    where: TelephoneWhereUniqueInput!
  ): Telephone!
  removeTelephone(where: TelephoneWhereUniqueInput!): Telephone!
  createChannel(createChannelInput: ChannelCreateInput!): Channel!
  updateChannel(
    updateChannelInput: ChannelUpdateInput!
    where: ChannelWhereUniqueInput!
  ): Channel!
  removeChannel(where: ChannelWhereUniqueInput!): Channel!
  createGender(createGenderInput: GenderCreateInput!): Gender!
  updateGender(
    updateGenderInput: GenderUpdateInput!
    where: GenderWhereUniqueInput!
  ): Gender!
  removeGender(where: GenderWhereUniqueInput!): Gender!
  createDuration(createDurationInput: DurationCreateInput!): Duration!
  updateDuration(
    updateDurationInput: DurationUpdateInput!
    where: DurationWhereUniqueInput!
  ): Duration!
  removeDuration(where: DurationWhereUniqueInput!): Duration!
  createTimespan(createTimespanInput: TimespanCreateInput!): Timespan!
  updateTimespan(
    updateTimespanInput: TimespanUpdateInput!
    where: TimespanWhereUniqueInput!
  ): Timespan!
  removeTimespan(where: TimespanWhereUniqueInput!): Timespan!
  createHistory(createHistoryInput: HistoryCreateInput!): History!
  updateHistory(
    updateHistoryInput: HistoryUpdateInput!
    where: HistoryWhereUniqueInput!
  ): History!
  removeHistory(where: HistoryWhereUniqueInput!): History!
  createEvent(createEventInput: EventCreateInput!): Event!
  updateEvent(
    updateEventInput: EventUpdateInput!
    where: EventWhereUniqueInput!
  ): Event!
  removeEvent(where: EventWhereUniqueInput!): Event!
}

input ClothStyleCreateInput {
  id: String
  name: String
  Item_clothStyle_items: ClothCreateNestedManyWithoutClothStylesInput
  Person_clothStyle_persons: PersonCreateNestedManyWithoutClothStylesInput
}

input ClothCreateNestedManyWithoutClothStylesInput {
  create: [ClothCreateWithoutClothStylesInput!]
  connectOrCreate: [ClothCreateOrConnectWithoutClothStylesInput!]
  connect: [ClothWhereUniqueInput!]
}

input ClothCreateWithoutClothStylesInput {
  id: String
  code: String
  Material: MaterialCreateNestedOneWithoutCloth_material_clothsInput
  Item: ItemCreateNestedOneWithoutCloth_item_clothInput!
  ClothSizes: ClothSizeCreateNestedManyWithoutCloth_clothSize_clothInput
  History: HistoryCreateNestedOneWithoutCloth_history_clothInput
  Wardrobe: WardrobeCreateNestedOneWithoutClothsInput
}

input MaterialCreateNestedOneWithoutCloth_material_clothsInput {
  create: MaterialCreateWithoutCloth_material_clothsInput
  connectOrCreate: MaterialCreateOrConnectWithoutCloth_material_clothsInput
  connect: MaterialWhereUniqueInput
}

input MaterialCreateWithoutCloth_material_clothsInput {
  id: String
  name: String
}

input MaterialCreateOrConnectWithoutCloth_material_clothsInput {
  where: MaterialWhereUniqueInput!
  create: MaterialCreateWithoutCloth_material_clothsInput!
}

input ItemCreateNestedOneWithoutCloth_item_clothInput {
  create: ItemCreateWithoutCloth_item_clothInput
  connectOrCreate: ItemCreateOrConnectWithoutCloth_item_clothInput
  connect: ItemWhereUniqueInput
}

input ItemCreateWithoutCloth_item_clothInput {
  id: String
  active: Boolean
  description: String
  Category: CategoryCreateNestedOneWithoutItem_category_itemsInput!
  Value: MoneyCreateNestedOneWithoutItem_value_itemInput
  Colors: ColorCreateNestedManyWithoutItem_color_itemsInput
  ItemGenders: ItemGenderCreateNestedManyWithoutItems_itemGender_itemsInput
  Pictures: PictureCreateNestedManyWithoutItem_picture_itemInput
  Condition: ConditionCreateNestedOneWithoutItem_condition_itemsInput
  Owner: PersonCreateNestedOneWithoutItem_owner_itemsInput
  Booster: BoosterCreateNestedManyWithoutItem_booster_itemInput
  TradePackage_item_tradePackages: TradePackageCreateNestedManyWithoutItemsInput
}

input CategoryCreateNestedOneWithoutItem_category_itemsInput {
  create: CategoryCreateWithoutItem_category_itemsInput
  connectOrCreate: CategoryCreateOrConnectWithoutItem_category_itemsInput
  connect: CategoryWhereUniqueInput
}

input CategoryCreateWithoutItem_category_itemsInput {
  id: String
  name: String
  ClothSizes: ClothSizeCreateNestedManyWithoutCategoriesInput
  Brand_category_brands: BrandCreateNestedManyWithoutCategoriesInput
  ParentCategory: CategoryCreateNestedOneWithoutSubCategoriesInput
  SubCategories: CategoryCreateNestedManyWithoutParentCategoryInput
}

input ClothSizeCreateNestedManyWithoutCategoriesInput {
  create: [ClothSizeCreateWithoutCategoriesInput!]
  connectOrCreate: [ClothSizeCreateOrConnectWithoutCategoriesInput!]
  connect: [ClothSizeWhereUniqueInput!]
}

input ClothSizeCreateWithoutCategoriesInput {
  id: String
  name: String
  rank: Int
  SizeModel: SizeModel
  Cloth_clothSize_cloth: ClothCreateNestedManyWithoutClothSizesInput
  Person_clothSize_persons: PersonCreateNestedManyWithoutClothSizesInput
  ComparableTo: ClothSizeCreateNestedManyWithoutClothSizeInput
  ClothSize: ClothSizeCreateNestedManyWithoutComparableToInput
}

input ClothCreateNestedManyWithoutClothSizesInput {
  create: [ClothCreateWithoutClothSizesInput!]
  connectOrCreate: [ClothCreateOrConnectWithoutClothSizesInput!]
  connect: [ClothWhereUniqueInput!]
}

input ClothCreateWithoutClothSizesInput {
  id: String
  code: String
  Material: MaterialCreateNestedOneWithoutCloth_material_clothsInput
  Item: ItemCreateNestedOneWithoutCloth_item_clothInput!
  ClothStyles: ClothStyleCreateNestedManyWithoutItem_clothStyle_itemsInput
  History: HistoryCreateNestedOneWithoutCloth_history_clothInput
  Wardrobe: WardrobeCreateNestedOneWithoutClothsInput
}

input ClothStyleCreateNestedManyWithoutItem_clothStyle_itemsInput {
  create: [ClothStyleCreateWithoutItem_clothStyle_itemsInput!]
  connectOrCreate: [ClothStyleCreateOrConnectWithoutItem_clothStyle_itemsInput!]
  connect: [ClothStyleWhereUniqueInput!]
}

input ClothStyleCreateWithoutItem_clothStyle_itemsInput {
  id: String
  name: String
  Person_clothStyle_persons: PersonCreateNestedManyWithoutClothStylesInput
}

input PersonCreateNestedManyWithoutClothStylesInput {
  create: [PersonCreateWithoutClothStylesInput!]
  connectOrCreate: [PersonCreateOrConnectWithoutClothStylesInput!]
  connect: [PersonWhereUniqueInput!]
}

input PersonCreateWithoutClothStylesInput {
  id: String!
  email: String
  birthday: DateTime
  firstName: String
  lastName: String
  Gender: GenderCreateNestedOneWithoutProfile_gender_profilesInput
  ItemGenders: ItemGenderCreateNestedManyWithoutPerson_itemGender_personsInput
  History: HistoryCreateNestedOneWithoutUser_history_userInput
  Telephone: TelephoneCreateNestedOneWithoutPerson_telephone_personInput
  Address: AddressCreateNestedManyWithoutPersonInput
  Picture: PictureCreateNestedOneWithoutPersonInput
  ClothSizes: ClothSizeCreateNestedManyWithoutPerson_clothSize_personsInput
  Event_who_events: EventCreateNestedManyWithoutWhoInput
  Item_owner_items: ItemCreateNestedManyWithoutOwnerInput
  Channel: ChannelCreateNestedOneWithoutParticipantsInput
  TradePackage_wantedBy_tradePackages: TradePackageCreateNestedManyWithoutWantedByInput
  TradePackage_from_tradePackages: TradePackageCreateNestedManyWithoutFromInput
  Rating_person_ratings: RatingCreateNestedManyWithoutFromInput
}

input GenderCreateNestedOneWithoutProfile_gender_profilesInput {
  create: GenderCreateWithoutProfile_gender_profilesInput
  connectOrCreate: GenderCreateOrConnectWithoutProfile_gender_profilesInput
  connect: GenderWhereUniqueInput
}

input GenderCreateWithoutProfile_gender_profilesInput {
  id: String
  name: String
}

input GenderCreateOrConnectWithoutProfile_gender_profilesInput {
  where: GenderWhereUniqueInput!
  create: GenderCreateWithoutProfile_gender_profilesInput!
}

input ItemGenderCreateNestedManyWithoutPerson_itemGender_personsInput {
  create: [ItemGenderCreateWithoutPerson_itemGender_personsInput!]
  connectOrCreate: [ItemGenderCreateOrConnectWithoutPerson_itemGender_personsInput!]
  connect: [ItemGenderWhereUniqueInput!]
}

input ItemGenderCreateWithoutPerson_itemGender_personsInput {
  id: String
  name: String
  rank: Int
  Items_itemGender_items: ItemCreateNestedManyWithoutItemGendersInput
}

input ItemCreateNestedManyWithoutItemGendersInput {
  create: [ItemCreateWithoutItemGendersInput!]
  connectOrCreate: [ItemCreateOrConnectWithoutItemGendersInput!]
  connect: [ItemWhereUniqueInput!]
}

input ItemCreateWithoutItemGendersInput {
  id: String
  active: Boolean
  description: String
  Category: CategoryCreateNestedOneWithoutItem_category_itemsInput!
  Value: MoneyCreateNestedOneWithoutItem_value_itemInput
  Colors: ColorCreateNestedManyWithoutItem_color_itemsInput
  Pictures: PictureCreateNestedManyWithoutItem_picture_itemInput
  Condition: ConditionCreateNestedOneWithoutItem_condition_itemsInput
  Owner: PersonCreateNestedOneWithoutItem_owner_itemsInput
  Booster: BoosterCreateNestedManyWithoutItem_booster_itemInput
  Cloth_item_cloth: ClothCreateNestedOneWithoutItemInput
  TradePackage_item_tradePackages: TradePackageCreateNestedManyWithoutItemsInput
}

input MoneyCreateNestedOneWithoutItem_value_itemInput {
  create: MoneyCreateWithoutItem_value_itemInput
  connectOrCreate: MoneyCreateOrConnectWithoutItem_value_itemInput
  connect: MoneyWhereUniqueInput
}

input MoneyCreateWithoutItem_value_itemInput {
  id: String
  value: Float
  Currency: Currency
  History: HistoryCreateNestedOneWithoutMoney_history_moneyInput
  SubscriptionPlan_money_subscriptionPlans: SubscriptionPlanCreateNestedOneWithoutStandardPriceInput
  Subscription_money_subscription: SubscriptionCreateNestedOneWithoutPriceInput
}

input HistoryCreateNestedOneWithoutMoney_history_moneyInput {
  create: HistoryCreateWithoutMoney_history_moneyInput
  connectOrCreate: HistoryCreateOrConnectWithoutMoney_history_moneyInput
  connect: HistoryWhereUniqueInput
}

input HistoryCreateWithoutMoney_history_moneyInput {
  id: String
  Created: EventCreateNestedOneWithoutHistory_created_historyInput
  Updated: EventCreateNestedManyWithoutHistory_updated_historyInput
  Deleted: EventCreateNestedOneWithoutHistory_deleted_historyInput
  User_history_user: PersonCreateNestedOneWithoutHistoryInput
  Cloth_history_cloth: ClothCreateNestedOneWithoutHistoryInput
}

input EventCreateNestedOneWithoutHistory_created_historyInput {
  create: EventCreateWithoutHistory_created_historyInput
  connectOrCreate: EventCreateOrConnectWithoutHistory_created_historyInput
  connect: EventWhereUniqueInput
}

input EventCreateWithoutHistory_created_historyInput {
  id: String
  when: DateTime
  what: String!
  from: JSON
  to: JSON
  Who: PersonCreateNestedOneWithoutEvent_who_eventsInput
  History_updated_history: HistoryCreateNestedOneWithoutUpdatedInput
  History_deleted_history: HistoryCreateNestedOneWithoutDeletedInput
}

input PersonCreateNestedOneWithoutEvent_who_eventsInput {
  create: PersonCreateWithoutEvent_who_eventsInput
  connectOrCreate: PersonCreateOrConnectWithoutEvent_who_eventsInput
  connect: PersonWhereUniqueInput
}

input PersonCreateWithoutEvent_who_eventsInput {
  id: String!
  email: String
  birthday: DateTime
  firstName: String
  lastName: String
  Gender: GenderCreateNestedOneWithoutProfile_gender_profilesInput
  ItemGenders: ItemGenderCreateNestedManyWithoutPerson_itemGender_personsInput
  History: HistoryCreateNestedOneWithoutUser_history_userInput
  Telephone: TelephoneCreateNestedOneWithoutPerson_telephone_personInput
  Address: AddressCreateNestedManyWithoutPersonInput
  Picture: PictureCreateNestedOneWithoutPersonInput
  ClothSizes: ClothSizeCreateNestedManyWithoutPerson_clothSize_personsInput
  ClothStyles: ClothStyleCreateNestedManyWithoutPerson_clothStyle_personsInput
  Item_owner_items: ItemCreateNestedManyWithoutOwnerInput
  Channel: ChannelCreateNestedOneWithoutParticipantsInput
  TradePackage_wantedBy_tradePackages: TradePackageCreateNestedManyWithoutWantedByInput
  TradePackage_from_tradePackages: TradePackageCreateNestedManyWithoutFromInput
  Rating_person_ratings: RatingCreateNestedManyWithoutFromInput
}

input HistoryCreateNestedOneWithoutUser_history_userInput {
  create: HistoryCreateWithoutUser_history_userInput
  connectOrCreate: HistoryCreateOrConnectWithoutUser_history_userInput
  connect: HistoryWhereUniqueInput
}

input HistoryCreateWithoutUser_history_userInput {
  id: String
  Created: EventCreateNestedOneWithoutHistory_created_historyInput
  Updated: EventCreateNestedManyWithoutHistory_updated_historyInput
  Deleted: EventCreateNestedOneWithoutHistory_deleted_historyInput
  Money_history_money: MoneyCreateNestedOneWithoutHistoryInput
  Cloth_history_cloth: ClothCreateNestedOneWithoutHistoryInput
}

input EventCreateNestedManyWithoutHistory_updated_historyInput {
  create: [EventCreateWithoutHistory_updated_historyInput!]
  connectOrCreate: [EventCreateOrConnectWithoutHistory_updated_historyInput!]
  createMany: EventCreateManyHistory_updated_historyInputEnvelope
  connect: [EventWhereUniqueInput!]
}

input EventCreateWithoutHistory_updated_historyInput {
  id: String
  when: DateTime
  what: String!
  from: JSON
  to: JSON
  Who: PersonCreateNestedOneWithoutEvent_who_eventsInput
  History_created_history: HistoryCreateNestedOneWithoutCreatedInput
  History_deleted_history: HistoryCreateNestedOneWithoutDeletedInput
}

input HistoryCreateNestedOneWithoutCreatedInput {
  create: HistoryCreateWithoutCreatedInput
  connectOrCreate: HistoryCreateOrConnectWithoutCreatedInput
  connect: HistoryWhereUniqueInput
}

input HistoryCreateWithoutCreatedInput {
  id: String
  Updated: EventCreateNestedManyWithoutHistory_updated_historyInput
  Deleted: EventCreateNestedOneWithoutHistory_deleted_historyInput
  User_history_user: PersonCreateNestedOneWithoutHistoryInput
  Money_history_money: MoneyCreateNestedOneWithoutHistoryInput
  Cloth_history_cloth: ClothCreateNestedOneWithoutHistoryInput
}

input EventCreateNestedOneWithoutHistory_deleted_historyInput {
  create: EventCreateWithoutHistory_deleted_historyInput
  connectOrCreate: EventCreateOrConnectWithoutHistory_deleted_historyInput
  connect: EventWhereUniqueInput
}

input EventCreateWithoutHistory_deleted_historyInput {
  id: String
  when: DateTime
  what: String!
  from: JSON
  to: JSON
  Who: PersonCreateNestedOneWithoutEvent_who_eventsInput
  History_created_history: HistoryCreateNestedOneWithoutCreatedInput
  History_updated_history: HistoryCreateNestedOneWithoutUpdatedInput
}

input HistoryCreateNestedOneWithoutUpdatedInput {
  create: HistoryCreateWithoutUpdatedInput
  connectOrCreate: HistoryCreateOrConnectWithoutUpdatedInput
  connect: HistoryWhereUniqueInput
}

input HistoryCreateWithoutUpdatedInput {
  id: String
  Created: EventCreateNestedOneWithoutHistory_created_historyInput
  Deleted: EventCreateNestedOneWithoutHistory_deleted_historyInput
  User_history_user: PersonCreateNestedOneWithoutHistoryInput
  Money_history_money: MoneyCreateNestedOneWithoutHistoryInput
  Cloth_history_cloth: ClothCreateNestedOneWithoutHistoryInput
}

input PersonCreateNestedOneWithoutHistoryInput {
  create: PersonCreateWithoutHistoryInput
  connectOrCreate: PersonCreateOrConnectWithoutHistoryInput
  connect: PersonWhereUniqueInput
}

input PersonCreateWithoutHistoryInput {
  id: String!
  email: String
  birthday: DateTime
  firstName: String
  lastName: String
  Gender: GenderCreateNestedOneWithoutProfile_gender_profilesInput
  ItemGenders: ItemGenderCreateNestedManyWithoutPerson_itemGender_personsInput
  Telephone: TelephoneCreateNestedOneWithoutPerson_telephone_personInput
  Address: AddressCreateNestedManyWithoutPersonInput
  Picture: PictureCreateNestedOneWithoutPersonInput
  ClothSizes: ClothSizeCreateNestedManyWithoutPerson_clothSize_personsInput
  ClothStyles: ClothStyleCreateNestedManyWithoutPerson_clothStyle_personsInput
  Event_who_events: EventCreateNestedManyWithoutWhoInput
  Item_owner_items: ItemCreateNestedManyWithoutOwnerInput
  Channel: ChannelCreateNestedOneWithoutParticipantsInput
  TradePackage_wantedBy_tradePackages: TradePackageCreateNestedManyWithoutWantedByInput
  TradePackage_from_tradePackages: TradePackageCreateNestedManyWithoutFromInput
  Rating_person_ratings: RatingCreateNestedManyWithoutFromInput
}

input TelephoneCreateNestedOneWithoutPerson_telephone_personInput {
  create: TelephoneCreateWithoutPerson_telephone_personInput
  connectOrCreate: TelephoneCreateOrConnectWithoutPerson_telephone_personInput
  connect: TelephoneWhereUniqueInput
}

input TelephoneCreateWithoutPerson_telephone_personInput {
  id: String
  telephoneNumber: String
}

input TelephoneCreateOrConnectWithoutPerson_telephone_personInput {
  where: TelephoneWhereUniqueInput!
  create: TelephoneCreateWithoutPerson_telephone_personInput!
}

input AddressCreateNestedManyWithoutPersonInput {
  create: [AddressCreateWithoutPersonInput!]
  connectOrCreate: [AddressCreateOrConnectWithoutPersonInput!]
  createMany: AddressCreateManyPersonInputEnvelope
  connect: [AddressWhereUniqueInput!]
}

input AddressCreateWithoutPersonInput {
  id: String
  line1: String
  line2: String
  city: String
  province: String
  zip: String
  Country: CountryCreateNestedOneWithoutAddress_county_addressesInput
  Wardrobes: WardrobeCreateNestedManyWithoutAddressInput
}

input CountryCreateNestedOneWithoutAddress_county_addressesInput {
  create: CountryCreateWithoutAddress_county_addressesInput
  connectOrCreate: CountryCreateOrConnectWithoutAddress_county_addressesInput
  connect: CountryWhereUniqueInput
}

input CountryCreateWithoutAddress_county_addressesInput {
  id: String
  name: String!
}

input CountryCreateOrConnectWithoutAddress_county_addressesInput {
  where: CountryWhereUniqueInput!
  create: CountryCreateWithoutAddress_county_addressesInput!
}

input WardrobeCreateNestedManyWithoutAddressInput {
  create: [WardrobeCreateWithoutAddressInput!]
  connectOrCreate: [WardrobeCreateOrConnectWithoutAddressInput!]
  createMany: WardrobeCreateManyAddressInputEnvelope
  connect: [WardrobeWhereUniqueInput!]
}

input WardrobeCreateWithoutAddressInput {
  id: String
  name: String
  Cloths: ClothCreateNestedManyWithoutWardrobeInput
}

input ClothCreateNestedManyWithoutWardrobeInput {
  create: [ClothCreateWithoutWardrobeInput!]
  connectOrCreate: [ClothCreateOrConnectWithoutWardrobeInput!]
  createMany: ClothCreateManyWardrobeInputEnvelope
  connect: [ClothWhereUniqueInput!]
}

input ClothCreateWithoutWardrobeInput {
  id: String
  code: String
  Material: MaterialCreateNestedOneWithoutCloth_material_clothsInput
  Item: ItemCreateNestedOneWithoutCloth_item_clothInput!
  ClothSizes: ClothSizeCreateNestedManyWithoutCloth_clothSize_clothInput
  ClothStyles: ClothStyleCreateNestedManyWithoutItem_clothStyle_itemsInput
  History: HistoryCreateNestedOneWithoutCloth_history_clothInput
}

input ClothSizeCreateNestedManyWithoutCloth_clothSize_clothInput {
  create: [ClothSizeCreateWithoutCloth_clothSize_clothInput!]
  connectOrCreate: [ClothSizeCreateOrConnectWithoutCloth_clothSize_clothInput!]
  connect: [ClothSizeWhereUniqueInput!]
}

input ClothSizeCreateWithoutCloth_clothSize_clothInput {
  id: String
  name: String
  rank: Int
  SizeModel: SizeModel
  Categories: CategoryCreateNestedManyWithoutClothSizesInput
  Person_clothSize_persons: PersonCreateNestedManyWithoutClothSizesInput
  ComparableTo: ClothSizeCreateNestedManyWithoutClothSizeInput
  ClothSize: ClothSizeCreateNestedManyWithoutComparableToInput
}

input CategoryCreateNestedManyWithoutClothSizesInput {
  create: [CategoryCreateWithoutClothSizesInput!]
  connectOrCreate: [CategoryCreateOrConnectWithoutClothSizesInput!]
  connect: [CategoryWhereUniqueInput!]
}

input CategoryCreateWithoutClothSizesInput {
  id: String
  name: String
  Brand_category_brands: BrandCreateNestedManyWithoutCategoriesInput
  Item_category_items: ItemCreateNestedManyWithoutCategoryInput
  ParentCategory: CategoryCreateNestedOneWithoutSubCategoriesInput
  SubCategories: CategoryCreateNestedManyWithoutParentCategoryInput
}

input BrandCreateNestedManyWithoutCategoriesInput {
  create: [BrandCreateWithoutCategoriesInput!]
  connectOrCreate: [BrandCreateOrConnectWithoutCategoriesInput!]
  connect: [BrandWhereUniqueInput!]
}

input BrandCreateWithoutCategoriesInput {
  id: String
  name: String
}

input BrandCreateOrConnectWithoutCategoriesInput {
  where: BrandWhereUniqueInput!
  create: BrandCreateWithoutCategoriesInput!
}

input ItemCreateNestedManyWithoutCategoryInput {
  create: [ItemCreateWithoutCategoryInput!]
  connectOrCreate: [ItemCreateOrConnectWithoutCategoryInput!]
  createMany: ItemCreateManyCategoryInputEnvelope
  connect: [ItemWhereUniqueInput!]
}

input ItemCreateWithoutCategoryInput {
  id: String
  active: Boolean
  description: String
  Value: MoneyCreateNestedOneWithoutItem_value_itemInput
  Colors: ColorCreateNestedManyWithoutItem_color_itemsInput
  ItemGenders: ItemGenderCreateNestedManyWithoutItems_itemGender_itemsInput
  Pictures: PictureCreateNestedManyWithoutItem_picture_itemInput
  Condition: ConditionCreateNestedOneWithoutItem_condition_itemsInput
  Owner: PersonCreateNestedOneWithoutItem_owner_itemsInput
  Booster: BoosterCreateNestedManyWithoutItem_booster_itemInput
  Cloth_item_cloth: ClothCreateNestedOneWithoutItemInput
  TradePackage_item_tradePackages: TradePackageCreateNestedManyWithoutItemsInput
}

input ColorCreateNestedManyWithoutItem_color_itemsInput {
  create: [ColorCreateWithoutItem_color_itemsInput!]
  connectOrCreate: [ColorCreateOrConnectWithoutItem_color_itemsInput!]
  connect: [ColorWhereUniqueInput!]
}

input ColorCreateWithoutItem_color_itemsInput {
  id: String
  name: String
  Type: ColorType
}

input ColorCreateOrConnectWithoutItem_color_itemsInput {
  where: ColorWhereUniqueInput!
  create: ColorCreateWithoutItem_color_itemsInput!
}

input ItemGenderCreateNestedManyWithoutItems_itemGender_itemsInput {
  create: [ItemGenderCreateWithoutItems_itemGender_itemsInput!]
  connectOrCreate: [ItemGenderCreateOrConnectWithoutItems_itemGender_itemsInput!]
  connect: [ItemGenderWhereUniqueInput!]
}

input ItemGenderCreateWithoutItems_itemGender_itemsInput {
  id: String
  name: String
  rank: Int
  Person_itemGender_persons: PersonCreateNestedManyWithoutItemGendersInput
}

input PersonCreateNestedManyWithoutItemGendersInput {
  create: [PersonCreateWithoutItemGendersInput!]
  connectOrCreate: [PersonCreateOrConnectWithoutItemGendersInput!]
  connect: [PersonWhereUniqueInput!]
}

input PersonCreateWithoutItemGendersInput {
  id: String!
  email: String
  birthday: DateTime
  firstName: String
  lastName: String
  Gender: GenderCreateNestedOneWithoutProfile_gender_profilesInput
  History: HistoryCreateNestedOneWithoutUser_history_userInput
  Telephone: TelephoneCreateNestedOneWithoutPerson_telephone_personInput
  Address: AddressCreateNestedManyWithoutPersonInput
  Picture: PictureCreateNestedOneWithoutPersonInput
  ClothSizes: ClothSizeCreateNestedManyWithoutPerson_clothSize_personsInput
  ClothStyles: ClothStyleCreateNestedManyWithoutPerson_clothStyle_personsInput
  Event_who_events: EventCreateNestedManyWithoutWhoInput
  Item_owner_items: ItemCreateNestedManyWithoutOwnerInput
  Channel: ChannelCreateNestedOneWithoutParticipantsInput
  TradePackage_wantedBy_tradePackages: TradePackageCreateNestedManyWithoutWantedByInput
  TradePackage_from_tradePackages: TradePackageCreateNestedManyWithoutFromInput
  Rating_person_ratings: RatingCreateNestedManyWithoutFromInput
}

input PictureCreateNestedOneWithoutPersonInput {
  create: PictureCreateWithoutPersonInput
  connectOrCreate: PictureCreateOrConnectWithoutPersonInput
  connect: PictureWhereUniqueInput
}

input PictureCreateWithoutPersonInput {
  id: String
  rank: Int
  LQ: FileCreateNestedOneWithoutFile_lqPictureFile_fileInput
  MQ: FileCreateNestedOneWithoutFile_mqPictureFile_fileInput
  HQ: FileCreateNestedOneWithoutFile_hqPictureFile_fileInput
  Item_picture_item: ItemCreateNestedOneWithoutPicturesInput
}

input FileCreateNestedOneWithoutFile_lqPictureFile_fileInput {
  create: FileCreateWithoutFile_lqPictureFile_fileInput
  connectOrCreate: FileCreateOrConnectWithoutFile_lqPictureFile_fileInput
  connect: FileWhereUniqueInput
}

input FileCreateWithoutFile_lqPictureFile_fileInput {
  id: String
  extension: String
  File_mqPictureFile_file: PictureCreateNestedOneWithoutMQInput
  File_hqPictureFile_file: PictureCreateNestedOneWithoutHQInput
}

input PictureCreateNestedOneWithoutMQInput {
  create: PictureCreateWithoutMQInput
  connectOrCreate: PictureCreateOrConnectWithoutMQInput
  connect: PictureWhereUniqueInput
}

input PictureCreateWithoutMQInput {
  id: String
  rank: Int
  LQ: FileCreateNestedOneWithoutFile_lqPictureFile_fileInput
  HQ: FileCreateNestedOneWithoutFile_hqPictureFile_fileInput
  Person: PersonCreateNestedOneWithoutPictureInput
  Item_picture_item: ItemCreateNestedOneWithoutPicturesInput
}

input FileCreateNestedOneWithoutFile_hqPictureFile_fileInput {
  create: FileCreateWithoutFile_hqPictureFile_fileInput
  connectOrCreate: FileCreateOrConnectWithoutFile_hqPictureFile_fileInput
  connect: FileWhereUniqueInput
}

input FileCreateWithoutFile_hqPictureFile_fileInput {
  id: String
  extension: String
  File_lqPictureFile_file: PictureCreateNestedOneWithoutLQInput
  File_mqPictureFile_file: PictureCreateNestedOneWithoutMQInput
}

input PictureCreateNestedOneWithoutLQInput {
  create: PictureCreateWithoutLQInput
  connectOrCreate: PictureCreateOrConnectWithoutLQInput
  connect: PictureWhereUniqueInput
}

input PictureCreateWithoutLQInput {
  id: String
  rank: Int
  MQ: FileCreateNestedOneWithoutFile_mqPictureFile_fileInput
  HQ: FileCreateNestedOneWithoutFile_hqPictureFile_fileInput
  Person: PersonCreateNestedOneWithoutPictureInput
  Item_picture_item: ItemCreateNestedOneWithoutPicturesInput
}

input FileCreateNestedOneWithoutFile_mqPictureFile_fileInput {
  create: FileCreateWithoutFile_mqPictureFile_fileInput
  connectOrCreate: FileCreateOrConnectWithoutFile_mqPictureFile_fileInput
  connect: FileWhereUniqueInput
}

input FileCreateWithoutFile_mqPictureFile_fileInput {
  id: String
  extension: String
  File_lqPictureFile_file: PictureCreateNestedOneWithoutLQInput
  File_hqPictureFile_file: PictureCreateNestedOneWithoutHQInput
}

input PictureCreateNestedOneWithoutHQInput {
  create: PictureCreateWithoutHQInput
  connectOrCreate: PictureCreateOrConnectWithoutHQInput
  connect: PictureWhereUniqueInput
}

input PictureCreateWithoutHQInput {
  id: String
  rank: Int
  LQ: FileCreateNestedOneWithoutFile_lqPictureFile_fileInput
  MQ: FileCreateNestedOneWithoutFile_mqPictureFile_fileInput
  Person: PersonCreateNestedOneWithoutPictureInput
  Item_picture_item: ItemCreateNestedOneWithoutPicturesInput
}

input PersonCreateNestedOneWithoutPictureInput {
  create: PersonCreateWithoutPictureInput
  connectOrCreate: PersonCreateOrConnectWithoutPictureInput
  connect: PersonWhereUniqueInput
}

input PersonCreateWithoutPictureInput {
  id: String!
  email: String
  birthday: DateTime
  firstName: String
  lastName: String
  Gender: GenderCreateNestedOneWithoutProfile_gender_profilesInput
  ItemGenders: ItemGenderCreateNestedManyWithoutPerson_itemGender_personsInput
  History: HistoryCreateNestedOneWithoutUser_history_userInput
  Telephone: TelephoneCreateNestedOneWithoutPerson_telephone_personInput
  Address: AddressCreateNestedManyWithoutPersonInput
  ClothSizes: ClothSizeCreateNestedManyWithoutPerson_clothSize_personsInput
  ClothStyles: ClothStyleCreateNestedManyWithoutPerson_clothStyle_personsInput
  Event_who_events: EventCreateNestedManyWithoutWhoInput
  Item_owner_items: ItemCreateNestedManyWithoutOwnerInput
  Channel: ChannelCreateNestedOneWithoutParticipantsInput
  TradePackage_wantedBy_tradePackages: TradePackageCreateNestedManyWithoutWantedByInput
  TradePackage_from_tradePackages: TradePackageCreateNestedManyWithoutFromInput
  Rating_person_ratings: RatingCreateNestedManyWithoutFromInput
}

input ClothSizeCreateNestedManyWithoutPerson_clothSize_personsInput {
  create: [ClothSizeCreateWithoutPerson_clothSize_personsInput!]
  connectOrCreate: [ClothSizeCreateOrConnectWithoutPerson_clothSize_personsInput!]
  connect: [ClothSizeWhereUniqueInput!]
}

input ClothSizeCreateWithoutPerson_clothSize_personsInput {
  id: String
  name: String
  rank: Int
  SizeModel: SizeModel
  Categories: CategoryCreateNestedManyWithoutClothSizesInput
  Cloth_clothSize_cloth: ClothCreateNestedManyWithoutClothSizesInput
  ComparableTo: ClothSizeCreateNestedManyWithoutClothSizeInput
  ClothSize: ClothSizeCreateNestedManyWithoutComparableToInput
}

input ClothSizeCreateNestedManyWithoutClothSizeInput {
  create: [ClothSizeCreateWithoutClothSizeInput!]
  connectOrCreate: [ClothSizeCreateOrConnectWithoutClothSizeInput!]
  connect: [ClothSizeWhereUniqueInput!]
}

input ClothSizeCreateWithoutClothSizeInput {
  id: String
  name: String
  rank: Int
  SizeModel: SizeModel
  Categories: CategoryCreateNestedManyWithoutClothSizesInput
  Cloth_clothSize_cloth: ClothCreateNestedManyWithoutClothSizesInput
  Person_clothSize_persons: PersonCreateNestedManyWithoutClothSizesInput
  ComparableTo: ClothSizeCreateNestedManyWithoutClothSizeInput
}

input PersonCreateNestedManyWithoutClothSizesInput {
  create: [PersonCreateWithoutClothSizesInput!]
  connectOrCreate: [PersonCreateOrConnectWithoutClothSizesInput!]
  connect: [PersonWhereUniqueInput!]
}

input PersonCreateWithoutClothSizesInput {
  id: String!
  email: String
  birthday: DateTime
  firstName: String
  lastName: String
  Gender: GenderCreateNestedOneWithoutProfile_gender_profilesInput
  ItemGenders: ItemGenderCreateNestedManyWithoutPerson_itemGender_personsInput
  History: HistoryCreateNestedOneWithoutUser_history_userInput
  Telephone: TelephoneCreateNestedOneWithoutPerson_telephone_personInput
  Address: AddressCreateNestedManyWithoutPersonInput
  Picture: PictureCreateNestedOneWithoutPersonInput
  ClothStyles: ClothStyleCreateNestedManyWithoutPerson_clothStyle_personsInput
  Event_who_events: EventCreateNestedManyWithoutWhoInput
  Item_owner_items: ItemCreateNestedManyWithoutOwnerInput
  Channel: ChannelCreateNestedOneWithoutParticipantsInput
  TradePackage_wantedBy_tradePackages: TradePackageCreateNestedManyWithoutWantedByInput
  TradePackage_from_tradePackages: TradePackageCreateNestedManyWithoutFromInput
  Rating_person_ratings: RatingCreateNestedManyWithoutFromInput
}

input ClothStyleCreateNestedManyWithoutPerson_clothStyle_personsInput {
  create: [ClothStyleCreateWithoutPerson_clothStyle_personsInput!]
  connectOrCreate: [ClothStyleCreateOrConnectWithoutPerson_clothStyle_personsInput!]
  connect: [ClothStyleWhereUniqueInput!]
}

input ClothStyleCreateWithoutPerson_clothStyle_personsInput {
  id: String
  name: String
  Item_clothStyle_items: ClothCreateNestedManyWithoutClothStylesInput
}

input ClothStyleCreateOrConnectWithoutPerson_clothStyle_personsInput {
  where: ClothStyleWhereUniqueInput!
  create: ClothStyleCreateWithoutPerson_clothStyle_personsInput!
}

input EventCreateNestedManyWithoutWhoInput {
  create: [EventCreateWithoutWhoInput!]
  connectOrCreate: [EventCreateOrConnectWithoutWhoInput!]
  createMany: EventCreateManyWhoInputEnvelope
  connect: [EventWhereUniqueInput!]
}

input EventCreateWithoutWhoInput {
  id: String
  when: DateTime
  what: String!
  from: JSON
  to: JSON
  History_created_history: HistoryCreateNestedOneWithoutCreatedInput
  History_updated_history: HistoryCreateNestedOneWithoutUpdatedInput
  History_deleted_history: HistoryCreateNestedOneWithoutDeletedInput
}

input HistoryCreateNestedOneWithoutDeletedInput {
  create: HistoryCreateWithoutDeletedInput
  connectOrCreate: HistoryCreateOrConnectWithoutDeletedInput
  connect: HistoryWhereUniqueInput
}

input HistoryCreateWithoutDeletedInput {
  id: String
  Created: EventCreateNestedOneWithoutHistory_created_historyInput
  Updated: EventCreateNestedManyWithoutHistory_updated_historyInput
  User_history_user: PersonCreateNestedOneWithoutHistoryInput
  Money_history_money: MoneyCreateNestedOneWithoutHistoryInput
  Cloth_history_cloth: ClothCreateNestedOneWithoutHistoryInput
}

input MoneyCreateNestedOneWithoutHistoryInput {
  create: MoneyCreateWithoutHistoryInput
  connectOrCreate: MoneyCreateOrConnectWithoutHistoryInput
  connect: MoneyWhereUniqueInput
}

input MoneyCreateWithoutHistoryInput {
  id: String
  value: Float
  Currency: Currency
  Item_value_item: ItemCreateNestedOneWithoutValueInput
  SubscriptionPlan_money_subscriptionPlans: SubscriptionPlanCreateNestedOneWithoutStandardPriceInput
  Subscription_money_subscription: SubscriptionCreateNestedOneWithoutPriceInput
}

input ItemCreateNestedOneWithoutValueInput {
  create: ItemCreateWithoutValueInput
  connectOrCreate: ItemCreateOrConnectWithoutValueInput
  connect: ItemWhereUniqueInput
}

input ItemCreateWithoutValueInput {
  id: String
  active: Boolean
  description: String
  Category: CategoryCreateNestedOneWithoutItem_category_itemsInput!
  Colors: ColorCreateNestedManyWithoutItem_color_itemsInput
  ItemGenders: ItemGenderCreateNestedManyWithoutItems_itemGender_itemsInput
  Pictures: PictureCreateNestedManyWithoutItem_picture_itemInput
  Condition: ConditionCreateNestedOneWithoutItem_condition_itemsInput
  Owner: PersonCreateNestedOneWithoutItem_owner_itemsInput
  Booster: BoosterCreateNestedManyWithoutItem_booster_itemInput
  Cloth_item_cloth: ClothCreateNestedOneWithoutItemInput
  TradePackage_item_tradePackages: TradePackageCreateNestedManyWithoutItemsInput
}

input PictureCreateNestedManyWithoutItem_picture_itemInput {
  create: [PictureCreateWithoutItem_picture_itemInput!]
  connectOrCreate: [PictureCreateOrConnectWithoutItem_picture_itemInput!]
  createMany: PictureCreateManyItem_picture_itemInputEnvelope
  connect: [PictureWhereUniqueInput!]
}

input PictureCreateWithoutItem_picture_itemInput {
  id: String
  rank: Int
  LQ: FileCreateNestedOneWithoutFile_lqPictureFile_fileInput
  MQ: FileCreateNestedOneWithoutFile_mqPictureFile_fileInput
  HQ: FileCreateNestedOneWithoutFile_hqPictureFile_fileInput
  Person: PersonCreateNestedOneWithoutPictureInput
}

input PictureCreateOrConnectWithoutItem_picture_itemInput {
  where: PictureWhereUniqueInput!
  create: PictureCreateWithoutItem_picture_itemInput!
}

input PictureCreateManyItem_picture_itemInputEnvelope {
  data: [PictureCreateManyItem_picture_itemInput!]!
  skipDuplicates: Boolean
}

input PictureCreateManyItem_picture_itemInput {
  id: String
  rank: Int
}

input ConditionCreateNestedOneWithoutItem_condition_itemsInput {
  create: ConditionCreateWithoutItem_condition_itemsInput
  connectOrCreate: ConditionCreateOrConnectWithoutItem_condition_itemsInput
  connect: ConditionWhereUniqueInput
}

input ConditionCreateWithoutItem_condition_itemsInput {
  id: String
  name: String!
}

input ConditionCreateOrConnectWithoutItem_condition_itemsInput {
  where: ConditionWhereUniqueInput!
  create: ConditionCreateWithoutItem_condition_itemsInput!
}

input PersonCreateNestedOneWithoutItem_owner_itemsInput {
  create: PersonCreateWithoutItem_owner_itemsInput
  connectOrCreate: PersonCreateOrConnectWithoutItem_owner_itemsInput
  connect: PersonWhereUniqueInput
}

input PersonCreateWithoutItem_owner_itemsInput {
  id: String!
  email: String
  birthday: DateTime
  firstName: String
  lastName: String
  Gender: GenderCreateNestedOneWithoutProfile_gender_profilesInput
  ItemGenders: ItemGenderCreateNestedManyWithoutPerson_itemGender_personsInput
  History: HistoryCreateNestedOneWithoutUser_history_userInput
  Telephone: TelephoneCreateNestedOneWithoutPerson_telephone_personInput
  Address: AddressCreateNestedManyWithoutPersonInput
  Picture: PictureCreateNestedOneWithoutPersonInput
  ClothSizes: ClothSizeCreateNestedManyWithoutPerson_clothSize_personsInput
  ClothStyles: ClothStyleCreateNestedManyWithoutPerson_clothStyle_personsInput
  Event_who_events: EventCreateNestedManyWithoutWhoInput
  Channel: ChannelCreateNestedOneWithoutParticipantsInput
  TradePackage_wantedBy_tradePackages: TradePackageCreateNestedManyWithoutWantedByInput
  TradePackage_from_tradePackages: TradePackageCreateNestedManyWithoutFromInput
  Rating_person_ratings: RatingCreateNestedManyWithoutFromInput
}

input ChannelCreateNestedOneWithoutParticipantsInput {
  create: ChannelCreateWithoutParticipantsInput
  connectOrCreate: ChannelCreateOrConnectWithoutParticipantsInput
  connect: ChannelWhereUniqueInput
}

input ChannelCreateWithoutParticipantsInput {
  id: String
}

input ChannelCreateOrConnectWithoutParticipantsInput {
  where: ChannelWhereUniqueInput!
  create: ChannelCreateWithoutParticipantsInput!
}

input TradePackageCreateNestedManyWithoutWantedByInput {
  create: [TradePackageCreateWithoutWantedByInput!]
  connectOrCreate: [TradePackageCreateOrConnectWithoutWantedByInput!]
  connect: [TradePackageWhereUniqueInput!]
}

input TradePackageCreateWithoutWantedByInput {
  id: String
  From: PersonCreateNestedOneWithoutTradePackage_from_tradePackagesInput
  Items: ItemCreateNestedManyWithoutTradePackage_item_tradePackagesInput
  Offer_tradePackage_offers: OfferCreateNestedManyWithoutTradePackagesInput
}

input PersonCreateNestedOneWithoutTradePackage_from_tradePackagesInput {
  create: PersonCreateWithoutTradePackage_from_tradePackagesInput
  connectOrCreate: PersonCreateOrConnectWithoutTradePackage_from_tradePackagesInput
  connect: PersonWhereUniqueInput
}

input PersonCreateWithoutTradePackage_from_tradePackagesInput {
  id: String!
  email: String
  birthday: DateTime
  firstName: String
  lastName: String
  Gender: GenderCreateNestedOneWithoutProfile_gender_profilesInput
  ItemGenders: ItemGenderCreateNestedManyWithoutPerson_itemGender_personsInput
  History: HistoryCreateNestedOneWithoutUser_history_userInput
  Telephone: TelephoneCreateNestedOneWithoutPerson_telephone_personInput
  Address: AddressCreateNestedManyWithoutPersonInput
  Picture: PictureCreateNestedOneWithoutPersonInput
  ClothSizes: ClothSizeCreateNestedManyWithoutPerson_clothSize_personsInput
  ClothStyles: ClothStyleCreateNestedManyWithoutPerson_clothStyle_personsInput
  Event_who_events: EventCreateNestedManyWithoutWhoInput
  Item_owner_items: ItemCreateNestedManyWithoutOwnerInput
  Channel: ChannelCreateNestedOneWithoutParticipantsInput
  TradePackage_wantedBy_tradePackages: TradePackageCreateNestedManyWithoutWantedByInput
  Rating_person_ratings: RatingCreateNestedManyWithoutFromInput
}

input ItemCreateNestedManyWithoutOwnerInput {
  create: [ItemCreateWithoutOwnerInput!]
  connectOrCreate: [ItemCreateOrConnectWithoutOwnerInput!]
  createMany: ItemCreateManyOwnerInputEnvelope
  connect: [ItemWhereUniqueInput!]
}

input ItemCreateWithoutOwnerInput {
  id: String
  active: Boolean
  description: String
  Category: CategoryCreateNestedOneWithoutItem_category_itemsInput!
  Value: MoneyCreateNestedOneWithoutItem_value_itemInput
  Colors: ColorCreateNestedManyWithoutItem_color_itemsInput
  ItemGenders: ItemGenderCreateNestedManyWithoutItems_itemGender_itemsInput
  Pictures: PictureCreateNestedManyWithoutItem_picture_itemInput
  Condition: ConditionCreateNestedOneWithoutItem_condition_itemsInput
  Booster: BoosterCreateNestedManyWithoutItem_booster_itemInput
  Cloth_item_cloth: ClothCreateNestedOneWithoutItemInput
  TradePackage_item_tradePackages: TradePackageCreateNestedManyWithoutItemsInput
}

input BoosterCreateNestedManyWithoutItem_booster_itemInput {
  create: [BoosterCreateWithoutItem_booster_itemInput!]
  connectOrCreate: [BoosterCreateOrConnectWithoutItem_booster_itemInput!]
  createMany: BoosterCreateManyItem_booster_itemInputEnvelope
  connect: [BoosterWhereUniqueInput!]
}

input BoosterCreateWithoutItem_booster_itemInput {
  id: String
  Timespan: TimespanCreateNestedOneWithoutBooster_timespan_boosterInput
}

input TimespanCreateNestedOneWithoutBooster_timespan_boosterInput {
  create: TimespanCreateWithoutBooster_timespan_boosterInput
  connectOrCreate: TimespanCreateOrConnectWithoutBooster_timespan_boosterInput
  connect: TimespanWhereUniqueInput
}

input TimespanCreateWithoutBooster_timespan_boosterInput {
  id: String
  start: DateTime
  end: DateTime
  Subscription_timespan_subscription: SubscriptionCreateNestedOneWithoutTimespanInput
}

input SubscriptionCreateNestedOneWithoutTimespanInput {
  create: SubscriptionCreateWithoutTimespanInput
  connectOrCreate: SubscriptionCreateOrConnectWithoutTimespanInput
  connect: SubscriptionWhereUniqueInput
}

input SubscriptionCreateWithoutTimespanInput {
  id: String
  Price: MoneyCreateNestedOneWithoutSubscription_money_subscriptionInput!
  Type: SubscriptionPlanCreateNestedOneWithoutSubscription_subscriptionType_subscriptionInput
}

input MoneyCreateNestedOneWithoutSubscription_money_subscriptionInput {
  create: MoneyCreateWithoutSubscription_money_subscriptionInput
  connectOrCreate: MoneyCreateOrConnectWithoutSubscription_money_subscriptionInput
  connect: MoneyWhereUniqueInput
}

input MoneyCreateWithoutSubscription_money_subscriptionInput {
  id: String
  value: Float
  Currency: Currency
  History: HistoryCreateNestedOneWithoutMoney_history_moneyInput
  Item_value_item: ItemCreateNestedOneWithoutValueInput
  SubscriptionPlan_money_subscriptionPlans: SubscriptionPlanCreateNestedOneWithoutStandardPriceInput
}

input SubscriptionPlanCreateNestedOneWithoutStandardPriceInput {
  create: SubscriptionPlanCreateWithoutStandardPriceInput
  connectOrCreate: SubscriptionPlanCreateOrConnectWithoutStandardPriceInput
  connect: SubscriptionPlanWhereUniqueInput
}

input SubscriptionPlanCreateWithoutStandardPriceInput {
  id: String
  name: String
  StandardDuration: DurationCreateNestedOneWithoutSubscriptionPlan_duration_subscriptionPlanInput!
  Subscription_subscriptionType_subscription: SubscriptionCreateNestedManyWithoutTypeInput
}

input DurationCreateNestedOneWithoutSubscriptionPlan_duration_subscriptionPlanInput {
  create: DurationCreateWithoutSubscriptionPlan_duration_subscriptionPlanInput
  connectOrCreate: DurationCreateOrConnectWithoutSubscriptionPlan_duration_subscriptionPlanInput
  connect: DurationWhereUniqueInput
}

input DurationCreateWithoutSubscriptionPlan_duration_subscriptionPlanInput {
  id: String
  seconds: Int
  minutes: Int
  hours: Int
  days: Int
  weeks: Int
  months: Int
  years: Int
}

input DurationCreateOrConnectWithoutSubscriptionPlan_duration_subscriptionPlanInput {
  where: DurationWhereUniqueInput!
  create: DurationCreateWithoutSubscriptionPlan_duration_subscriptionPlanInput!
}

input SubscriptionCreateNestedManyWithoutTypeInput {
  create: [SubscriptionCreateWithoutTypeInput!]
  connectOrCreate: [SubscriptionCreateOrConnectWithoutTypeInput!]
  createMany: SubscriptionCreateManyTypeInputEnvelope
  connect: [SubscriptionWhereUniqueInput!]
}

input SubscriptionCreateWithoutTypeInput {
  id: String
  Price: MoneyCreateNestedOneWithoutSubscription_money_subscriptionInput!
  Timespan: TimespanCreateNestedOneWithoutSubscription_timespan_subscriptionInput
}

input TimespanCreateNestedOneWithoutSubscription_timespan_subscriptionInput {
  create: TimespanCreateWithoutSubscription_timespan_subscriptionInput
  connectOrCreate: TimespanCreateOrConnectWithoutSubscription_timespan_subscriptionInput
  connect: TimespanWhereUniqueInput
}

input TimespanCreateWithoutSubscription_timespan_subscriptionInput {
  id: String
  start: DateTime
  end: DateTime
  Booster_timespan_booster: BoosterCreateNestedOneWithoutTimespanInput
}

input BoosterCreateNestedOneWithoutTimespanInput {
  create: BoosterCreateWithoutTimespanInput
  connectOrCreate: BoosterCreateOrConnectWithoutTimespanInput
  connect: BoosterWhereUniqueInput
}

input BoosterCreateWithoutTimespanInput {
  id: String
  Item_booster_item: ItemCreateNestedOneWithoutBoosterInput
}

input ItemCreateNestedOneWithoutBoosterInput {
  create: ItemCreateWithoutBoosterInput
  connectOrCreate: ItemCreateOrConnectWithoutBoosterInput
  connect: ItemWhereUniqueInput
}

input ItemCreateWithoutBoosterInput {
  id: String
  active: Boolean
  description: String
  Category: CategoryCreateNestedOneWithoutItem_category_itemsInput!
  Value: MoneyCreateNestedOneWithoutItem_value_itemInput
  Colors: ColorCreateNestedManyWithoutItem_color_itemsInput
  ItemGenders: ItemGenderCreateNestedManyWithoutItems_itemGender_itemsInput
  Pictures: PictureCreateNestedManyWithoutItem_picture_itemInput
  Condition: ConditionCreateNestedOneWithoutItem_condition_itemsInput
  Owner: PersonCreateNestedOneWithoutItem_owner_itemsInput
  Cloth_item_cloth: ClothCreateNestedOneWithoutItemInput
  TradePackage_item_tradePackages: TradePackageCreateNestedManyWithoutItemsInput
}

input ClothCreateNestedOneWithoutItemInput {
  create: ClothCreateWithoutItemInput
  connectOrCreate: ClothCreateOrConnectWithoutItemInput
  connect: ClothWhereUniqueInput
}

input ClothCreateWithoutItemInput {
  id: String
  code: String
  Material: MaterialCreateNestedOneWithoutCloth_material_clothsInput
  ClothSizes: ClothSizeCreateNestedManyWithoutCloth_clothSize_clothInput
  ClothStyles: ClothStyleCreateNestedManyWithoutItem_clothStyle_itemsInput
  History: HistoryCreateNestedOneWithoutCloth_history_clothInput
  Wardrobe: WardrobeCreateNestedOneWithoutClothsInput
}

input HistoryCreateNestedOneWithoutCloth_history_clothInput {
  create: HistoryCreateWithoutCloth_history_clothInput
  connectOrCreate: HistoryCreateOrConnectWithoutCloth_history_clothInput
  connect: HistoryWhereUniqueInput
}

input HistoryCreateWithoutCloth_history_clothInput {
  id: String
  Created: EventCreateNestedOneWithoutHistory_created_historyInput
  Updated: EventCreateNestedManyWithoutHistory_updated_historyInput
  Deleted: EventCreateNestedOneWithoutHistory_deleted_historyInput
  User_history_user: PersonCreateNestedOneWithoutHistoryInput
  Money_history_money: MoneyCreateNestedOneWithoutHistoryInput
}

input HistoryCreateOrConnectWithoutCloth_history_clothInput {
  where: HistoryWhereUniqueInput!
  create: HistoryCreateWithoutCloth_history_clothInput!
}

input WardrobeCreateNestedOneWithoutClothsInput {
  create: WardrobeCreateWithoutClothsInput
  connectOrCreate: WardrobeCreateOrConnectWithoutClothsInput
  connect: WardrobeWhereUniqueInput
}

input WardrobeCreateWithoutClothsInput {
  id: String
  name: String
  Address: AddressCreateNestedOneWithoutWardrobesInput
}

input AddressCreateNestedOneWithoutWardrobesInput {
  create: AddressCreateWithoutWardrobesInput
  connectOrCreate: AddressCreateOrConnectWithoutWardrobesInput
  connect: AddressWhereUniqueInput
}

input AddressCreateWithoutWardrobesInput {
  id: String
  line1: String
  line2: String
  city: String
  province: String
  zip: String
  Country: CountryCreateNestedOneWithoutAddress_county_addressesInput
  Person: PersonCreateNestedOneWithoutAddressInput
}

input PersonCreateNestedOneWithoutAddressInput {
  create: PersonCreateWithoutAddressInput
  connectOrCreate: PersonCreateOrConnectWithoutAddressInput
  connect: PersonWhereUniqueInput
}

input PersonCreateWithoutAddressInput {
  id: String!
  email: String
  birthday: DateTime
  firstName: String
  lastName: String
  Gender: GenderCreateNestedOneWithoutProfile_gender_profilesInput
  ItemGenders: ItemGenderCreateNestedManyWithoutPerson_itemGender_personsInput
  History: HistoryCreateNestedOneWithoutUser_history_userInput
  Telephone: TelephoneCreateNestedOneWithoutPerson_telephone_personInput
  Picture: PictureCreateNestedOneWithoutPersonInput
  ClothSizes: ClothSizeCreateNestedManyWithoutPerson_clothSize_personsInput
  ClothStyles: ClothStyleCreateNestedManyWithoutPerson_clothStyle_personsInput
  Event_who_events: EventCreateNestedManyWithoutWhoInput
  Item_owner_items: ItemCreateNestedManyWithoutOwnerInput
  Channel: ChannelCreateNestedOneWithoutParticipantsInput
  TradePackage_wantedBy_tradePackages: TradePackageCreateNestedManyWithoutWantedByInput
  TradePackage_from_tradePackages: TradePackageCreateNestedManyWithoutFromInput
  Rating_person_ratings: RatingCreateNestedManyWithoutFromInput
}

input TradePackageCreateNestedManyWithoutFromInput {
  create: [TradePackageCreateWithoutFromInput!]
  connectOrCreate: [TradePackageCreateOrConnectWithoutFromInput!]
  createMany: TradePackageCreateManyFromInputEnvelope
  connect: [TradePackageWhereUniqueInput!]
}

input TradePackageCreateWithoutFromInput {
  id: String
  WantedBy: PersonCreateNestedManyWithoutTradePackage_wantedBy_tradePackagesInput
  Items: ItemCreateNestedManyWithoutTradePackage_item_tradePackagesInput
  Offer_tradePackage_offers: OfferCreateNestedManyWithoutTradePackagesInput
}

input PersonCreateNestedManyWithoutTradePackage_wantedBy_tradePackagesInput {
  create: [PersonCreateWithoutTradePackage_wantedBy_tradePackagesInput!]
  connectOrCreate: [PersonCreateOrConnectWithoutTradePackage_wantedBy_tradePackagesInput!]
  connect: [PersonWhereUniqueInput!]
}

input PersonCreateWithoutTradePackage_wantedBy_tradePackagesInput {
  id: String!
  email: String
  birthday: DateTime
  firstName: String
  lastName: String
  Gender: GenderCreateNestedOneWithoutProfile_gender_profilesInput
  ItemGenders: ItemGenderCreateNestedManyWithoutPerson_itemGender_personsInput
  History: HistoryCreateNestedOneWithoutUser_history_userInput
  Telephone: TelephoneCreateNestedOneWithoutPerson_telephone_personInput
  Address: AddressCreateNestedManyWithoutPersonInput
  Picture: PictureCreateNestedOneWithoutPersonInput
  ClothSizes: ClothSizeCreateNestedManyWithoutPerson_clothSize_personsInput
  ClothStyles: ClothStyleCreateNestedManyWithoutPerson_clothStyle_personsInput
  Event_who_events: EventCreateNestedManyWithoutWhoInput
  Item_owner_items: ItemCreateNestedManyWithoutOwnerInput
  Channel: ChannelCreateNestedOneWithoutParticipantsInput
  TradePackage_from_tradePackages: TradePackageCreateNestedManyWithoutFromInput
  Rating_person_ratings: RatingCreateNestedManyWithoutFromInput
}

input RatingCreateNestedManyWithoutFromInput {
  create: [RatingCreateWithoutFromInput!]
  connectOrCreate: [RatingCreateOrConnectWithoutFromInput!]
  createMany: RatingCreateManyFromInputEnvelope
  connect: [RatingWhereUniqueInput!]
}

input RatingCreateWithoutFromInput {
  id: String
  amount: Int
  Contract: ContractCreateNestedOneWithoutRatingInput
}

input ContractCreateNestedOneWithoutRatingInput {
  create: ContractCreateWithoutRatingInput
  connectOrCreate: ContractCreateOrConnectWithoutRatingInput
  connect: ContractWhereUniqueInput
}

input ContractCreateWithoutRatingInput {
  id: String
  Offer: OfferCreateNestedOneWithoutContractInput
}

input OfferCreateNestedOneWithoutContractInput {
  create: OfferCreateWithoutContractInput
  connectOrCreate: OfferCreateOrConnectWithoutContractInput
  connect: OfferWhereUniqueInput
}

input OfferCreateWithoutContractInput {
  id: String
  TradePackages: TradePackageCreateNestedManyWithoutOffer_tradePackage_offersInput
}

input TradePackageCreateNestedManyWithoutOffer_tradePackage_offersInput {
  create: [TradePackageCreateWithoutOffer_tradePackage_offersInput!]
  connectOrCreate: [TradePackageCreateOrConnectWithoutOffer_tradePackage_offersInput!]
  connect: [TradePackageWhereUniqueInput!]
}

input TradePackageCreateWithoutOffer_tradePackage_offersInput {
  id: String
  WantedBy: PersonCreateNestedManyWithoutTradePackage_wantedBy_tradePackagesInput
  From: PersonCreateNestedOneWithoutTradePackage_from_tradePackagesInput
  Items: ItemCreateNestedManyWithoutTradePackage_item_tradePackagesInput
}

input ItemCreateNestedManyWithoutTradePackage_item_tradePackagesInput {
  create: [ItemCreateWithoutTradePackage_item_tradePackagesInput!]
  connectOrCreate: [ItemCreateOrConnectWithoutTradePackage_item_tradePackagesInput!]
  connect: [ItemWhereUniqueInput!]
}

input ItemCreateWithoutTradePackage_item_tradePackagesInput {
  id: String
  active: Boolean
  description: String
  Category: CategoryCreateNestedOneWithoutItem_category_itemsInput!
  Value: MoneyCreateNestedOneWithoutItem_value_itemInput
  Colors: ColorCreateNestedManyWithoutItem_color_itemsInput
  ItemGenders: ItemGenderCreateNestedManyWithoutItems_itemGender_itemsInput
  Pictures: PictureCreateNestedManyWithoutItem_picture_itemInput
  Condition: ConditionCreateNestedOneWithoutItem_condition_itemsInput
  Owner: PersonCreateNestedOneWithoutItem_owner_itemsInput
  Booster: BoosterCreateNestedManyWithoutItem_booster_itemInput
  Cloth_item_cloth: ClothCreateNestedOneWithoutItemInput
}

input ItemCreateOrConnectWithoutTradePackage_item_tradePackagesInput {
  where: ItemWhereUniqueInput!
  create: ItemCreateWithoutTradePackage_item_tradePackagesInput!
}

input TradePackageCreateOrConnectWithoutOffer_tradePackage_offersInput {
  where: TradePackageWhereUniqueInput!
  create: TradePackageCreateWithoutOffer_tradePackage_offersInput!
}

input OfferCreateOrConnectWithoutContractInput {
  where: OfferWhereUniqueInput!
  create: OfferCreateWithoutContractInput!
}

input ContractCreateOrConnectWithoutRatingInput {
  where: ContractWhereUniqueInput!
  create: ContractCreateWithoutRatingInput!
}

input RatingCreateOrConnectWithoutFromInput {
  where: RatingWhereUniqueInput!
  create: RatingCreateWithoutFromInput!
}

input RatingCreateManyFromInputEnvelope {
  data: [RatingCreateManyFromInput!]!
  skipDuplicates: Boolean
}

input RatingCreateManyFromInput {
  id: String
  amount: Int
}

input PersonCreateOrConnectWithoutTradePackage_wantedBy_tradePackagesInput {
  where: PersonWhereUniqueInput!
  create: PersonCreateWithoutTradePackage_wantedBy_tradePackagesInput!
}

input OfferCreateNestedManyWithoutTradePackagesInput {
  create: [OfferCreateWithoutTradePackagesInput!]
  connectOrCreate: [OfferCreateOrConnectWithoutTradePackagesInput!]
  connect: [OfferWhereUniqueInput!]
}

input OfferCreateWithoutTradePackagesInput {
  id: String
  Contract: ContractCreateNestedOneWithoutOfferInput
}

input ContractCreateNestedOneWithoutOfferInput {
  create: ContractCreateWithoutOfferInput
  connectOrCreate: ContractCreateOrConnectWithoutOfferInput
  connect: ContractWhereUniqueInput
}

input ContractCreateWithoutOfferInput {
  id: String
  Rating: RatingCreateNestedManyWithoutContractInput
}

input RatingCreateNestedManyWithoutContractInput {
  create: [RatingCreateWithoutContractInput!]
  connectOrCreate: [RatingCreateOrConnectWithoutContractInput!]
  createMany: RatingCreateManyContractInputEnvelope
  connect: [RatingWhereUniqueInput!]
}

input RatingCreateWithoutContractInput {
  id: String
  amount: Int
  From: PersonCreateNestedOneWithoutRating_person_ratingsInput
}

input PersonCreateNestedOneWithoutRating_person_ratingsInput {
  create: PersonCreateWithoutRating_person_ratingsInput
  connectOrCreate: PersonCreateOrConnectWithoutRating_person_ratingsInput
  connect: PersonWhereUniqueInput
}

input PersonCreateWithoutRating_person_ratingsInput {
  id: String!
  email: String
  birthday: DateTime
  firstName: String
  lastName: String
  Gender: GenderCreateNestedOneWithoutProfile_gender_profilesInput
  ItemGenders: ItemGenderCreateNestedManyWithoutPerson_itemGender_personsInput
  History: HistoryCreateNestedOneWithoutUser_history_userInput
  Telephone: TelephoneCreateNestedOneWithoutPerson_telephone_personInput
  Address: AddressCreateNestedManyWithoutPersonInput
  Picture: PictureCreateNestedOneWithoutPersonInput
  ClothSizes: ClothSizeCreateNestedManyWithoutPerson_clothSize_personsInput
  ClothStyles: ClothStyleCreateNestedManyWithoutPerson_clothStyle_personsInput
  Event_who_events: EventCreateNestedManyWithoutWhoInput
  Item_owner_items: ItemCreateNestedManyWithoutOwnerInput
  Channel: ChannelCreateNestedOneWithoutParticipantsInput
  TradePackage_wantedBy_tradePackages: TradePackageCreateNestedManyWithoutWantedByInput
  TradePackage_from_tradePackages: TradePackageCreateNestedManyWithoutFromInput
}

input PersonCreateOrConnectWithoutRating_person_ratingsInput {
  where: PersonWhereUniqueInput!
  create: PersonCreateWithoutRating_person_ratingsInput!
}

input RatingCreateOrConnectWithoutContractInput {
  where: RatingWhereUniqueInput!
  create: RatingCreateWithoutContractInput!
}

input RatingCreateManyContractInputEnvelope {
  data: [RatingCreateManyContractInput!]!
  skipDuplicates: Boolean
}

input RatingCreateManyContractInput {
  id: String
  amount: Int
}

input ContractCreateOrConnectWithoutOfferInput {
  where: ContractWhereUniqueInput!
  create: ContractCreateWithoutOfferInput!
}

input OfferCreateOrConnectWithoutTradePackagesInput {
  where: OfferWhereUniqueInput!
  create: OfferCreateWithoutTradePackagesInput!
}

input TradePackageCreateOrConnectWithoutFromInput {
  where: TradePackageWhereUniqueInput!
  create: TradePackageCreateWithoutFromInput!
}

input TradePackageCreateManyFromInputEnvelope {
  data: [TradePackageCreateManyFromInput!]!
  skipDuplicates: Boolean
}

input TradePackageCreateManyFromInput {
  id: String
}

input PersonCreateOrConnectWithoutAddressInput {
  where: PersonWhereUniqueInput!
  create: PersonCreateWithoutAddressInput!
}

input AddressCreateOrConnectWithoutWardrobesInput {
  where: AddressWhereUniqueInput!
  create: AddressCreateWithoutWardrobesInput!
}

input WardrobeCreateOrConnectWithoutClothsInput {
  where: WardrobeWhereUniqueInput!
  create: WardrobeCreateWithoutClothsInput!
}

input ClothCreateOrConnectWithoutItemInput {
  where: ClothWhereUniqueInput!
  create: ClothCreateWithoutItemInput!
}

input TradePackageCreateNestedManyWithoutItemsInput {
  create: [TradePackageCreateWithoutItemsInput!]
  connectOrCreate: [TradePackageCreateOrConnectWithoutItemsInput!]
  connect: [TradePackageWhereUniqueInput!]
}

input TradePackageCreateWithoutItemsInput {
  id: String
  WantedBy: PersonCreateNestedManyWithoutTradePackage_wantedBy_tradePackagesInput
  From: PersonCreateNestedOneWithoutTradePackage_from_tradePackagesInput
  Offer_tradePackage_offers: OfferCreateNestedManyWithoutTradePackagesInput
}

input TradePackageCreateOrConnectWithoutItemsInput {
  where: TradePackageWhereUniqueInput!
  create: TradePackageCreateWithoutItemsInput!
}

input ItemCreateOrConnectWithoutBoosterInput {
  where: ItemWhereUniqueInput!
  create: ItemCreateWithoutBoosterInput!
}

input BoosterCreateOrConnectWithoutTimespanInput {
  where: BoosterWhereUniqueInput!
  create: BoosterCreateWithoutTimespanInput!
}

input TimespanCreateOrConnectWithoutSubscription_timespan_subscriptionInput {
  where: TimespanWhereUniqueInput!
  create: TimespanCreateWithoutSubscription_timespan_subscriptionInput!
}

input SubscriptionCreateOrConnectWithoutTypeInput {
  where: SubscriptionWhereUniqueInput!
  create: SubscriptionCreateWithoutTypeInput!
}

input SubscriptionCreateManyTypeInputEnvelope {
  data: [SubscriptionCreateManyTypeInput!]!
  skipDuplicates: Boolean
}

input SubscriptionCreateManyTypeInput {
  id: String
}

input SubscriptionPlanCreateOrConnectWithoutStandardPriceInput {
  where: SubscriptionPlanWhereUniqueInput!
  create: SubscriptionPlanCreateWithoutStandardPriceInput!
}

input MoneyCreateOrConnectWithoutSubscription_money_subscriptionInput {
  where: MoneyWhereUniqueInput!
  create: MoneyCreateWithoutSubscription_money_subscriptionInput!
}

input SubscriptionPlanCreateNestedOneWithoutSubscription_subscriptionType_subscriptionInput {
  create: SubscriptionPlanCreateWithoutSubscription_subscriptionType_subscriptionInput
  connectOrCreate: SubscriptionPlanCreateOrConnectWithoutSubscription_subscriptionType_subscriptionInput
  connect: SubscriptionPlanWhereUniqueInput
}

input SubscriptionPlanCreateWithoutSubscription_subscriptionType_subscriptionInput {
  id: String
  name: String
  StandardDuration: DurationCreateNestedOneWithoutSubscriptionPlan_duration_subscriptionPlanInput!
  StandardPrice: MoneyCreateNestedOneWithoutSubscriptionPlan_money_subscriptionPlansInput
}

input MoneyCreateNestedOneWithoutSubscriptionPlan_money_subscriptionPlansInput {
  create: MoneyCreateWithoutSubscriptionPlan_money_subscriptionPlansInput
  connectOrCreate: MoneyCreateOrConnectWithoutSubscriptionPlan_money_subscriptionPlansInput
  connect: MoneyWhereUniqueInput
}

input MoneyCreateWithoutSubscriptionPlan_money_subscriptionPlansInput {
  id: String
  value: Float
  Currency: Currency
  History: HistoryCreateNestedOneWithoutMoney_history_moneyInput
  Item_value_item: ItemCreateNestedOneWithoutValueInput
  Subscription_money_subscription: SubscriptionCreateNestedOneWithoutPriceInput
}

input SubscriptionCreateNestedOneWithoutPriceInput {
  create: SubscriptionCreateWithoutPriceInput
  connectOrCreate: SubscriptionCreateOrConnectWithoutPriceInput
  connect: SubscriptionWhereUniqueInput
}

input SubscriptionCreateWithoutPriceInput {
  id: String
  Timespan: TimespanCreateNestedOneWithoutSubscription_timespan_subscriptionInput
  Type: SubscriptionPlanCreateNestedOneWithoutSubscription_subscriptionType_subscriptionInput
}

input SubscriptionCreateOrConnectWithoutPriceInput {
  where: SubscriptionWhereUniqueInput!
  create: SubscriptionCreateWithoutPriceInput!
}

input MoneyCreateOrConnectWithoutSubscriptionPlan_money_subscriptionPlansInput {
  where: MoneyWhereUniqueInput!
  create: MoneyCreateWithoutSubscriptionPlan_money_subscriptionPlansInput!
}

input SubscriptionPlanCreateOrConnectWithoutSubscription_subscriptionType_subscriptionInput {
  where: SubscriptionPlanWhereUniqueInput!
  create: SubscriptionPlanCreateWithoutSubscription_subscriptionType_subscriptionInput!
}

input SubscriptionCreateOrConnectWithoutTimespanInput {
  where: SubscriptionWhereUniqueInput!
  create: SubscriptionCreateWithoutTimespanInput!
}

input TimespanCreateOrConnectWithoutBooster_timespan_boosterInput {
  where: TimespanWhereUniqueInput!
  create: TimespanCreateWithoutBooster_timespan_boosterInput!
}

input BoosterCreateOrConnectWithoutItem_booster_itemInput {
  where: BoosterWhereUniqueInput!
  create: BoosterCreateWithoutItem_booster_itemInput!
}

input BoosterCreateManyItem_booster_itemInputEnvelope {
  data: [BoosterCreateManyItem_booster_itemInput!]!
  skipDuplicates: Boolean
}

input BoosterCreateManyItem_booster_itemInput {
  id: String
  TimespanId: String
}

input ItemCreateOrConnectWithoutOwnerInput {
  where: ItemWhereUniqueInput!
  create: ItemCreateWithoutOwnerInput!
}

input ItemCreateManyOwnerInputEnvelope {
  data: [ItemCreateManyOwnerInput!]!
  skipDuplicates: Boolean
}

input ItemCreateManyOwnerInput {
  id: String
  active: Boolean
  description: String
}

input PersonCreateOrConnectWithoutTradePackage_from_tradePackagesInput {
  where: PersonWhereUniqueInput!
  create: PersonCreateWithoutTradePackage_from_tradePackagesInput!
}

input TradePackageCreateOrConnectWithoutWantedByInput {
  where: TradePackageWhereUniqueInput!
  create: TradePackageCreateWithoutWantedByInput!
}

input PersonCreateOrConnectWithoutItem_owner_itemsInput {
  where: PersonWhereUniqueInput!
  create: PersonCreateWithoutItem_owner_itemsInput!
}

input ItemCreateOrConnectWithoutValueInput {
  where: ItemWhereUniqueInput!
  create: ItemCreateWithoutValueInput!
}

input MoneyCreateOrConnectWithoutHistoryInput {
  where: MoneyWhereUniqueInput!
  create: MoneyCreateWithoutHistoryInput!
}

input ClothCreateNestedOneWithoutHistoryInput {
  create: ClothCreateWithoutHistoryInput
  connectOrCreate: ClothCreateOrConnectWithoutHistoryInput
  connect: ClothWhereUniqueInput
}

input ClothCreateWithoutHistoryInput {
  id: String
  code: String
  Material: MaterialCreateNestedOneWithoutCloth_material_clothsInput
  Item: ItemCreateNestedOneWithoutCloth_item_clothInput!
  ClothSizes: ClothSizeCreateNestedManyWithoutCloth_clothSize_clothInput
  ClothStyles: ClothStyleCreateNestedManyWithoutItem_clothStyle_itemsInput
  Wardrobe: WardrobeCreateNestedOneWithoutClothsInput
}

input ClothCreateOrConnectWithoutHistoryInput {
  where: ClothWhereUniqueInput!
  create: ClothCreateWithoutHistoryInput!
}

input HistoryCreateOrConnectWithoutDeletedInput {
  where: HistoryWhereUniqueInput!
  create: HistoryCreateWithoutDeletedInput!
}

input EventCreateOrConnectWithoutWhoInput {
  where: EventWhereUniqueInput!
  create: EventCreateWithoutWhoInput!
}

input EventCreateManyWhoInputEnvelope {
  data: [EventCreateManyWhoInput!]!
  skipDuplicates: Boolean
}

input EventCreateManyWhoInput {
  id: String
  when: DateTime
  what: String!
  from: JSON
  to: JSON
}

input PersonCreateOrConnectWithoutClothSizesInput {
  where: PersonWhereUniqueInput!
  create: PersonCreateWithoutClothSizesInput!
}

input ClothSizeCreateOrConnectWithoutClothSizeInput {
  where: ClothSizeWhereUniqueInput!
  create: ClothSizeCreateWithoutClothSizeInput!
}

input ClothSizeCreateNestedManyWithoutComparableToInput {
  create: [ClothSizeCreateWithoutComparableToInput!]
  connectOrCreate: [ClothSizeCreateOrConnectWithoutComparableToInput!]
  connect: [ClothSizeWhereUniqueInput!]
}

input ClothSizeCreateWithoutComparableToInput {
  id: String
  name: String
  rank: Int
  SizeModel: SizeModel
  Categories: CategoryCreateNestedManyWithoutClothSizesInput
  Cloth_clothSize_cloth: ClothCreateNestedManyWithoutClothSizesInput
  Person_clothSize_persons: PersonCreateNestedManyWithoutClothSizesInput
  ClothSize: ClothSizeCreateNestedManyWithoutComparableToInput
}

input ClothSizeCreateOrConnectWithoutComparableToInput {
  where: ClothSizeWhereUniqueInput!
  create: ClothSizeCreateWithoutComparableToInput!
}

input ClothSizeCreateOrConnectWithoutPerson_clothSize_personsInput {
  where: ClothSizeWhereUniqueInput!
  create: ClothSizeCreateWithoutPerson_clothSize_personsInput!
}

input PersonCreateOrConnectWithoutPictureInput {
  where: PersonWhereUniqueInput!
  create: PersonCreateWithoutPictureInput!
}

input ItemCreateNestedOneWithoutPicturesInput {
  create: ItemCreateWithoutPicturesInput
  connectOrCreate: ItemCreateOrConnectWithoutPicturesInput
  connect: ItemWhereUniqueInput
}

input ItemCreateWithoutPicturesInput {
  id: String
  active: Boolean
  description: String
  Category: CategoryCreateNestedOneWithoutItem_category_itemsInput!
  Value: MoneyCreateNestedOneWithoutItem_value_itemInput
  Colors: ColorCreateNestedManyWithoutItem_color_itemsInput
  ItemGenders: ItemGenderCreateNestedManyWithoutItems_itemGender_itemsInput
  Condition: ConditionCreateNestedOneWithoutItem_condition_itemsInput
  Owner: PersonCreateNestedOneWithoutItem_owner_itemsInput
  Booster: BoosterCreateNestedManyWithoutItem_booster_itemInput
  Cloth_item_cloth: ClothCreateNestedOneWithoutItemInput
  TradePackage_item_tradePackages: TradePackageCreateNestedManyWithoutItemsInput
}

input ItemCreateOrConnectWithoutPicturesInput {
  where: ItemWhereUniqueInput!
  create: ItemCreateWithoutPicturesInput!
}

input PictureCreateOrConnectWithoutHQInput {
  where: PictureWhereUniqueInput!
  create: PictureCreateWithoutHQInput!
}

input FileCreateOrConnectWithoutFile_mqPictureFile_fileInput {
  where: FileWhereUniqueInput!
  create: FileCreateWithoutFile_mqPictureFile_fileInput!
}

input PictureCreateOrConnectWithoutLQInput {
  where: PictureWhereUniqueInput!
  create: PictureCreateWithoutLQInput!
}

input FileCreateOrConnectWithoutFile_hqPictureFile_fileInput {
  where: FileWhereUniqueInput!
  create: FileCreateWithoutFile_hqPictureFile_fileInput!
}

input PictureCreateOrConnectWithoutMQInput {
  where: PictureWhereUniqueInput!
  create: PictureCreateWithoutMQInput!
}

input FileCreateOrConnectWithoutFile_lqPictureFile_fileInput {
  where: FileWhereUniqueInput!
  create: FileCreateWithoutFile_lqPictureFile_fileInput!
}

input PictureCreateOrConnectWithoutPersonInput {
  where: PictureWhereUniqueInput!
  create: PictureCreateWithoutPersonInput!
}

input PersonCreateOrConnectWithoutItemGendersInput {
  where: PersonWhereUniqueInput!
  create: PersonCreateWithoutItemGendersInput!
}

input ItemGenderCreateOrConnectWithoutItems_itemGender_itemsInput {
  where: ItemGenderWhereUniqueInput!
  create: ItemGenderCreateWithoutItems_itemGender_itemsInput!
}

input ItemCreateOrConnectWithoutCategoryInput {
  where: ItemWhereUniqueInput!
  create: ItemCreateWithoutCategoryInput!
}

input ItemCreateManyCategoryInputEnvelope {
  data: [ItemCreateManyCategoryInput!]!
  skipDuplicates: Boolean
}

input ItemCreateManyCategoryInput {
  id: String
  active: Boolean
  description: String
}

input CategoryCreateNestedOneWithoutSubCategoriesInput {
  create: CategoryCreateWithoutSubCategoriesInput
  connectOrCreate: CategoryCreateOrConnectWithoutSubCategoriesInput
  connect: CategoryWhereUniqueInput
}

input CategoryCreateWithoutSubCategoriesInput {
  id: String
  name: String
  ClothSizes: ClothSizeCreateNestedManyWithoutCategoriesInput
  Brand_category_brands: BrandCreateNestedManyWithoutCategoriesInput
  Item_category_items: ItemCreateNestedManyWithoutCategoryInput
  ParentCategory: CategoryCreateNestedOneWithoutSubCategoriesInput
}

input CategoryCreateOrConnectWithoutSubCategoriesInput {
  where: CategoryWhereUniqueInput!
  create: CategoryCreateWithoutSubCategoriesInput!
}

input CategoryCreateNestedManyWithoutParentCategoryInput {
  create: [CategoryCreateWithoutParentCategoryInput!]
  connectOrCreate: [CategoryCreateOrConnectWithoutParentCategoryInput!]
  createMany: CategoryCreateManyParentCategoryInputEnvelope
  connect: [CategoryWhereUniqueInput!]
}

input CategoryCreateWithoutParentCategoryInput {
  id: String
  name: String
  ClothSizes: ClothSizeCreateNestedManyWithoutCategoriesInput
  Brand_category_brands: BrandCreateNestedManyWithoutCategoriesInput
  Item_category_items: ItemCreateNestedManyWithoutCategoryInput
  SubCategories: CategoryCreateNestedManyWithoutParentCategoryInput
}

input CategoryCreateOrConnectWithoutParentCategoryInput {
  where: CategoryWhereUniqueInput!
  create: CategoryCreateWithoutParentCategoryInput!
}

input CategoryCreateManyParentCategoryInputEnvelope {
  data: [CategoryCreateManyParentCategoryInput!]!
  skipDuplicates: Boolean
}

input CategoryCreateManyParentCategoryInput {
  id: String
  name: String
}

input CategoryCreateOrConnectWithoutClothSizesInput {
  where: CategoryWhereUniqueInput!
  create: CategoryCreateWithoutClothSizesInput!
}

input ClothSizeCreateOrConnectWithoutCloth_clothSize_clothInput {
  where: ClothSizeWhereUniqueInput!
  create: ClothSizeCreateWithoutCloth_clothSize_clothInput!
}

input ClothCreateOrConnectWithoutWardrobeInput {
  where: ClothWhereUniqueInput!
  create: ClothCreateWithoutWardrobeInput!
}

input ClothCreateManyWardrobeInputEnvelope {
  data: [ClothCreateManyWardrobeInput!]!
  skipDuplicates: Boolean
}

input ClothCreateManyWardrobeInput {
  id: String
  code: String
}

input WardrobeCreateOrConnectWithoutAddressInput {
  where: WardrobeWhereUniqueInput!
  create: WardrobeCreateWithoutAddressInput!
}

input WardrobeCreateManyAddressInputEnvelope {
  data: [WardrobeCreateManyAddressInput!]!
  skipDuplicates: Boolean
}

input WardrobeCreateManyAddressInput {
  id: String
  name: String
}

input AddressCreateOrConnectWithoutPersonInput {
  where: AddressWhereUniqueInput!
  create: AddressCreateWithoutPersonInput!
}

input AddressCreateManyPersonInputEnvelope {
  data: [AddressCreateManyPersonInput!]!
  skipDuplicates: Boolean
}

input AddressCreateManyPersonInput {
  id: String
  line1: String
  line2: String
  city: String
  province: String
  zip: String
}

input PersonCreateOrConnectWithoutHistoryInput {
  where: PersonWhereUniqueInput!
  create: PersonCreateWithoutHistoryInput!
}

input HistoryCreateOrConnectWithoutUpdatedInput {
  where: HistoryWhereUniqueInput!
  create: HistoryCreateWithoutUpdatedInput!
}

input EventCreateOrConnectWithoutHistory_deleted_historyInput {
  where: EventWhereUniqueInput!
  create: EventCreateWithoutHistory_deleted_historyInput!
}

input HistoryCreateOrConnectWithoutCreatedInput {
  where: HistoryWhereUniqueInput!
  create: HistoryCreateWithoutCreatedInput!
}

input EventCreateOrConnectWithoutHistory_updated_historyInput {
  where: EventWhereUniqueInput!
  create: EventCreateWithoutHistory_updated_historyInput!
}

input EventCreateManyHistory_updated_historyInputEnvelope {
  data: [EventCreateManyHistory_updated_historyInput!]!
  skipDuplicates: Boolean
}

input EventCreateManyHistory_updated_historyInput {
  id: String
  when: DateTime
  what: String!
  from: JSON
  to: JSON
}

input HistoryCreateOrConnectWithoutUser_history_userInput {
  where: HistoryWhereUniqueInput!
  create: HistoryCreateWithoutUser_history_userInput!
}

input PersonCreateOrConnectWithoutEvent_who_eventsInput {
  where: PersonWhereUniqueInput!
  create: PersonCreateWithoutEvent_who_eventsInput!
}

input EventCreateOrConnectWithoutHistory_created_historyInput {
  where: EventWhereUniqueInput!
  create: EventCreateWithoutHistory_created_historyInput!
}

input HistoryCreateOrConnectWithoutMoney_history_moneyInput {
  where: HistoryWhereUniqueInput!
  create: HistoryCreateWithoutMoney_history_moneyInput!
}

input MoneyCreateOrConnectWithoutItem_value_itemInput {
  where: MoneyWhereUniqueInput!
  create: MoneyCreateWithoutItem_value_itemInput!
}

input ItemCreateOrConnectWithoutItemGendersInput {
  where: ItemWhereUniqueInput!
  create: ItemCreateWithoutItemGendersInput!
}

input ItemGenderCreateOrConnectWithoutPerson_itemGender_personsInput {
  where: ItemGenderWhereUniqueInput!
  create: ItemGenderCreateWithoutPerson_itemGender_personsInput!
}

input PersonCreateOrConnectWithoutClothStylesInput {
  where: PersonWhereUniqueInput!
  create: PersonCreateWithoutClothStylesInput!
}

input ClothStyleCreateOrConnectWithoutItem_clothStyle_itemsInput {
  where: ClothStyleWhereUniqueInput!
  create: ClothStyleCreateWithoutItem_clothStyle_itemsInput!
}

input ClothCreateOrConnectWithoutClothSizesInput {
  where: ClothWhereUniqueInput!
  create: ClothCreateWithoutClothSizesInput!
}

input ClothSizeCreateOrConnectWithoutCategoriesInput {
  where: ClothSizeWhereUniqueInput!
  create: ClothSizeCreateWithoutCategoriesInput!
}

input CategoryCreateOrConnectWithoutItem_category_itemsInput {
  where: CategoryWhereUniqueInput!
  create: CategoryCreateWithoutItem_category_itemsInput!
}

input ItemCreateOrConnectWithoutCloth_item_clothInput {
  where: ItemWhereUniqueInput!
  create: ItemCreateWithoutCloth_item_clothInput!
}

input ClothCreateOrConnectWithoutClothStylesInput {
  where: ClothWhereUniqueInput!
  create: ClothCreateWithoutClothStylesInput!
}

input ClothStyleUpdateInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  Item_clothStyle_items: ClothUpdateManyWithoutClothStylesInput
  Person_clothStyle_persons: PersonUpdateManyWithoutClothStylesInput
}

input StringFieldUpdateOperationsInput {
  set: String
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

input ClothUpdateManyWithoutClothStylesInput {
  create: [ClothCreateWithoutClothStylesInput!]
  connectOrCreate: [ClothCreateOrConnectWithoutClothStylesInput!]
  upsert: [ClothUpsertWithWhereUniqueWithoutClothStylesInput!]
  set: [ClothWhereUniqueInput!]
  disconnect: [ClothWhereUniqueInput!]
  delete: [ClothWhereUniqueInput!]
  connect: [ClothWhereUniqueInput!]
  update: [ClothUpdateWithWhereUniqueWithoutClothStylesInput!]
  updateMany: [ClothUpdateManyWithWhereWithoutClothStylesInput!]
  deleteMany: [ClothScalarWhereInput!]
}

input ClothUpsertWithWhereUniqueWithoutClothStylesInput {
  where: ClothWhereUniqueInput!
  update: ClothUpdateWithoutClothStylesInput!
  create: ClothCreateWithoutClothStylesInput!
}

input ClothUpdateWithoutClothStylesInput {
  id: StringFieldUpdateOperationsInput
  code: NullableStringFieldUpdateOperationsInput
  Material: MaterialUpdateOneWithoutCloth_material_clothsInput
  Item: ItemUpdateOneRequiredWithoutCloth_item_clothInput
  ClothSizes: ClothSizeUpdateManyWithoutCloth_clothSize_clothInput
  History: HistoryUpdateOneWithoutCloth_history_clothInput
  Wardrobe: WardrobeUpdateOneWithoutClothsInput
}

input MaterialUpdateOneWithoutCloth_material_clothsInput {
  create: MaterialCreateWithoutCloth_material_clothsInput
  connectOrCreate: MaterialCreateOrConnectWithoutCloth_material_clothsInput
  upsert: MaterialUpsertWithoutCloth_material_clothsInput
  disconnect: Boolean
  delete: Boolean
  connect: MaterialWhereUniqueInput
  update: MaterialUpdateWithoutCloth_material_clothsInput
}

input MaterialUpsertWithoutCloth_material_clothsInput {
  update: MaterialUpdateWithoutCloth_material_clothsInput!
  create: MaterialCreateWithoutCloth_material_clothsInput!
}

input MaterialUpdateWithoutCloth_material_clothsInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
}

input ItemUpdateOneRequiredWithoutCloth_item_clothInput {
  create: ItemCreateWithoutCloth_item_clothInput
  connectOrCreate: ItemCreateOrConnectWithoutCloth_item_clothInput
  upsert: ItemUpsertWithoutCloth_item_clothInput
  connect: ItemWhereUniqueInput
  update: ItemUpdateWithoutCloth_item_clothInput
}

input ItemUpsertWithoutCloth_item_clothInput {
  update: ItemUpdateWithoutCloth_item_clothInput!
  create: ItemCreateWithoutCloth_item_clothInput!
}

input ItemUpdateWithoutCloth_item_clothInput {
  id: StringFieldUpdateOperationsInput
  active: NullableBoolFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  Category: CategoryUpdateOneRequiredWithoutItem_category_itemsInput
  Value: MoneyUpdateOneWithoutItem_value_itemInput
  Colors: ColorUpdateManyWithoutItem_color_itemsInput
  ItemGenders: ItemGenderUpdateManyWithoutItems_itemGender_itemsInput
  Pictures: PictureUpdateManyWithoutItem_picture_itemInput
  Condition: ConditionUpdateOneWithoutItem_condition_itemsInput
  Owner: PersonUpdateOneWithoutItem_owner_itemsInput
  Booster: BoosterUpdateManyWithoutItem_booster_itemInput
  TradePackage_item_tradePackages: TradePackageUpdateManyWithoutItemsInput
}

input NullableBoolFieldUpdateOperationsInput {
  set: Boolean
}

input CategoryUpdateOneRequiredWithoutItem_category_itemsInput {
  create: CategoryCreateWithoutItem_category_itemsInput
  connectOrCreate: CategoryCreateOrConnectWithoutItem_category_itemsInput
  upsert: CategoryUpsertWithoutItem_category_itemsInput
  connect: CategoryWhereUniqueInput
  update: CategoryUpdateWithoutItem_category_itemsInput
}

input CategoryUpsertWithoutItem_category_itemsInput {
  update: CategoryUpdateWithoutItem_category_itemsInput!
  create: CategoryCreateWithoutItem_category_itemsInput!
}

input CategoryUpdateWithoutItem_category_itemsInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  ClothSizes: ClothSizeUpdateManyWithoutCategoriesInput
  Brand_category_brands: BrandUpdateManyWithoutCategoriesInput
  ParentCategory: CategoryUpdateOneWithoutSubCategoriesInput
  SubCategories: CategoryUpdateManyWithoutParentCategoryInput
}

input ClothSizeUpdateManyWithoutCategoriesInput {
  create: [ClothSizeCreateWithoutCategoriesInput!]
  connectOrCreate: [ClothSizeCreateOrConnectWithoutCategoriesInput!]
  upsert: [ClothSizeUpsertWithWhereUniqueWithoutCategoriesInput!]
  set: [ClothSizeWhereUniqueInput!]
  disconnect: [ClothSizeWhereUniqueInput!]
  delete: [ClothSizeWhereUniqueInput!]
  connect: [ClothSizeWhereUniqueInput!]
  update: [ClothSizeUpdateWithWhereUniqueWithoutCategoriesInput!]
  updateMany: [ClothSizeUpdateManyWithWhereWithoutCategoriesInput!]
  deleteMany: [ClothSizeScalarWhereInput!]
}

input ClothSizeUpsertWithWhereUniqueWithoutCategoriesInput {
  where: ClothSizeWhereUniqueInput!
  update: ClothSizeUpdateWithoutCategoriesInput!
  create: ClothSizeCreateWithoutCategoriesInput!
}

input ClothSizeUpdateWithoutCategoriesInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  rank: NullableIntFieldUpdateOperationsInput
  SizeModel: NullableEnumSizeModelFieldUpdateOperationsInput
  Cloth_clothSize_cloth: ClothUpdateManyWithoutClothSizesInput
  Person_clothSize_persons: PersonUpdateManyWithoutClothSizesInput
  ComparableTo: ClothSizeUpdateManyWithoutClothSizeInput
  ClothSize: ClothSizeUpdateManyWithoutComparableToInput
}

input NullableIntFieldUpdateOperationsInput {
  set: Int
  increment: Int
  decrement: Int
  multiply: Int
  divide: Int
}

input NullableEnumSizeModelFieldUpdateOperationsInput {
  set: SizeModel
}

input ClothUpdateManyWithoutClothSizesInput {
  create: [ClothCreateWithoutClothSizesInput!]
  connectOrCreate: [ClothCreateOrConnectWithoutClothSizesInput!]
  upsert: [ClothUpsertWithWhereUniqueWithoutClothSizesInput!]
  set: [ClothWhereUniqueInput!]
  disconnect: [ClothWhereUniqueInput!]
  delete: [ClothWhereUniqueInput!]
  connect: [ClothWhereUniqueInput!]
  update: [ClothUpdateWithWhereUniqueWithoutClothSizesInput!]
  updateMany: [ClothUpdateManyWithWhereWithoutClothSizesInput!]
  deleteMany: [ClothScalarWhereInput!]
}

input ClothUpsertWithWhereUniqueWithoutClothSizesInput {
  where: ClothWhereUniqueInput!
  update: ClothUpdateWithoutClothSizesInput!
  create: ClothCreateWithoutClothSizesInput!
}

input ClothUpdateWithoutClothSizesInput {
  id: StringFieldUpdateOperationsInput
  code: NullableStringFieldUpdateOperationsInput
  Material: MaterialUpdateOneWithoutCloth_material_clothsInput
  Item: ItemUpdateOneRequiredWithoutCloth_item_clothInput
  ClothStyles: ClothStyleUpdateManyWithoutItem_clothStyle_itemsInput
  History: HistoryUpdateOneWithoutCloth_history_clothInput
  Wardrobe: WardrobeUpdateOneWithoutClothsInput
}

input ClothStyleUpdateManyWithoutItem_clothStyle_itemsInput {
  create: [ClothStyleCreateWithoutItem_clothStyle_itemsInput!]
  connectOrCreate: [ClothStyleCreateOrConnectWithoutItem_clothStyle_itemsInput!]
  upsert: [ClothStyleUpsertWithWhereUniqueWithoutItem_clothStyle_itemsInput!]
  set: [ClothStyleWhereUniqueInput!]
  disconnect: [ClothStyleWhereUniqueInput!]
  delete: [ClothStyleWhereUniqueInput!]
  connect: [ClothStyleWhereUniqueInput!]
  update: [ClothStyleUpdateWithWhereUniqueWithoutItem_clothStyle_itemsInput!]
  updateMany: [ClothStyleUpdateManyWithWhereWithoutItem_clothStyle_itemsInput!]
  deleteMany: [ClothStyleScalarWhereInput!]
}

input ClothStyleUpsertWithWhereUniqueWithoutItem_clothStyle_itemsInput {
  where: ClothStyleWhereUniqueInput!
  update: ClothStyleUpdateWithoutItem_clothStyle_itemsInput!
  create: ClothStyleCreateWithoutItem_clothStyle_itemsInput!
}

input ClothStyleUpdateWithoutItem_clothStyle_itemsInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  Person_clothStyle_persons: PersonUpdateManyWithoutClothStylesInput
}

input PersonUpdateManyWithoutClothStylesInput {
  create: [PersonCreateWithoutClothStylesInput!]
  connectOrCreate: [PersonCreateOrConnectWithoutClothStylesInput!]
  upsert: [PersonUpsertWithWhereUniqueWithoutClothStylesInput!]
  set: [PersonWhereUniqueInput!]
  disconnect: [PersonWhereUniqueInput!]
  delete: [PersonWhereUniqueInput!]
  connect: [PersonWhereUniqueInput!]
  update: [PersonUpdateWithWhereUniqueWithoutClothStylesInput!]
  updateMany: [PersonUpdateManyWithWhereWithoutClothStylesInput!]
  deleteMany: [PersonScalarWhereInput!]
}

input PersonUpsertWithWhereUniqueWithoutClothStylesInput {
  where: PersonWhereUniqueInput!
  update: PersonUpdateWithoutClothStylesInput!
  create: PersonCreateWithoutClothStylesInput!
}

input PersonUpdateWithoutClothStylesInput {
  id: StringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  birthday: NullableDateTimeFieldUpdateOperationsInput
  firstName: NullableStringFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  Gender: GenderUpdateOneWithoutProfile_gender_profilesInput
  ItemGenders: ItemGenderUpdateManyWithoutPerson_itemGender_personsInput
  History: HistoryUpdateOneWithoutUser_history_userInput
  Telephone: TelephoneUpdateOneWithoutPerson_telephone_personInput
  Address: AddressUpdateManyWithoutPersonInput
  Picture: PictureUpdateOneWithoutPersonInput
  ClothSizes: ClothSizeUpdateManyWithoutPerson_clothSize_personsInput
  Event_who_events: EventUpdateManyWithoutWhoInput
  Item_owner_items: ItemUpdateManyWithoutOwnerInput
  Channel: ChannelUpdateOneWithoutParticipantsInput
  TradePackage_wantedBy_tradePackages: TradePackageUpdateManyWithoutWantedByInput
  TradePackage_from_tradePackages: TradePackageUpdateManyWithoutFromInput
  Rating_person_ratings: RatingUpdateManyWithoutFromInput
}

input NullableDateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input GenderUpdateOneWithoutProfile_gender_profilesInput {
  create: GenderCreateWithoutProfile_gender_profilesInput
  connectOrCreate: GenderCreateOrConnectWithoutProfile_gender_profilesInput
  upsert: GenderUpsertWithoutProfile_gender_profilesInput
  disconnect: Boolean
  delete: Boolean
  connect: GenderWhereUniqueInput
  update: GenderUpdateWithoutProfile_gender_profilesInput
}

input GenderUpsertWithoutProfile_gender_profilesInput {
  update: GenderUpdateWithoutProfile_gender_profilesInput!
  create: GenderCreateWithoutProfile_gender_profilesInput!
}

input GenderUpdateWithoutProfile_gender_profilesInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
}

input ItemGenderUpdateManyWithoutPerson_itemGender_personsInput {
  create: [ItemGenderCreateWithoutPerson_itemGender_personsInput!]
  connectOrCreate: [ItemGenderCreateOrConnectWithoutPerson_itemGender_personsInput!]
  upsert: [ItemGenderUpsertWithWhereUniqueWithoutPerson_itemGender_personsInput!]
  set: [ItemGenderWhereUniqueInput!]
  disconnect: [ItemGenderWhereUniqueInput!]
  delete: [ItemGenderWhereUniqueInput!]
  connect: [ItemGenderWhereUniqueInput!]
  update: [ItemGenderUpdateWithWhereUniqueWithoutPerson_itemGender_personsInput!]
  updateMany: [ItemGenderUpdateManyWithWhereWithoutPerson_itemGender_personsInput!]
  deleteMany: [ItemGenderScalarWhereInput!]
}

input ItemGenderUpsertWithWhereUniqueWithoutPerson_itemGender_personsInput {
  where: ItemGenderWhereUniqueInput!
  update: ItemGenderUpdateWithoutPerson_itemGender_personsInput!
  create: ItemGenderCreateWithoutPerson_itemGender_personsInput!
}

input ItemGenderUpdateWithoutPerson_itemGender_personsInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  rank: NullableIntFieldUpdateOperationsInput
  Items_itemGender_items: ItemUpdateManyWithoutItemGendersInput
}

input ItemUpdateManyWithoutItemGendersInput {
  create: [ItemCreateWithoutItemGendersInput!]
  connectOrCreate: [ItemCreateOrConnectWithoutItemGendersInput!]
  upsert: [ItemUpsertWithWhereUniqueWithoutItemGendersInput!]
  set: [ItemWhereUniqueInput!]
  disconnect: [ItemWhereUniqueInput!]
  delete: [ItemWhereUniqueInput!]
  connect: [ItemWhereUniqueInput!]
  update: [ItemUpdateWithWhereUniqueWithoutItemGendersInput!]
  updateMany: [ItemUpdateManyWithWhereWithoutItemGendersInput!]
  deleteMany: [ItemScalarWhereInput!]
}

input ItemUpsertWithWhereUniqueWithoutItemGendersInput {
  where: ItemWhereUniqueInput!
  update: ItemUpdateWithoutItemGendersInput!
  create: ItemCreateWithoutItemGendersInput!
}

input ItemUpdateWithoutItemGendersInput {
  id: StringFieldUpdateOperationsInput
  active: NullableBoolFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  Category: CategoryUpdateOneRequiredWithoutItem_category_itemsInput
  Value: MoneyUpdateOneWithoutItem_value_itemInput
  Colors: ColorUpdateManyWithoutItem_color_itemsInput
  Pictures: PictureUpdateManyWithoutItem_picture_itemInput
  Condition: ConditionUpdateOneWithoutItem_condition_itemsInput
  Owner: PersonUpdateOneWithoutItem_owner_itemsInput
  Booster: BoosterUpdateManyWithoutItem_booster_itemInput
  Cloth_item_cloth: ClothUpdateOneWithoutItemInput
  TradePackage_item_tradePackages: TradePackageUpdateManyWithoutItemsInput
}

input MoneyUpdateOneWithoutItem_value_itemInput {
  create: MoneyCreateWithoutItem_value_itemInput
  connectOrCreate: MoneyCreateOrConnectWithoutItem_value_itemInput
  upsert: MoneyUpsertWithoutItem_value_itemInput
  disconnect: Boolean
  delete: Boolean
  connect: MoneyWhereUniqueInput
  update: MoneyUpdateWithoutItem_value_itemInput
}

input MoneyUpsertWithoutItem_value_itemInput {
  update: MoneyUpdateWithoutItem_value_itemInput!
  create: MoneyCreateWithoutItem_value_itemInput!
}

input MoneyUpdateWithoutItem_value_itemInput {
  id: StringFieldUpdateOperationsInput
  value: NullableFloatFieldUpdateOperationsInput
  Currency: NullableEnumCurrencyFieldUpdateOperationsInput
  History: HistoryUpdateOneWithoutMoney_history_moneyInput
  SubscriptionPlan_money_subscriptionPlans: SubscriptionPlanUpdateOneWithoutStandardPriceInput
  Subscription_money_subscription: SubscriptionUpdateOneWithoutPriceInput
}

input NullableFloatFieldUpdateOperationsInput {
  set: Float
  increment: Float
  decrement: Float
  multiply: Float
  divide: Float
}

input NullableEnumCurrencyFieldUpdateOperationsInput {
  set: Currency
}

input HistoryUpdateOneWithoutMoney_history_moneyInput {
  create: HistoryCreateWithoutMoney_history_moneyInput
  connectOrCreate: HistoryCreateOrConnectWithoutMoney_history_moneyInput
  upsert: HistoryUpsertWithoutMoney_history_moneyInput
  disconnect: Boolean
  delete: Boolean
  connect: HistoryWhereUniqueInput
  update: HistoryUpdateWithoutMoney_history_moneyInput
}

input HistoryUpsertWithoutMoney_history_moneyInput {
  update: HistoryUpdateWithoutMoney_history_moneyInput!
  create: HistoryCreateWithoutMoney_history_moneyInput!
}

input HistoryUpdateWithoutMoney_history_moneyInput {
  id: StringFieldUpdateOperationsInput
  Created: EventUpdateOneWithoutHistory_created_historyInput
  Updated: EventUpdateManyWithoutHistory_updated_historyInput
  Deleted: EventUpdateOneWithoutHistory_deleted_historyInput
  User_history_user: PersonUpdateOneWithoutHistoryInput
  Cloth_history_cloth: ClothUpdateOneWithoutHistoryInput
}

input EventUpdateOneWithoutHistory_created_historyInput {
  create: EventCreateWithoutHistory_created_historyInput
  connectOrCreate: EventCreateOrConnectWithoutHistory_created_historyInput
  upsert: EventUpsertWithoutHistory_created_historyInput
  disconnect: Boolean
  delete: Boolean
  connect: EventWhereUniqueInput
  update: EventUpdateWithoutHistory_created_historyInput
}

input EventUpsertWithoutHistory_created_historyInput {
  update: EventUpdateWithoutHistory_created_historyInput!
  create: EventCreateWithoutHistory_created_historyInput!
}

input EventUpdateWithoutHistory_created_historyInput {
  id: StringFieldUpdateOperationsInput
  when: DateTimeFieldUpdateOperationsInput
  what: StringFieldUpdateOperationsInput
  from: JSON
  to: JSON
  Who: PersonUpdateOneWithoutEvent_who_eventsInput
  History_updated_history: HistoryUpdateOneWithoutUpdatedInput
  History_deleted_history: HistoryUpdateOneWithoutDeletedInput
}

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input PersonUpdateOneWithoutEvent_who_eventsInput {
  create: PersonCreateWithoutEvent_who_eventsInput
  connectOrCreate: PersonCreateOrConnectWithoutEvent_who_eventsInput
  upsert: PersonUpsertWithoutEvent_who_eventsInput
  disconnect: Boolean
  delete: Boolean
  connect: PersonWhereUniqueInput
  update: PersonUpdateWithoutEvent_who_eventsInput
}

input PersonUpsertWithoutEvent_who_eventsInput {
  update: PersonUpdateWithoutEvent_who_eventsInput!
  create: PersonCreateWithoutEvent_who_eventsInput!
}

input PersonUpdateWithoutEvent_who_eventsInput {
  id: StringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  birthday: NullableDateTimeFieldUpdateOperationsInput
  firstName: NullableStringFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  Gender: GenderUpdateOneWithoutProfile_gender_profilesInput
  ItemGenders: ItemGenderUpdateManyWithoutPerson_itemGender_personsInput
  History: HistoryUpdateOneWithoutUser_history_userInput
  Telephone: TelephoneUpdateOneWithoutPerson_telephone_personInput
  Address: AddressUpdateManyWithoutPersonInput
  Picture: PictureUpdateOneWithoutPersonInput
  ClothSizes: ClothSizeUpdateManyWithoutPerson_clothSize_personsInput
  ClothStyles: ClothStyleUpdateManyWithoutPerson_clothStyle_personsInput
  Item_owner_items: ItemUpdateManyWithoutOwnerInput
  Channel: ChannelUpdateOneWithoutParticipantsInput
  TradePackage_wantedBy_tradePackages: TradePackageUpdateManyWithoutWantedByInput
  TradePackage_from_tradePackages: TradePackageUpdateManyWithoutFromInput
  Rating_person_ratings: RatingUpdateManyWithoutFromInput
}

input HistoryUpdateOneWithoutUser_history_userInput {
  create: HistoryCreateWithoutUser_history_userInput
  connectOrCreate: HistoryCreateOrConnectWithoutUser_history_userInput
  upsert: HistoryUpsertWithoutUser_history_userInput
  disconnect: Boolean
  delete: Boolean
  connect: HistoryWhereUniqueInput
  update: HistoryUpdateWithoutUser_history_userInput
}

input HistoryUpsertWithoutUser_history_userInput {
  update: HistoryUpdateWithoutUser_history_userInput!
  create: HistoryCreateWithoutUser_history_userInput!
}

input HistoryUpdateWithoutUser_history_userInput {
  id: StringFieldUpdateOperationsInput
  Created: EventUpdateOneWithoutHistory_created_historyInput
  Updated: EventUpdateManyWithoutHistory_updated_historyInput
  Deleted: EventUpdateOneWithoutHistory_deleted_historyInput
  Money_history_money: MoneyUpdateOneWithoutHistoryInput
  Cloth_history_cloth: ClothUpdateOneWithoutHistoryInput
}

input EventUpdateManyWithoutHistory_updated_historyInput {
  create: [EventCreateWithoutHistory_updated_historyInput!]
  connectOrCreate: [EventCreateOrConnectWithoutHistory_updated_historyInput!]
  upsert: [EventUpsertWithWhereUniqueWithoutHistory_updated_historyInput!]
  createMany: EventCreateManyHistory_updated_historyInputEnvelope
  set: [EventWhereUniqueInput!]
  disconnect: [EventWhereUniqueInput!]
  delete: [EventWhereUniqueInput!]
  connect: [EventWhereUniqueInput!]
  update: [EventUpdateWithWhereUniqueWithoutHistory_updated_historyInput!]
  updateMany: [EventUpdateManyWithWhereWithoutHistory_updated_historyInput!]
  deleteMany: [EventScalarWhereInput!]
}

input EventUpsertWithWhereUniqueWithoutHistory_updated_historyInput {
  where: EventWhereUniqueInput!
  update: EventUpdateWithoutHistory_updated_historyInput!
  create: EventCreateWithoutHistory_updated_historyInput!
}

input EventUpdateWithoutHistory_updated_historyInput {
  id: StringFieldUpdateOperationsInput
  when: DateTimeFieldUpdateOperationsInput
  what: StringFieldUpdateOperationsInput
  from: JSON
  to: JSON
  Who: PersonUpdateOneWithoutEvent_who_eventsInput
  History_created_history: HistoryUpdateOneWithoutCreatedInput
  History_deleted_history: HistoryUpdateOneWithoutDeletedInput
}

input HistoryUpdateOneWithoutCreatedInput {
  create: HistoryCreateWithoutCreatedInput
  connectOrCreate: HistoryCreateOrConnectWithoutCreatedInput
  upsert: HistoryUpsertWithoutCreatedInput
  disconnect: Boolean
  delete: Boolean
  connect: HistoryWhereUniqueInput
  update: HistoryUpdateWithoutCreatedInput
}

input HistoryUpsertWithoutCreatedInput {
  update: HistoryUpdateWithoutCreatedInput!
  create: HistoryCreateWithoutCreatedInput!
}

input HistoryUpdateWithoutCreatedInput {
  id: StringFieldUpdateOperationsInput
  Updated: EventUpdateManyWithoutHistory_updated_historyInput
  Deleted: EventUpdateOneWithoutHistory_deleted_historyInput
  User_history_user: PersonUpdateOneWithoutHistoryInput
  Money_history_money: MoneyUpdateOneWithoutHistoryInput
  Cloth_history_cloth: ClothUpdateOneWithoutHistoryInput
}

input EventUpdateOneWithoutHistory_deleted_historyInput {
  create: EventCreateWithoutHistory_deleted_historyInput
  connectOrCreate: EventCreateOrConnectWithoutHistory_deleted_historyInput
  upsert: EventUpsertWithoutHistory_deleted_historyInput
  disconnect: Boolean
  delete: Boolean
  connect: EventWhereUniqueInput
  update: EventUpdateWithoutHistory_deleted_historyInput
}

input EventUpsertWithoutHistory_deleted_historyInput {
  update: EventUpdateWithoutHistory_deleted_historyInput!
  create: EventCreateWithoutHistory_deleted_historyInput!
}

input EventUpdateWithoutHistory_deleted_historyInput {
  id: StringFieldUpdateOperationsInput
  when: DateTimeFieldUpdateOperationsInput
  what: StringFieldUpdateOperationsInput
  from: JSON
  to: JSON
  Who: PersonUpdateOneWithoutEvent_who_eventsInput
  History_created_history: HistoryUpdateOneWithoutCreatedInput
  History_updated_history: HistoryUpdateOneWithoutUpdatedInput
}

input HistoryUpdateOneWithoutUpdatedInput {
  create: HistoryCreateWithoutUpdatedInput
  connectOrCreate: HistoryCreateOrConnectWithoutUpdatedInput
  upsert: HistoryUpsertWithoutUpdatedInput
  disconnect: Boolean
  delete: Boolean
  connect: HistoryWhereUniqueInput
  update: HistoryUpdateWithoutUpdatedInput
}

input HistoryUpsertWithoutUpdatedInput {
  update: HistoryUpdateWithoutUpdatedInput!
  create: HistoryCreateWithoutUpdatedInput!
}

input HistoryUpdateWithoutUpdatedInput {
  id: StringFieldUpdateOperationsInput
  Created: EventUpdateOneWithoutHistory_created_historyInput
  Deleted: EventUpdateOneWithoutHistory_deleted_historyInput
  User_history_user: PersonUpdateOneWithoutHistoryInput
  Money_history_money: MoneyUpdateOneWithoutHistoryInput
  Cloth_history_cloth: ClothUpdateOneWithoutHistoryInput
}

input PersonUpdateOneWithoutHistoryInput {
  create: PersonCreateWithoutHistoryInput
  connectOrCreate: PersonCreateOrConnectWithoutHistoryInput
  upsert: PersonUpsertWithoutHistoryInput
  disconnect: Boolean
  delete: Boolean
  connect: PersonWhereUniqueInput
  update: PersonUpdateWithoutHistoryInput
}

input PersonUpsertWithoutHistoryInput {
  update: PersonUpdateWithoutHistoryInput!
  create: PersonCreateWithoutHistoryInput!
}

input PersonUpdateWithoutHistoryInput {
  id: StringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  birthday: NullableDateTimeFieldUpdateOperationsInput
  firstName: NullableStringFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  Gender: GenderUpdateOneWithoutProfile_gender_profilesInput
  ItemGenders: ItemGenderUpdateManyWithoutPerson_itemGender_personsInput
  Telephone: TelephoneUpdateOneWithoutPerson_telephone_personInput
  Address: AddressUpdateManyWithoutPersonInput
  Picture: PictureUpdateOneWithoutPersonInput
  ClothSizes: ClothSizeUpdateManyWithoutPerson_clothSize_personsInput
  ClothStyles: ClothStyleUpdateManyWithoutPerson_clothStyle_personsInput
  Event_who_events: EventUpdateManyWithoutWhoInput
  Item_owner_items: ItemUpdateManyWithoutOwnerInput
  Channel: ChannelUpdateOneWithoutParticipantsInput
  TradePackage_wantedBy_tradePackages: TradePackageUpdateManyWithoutWantedByInput
  TradePackage_from_tradePackages: TradePackageUpdateManyWithoutFromInput
  Rating_person_ratings: RatingUpdateManyWithoutFromInput
}

input TelephoneUpdateOneWithoutPerson_telephone_personInput {
  create: TelephoneCreateWithoutPerson_telephone_personInput
  connectOrCreate: TelephoneCreateOrConnectWithoutPerson_telephone_personInput
  upsert: TelephoneUpsertWithoutPerson_telephone_personInput
  disconnect: Boolean
  delete: Boolean
  connect: TelephoneWhereUniqueInput
  update: TelephoneUpdateWithoutPerson_telephone_personInput
}

input TelephoneUpsertWithoutPerson_telephone_personInput {
  update: TelephoneUpdateWithoutPerson_telephone_personInput!
  create: TelephoneCreateWithoutPerson_telephone_personInput!
}

input TelephoneUpdateWithoutPerson_telephone_personInput {
  id: StringFieldUpdateOperationsInput
  telephoneNumber: NullableStringFieldUpdateOperationsInput
}

input AddressUpdateManyWithoutPersonInput {
  create: [AddressCreateWithoutPersonInput!]
  connectOrCreate: [AddressCreateOrConnectWithoutPersonInput!]
  upsert: [AddressUpsertWithWhereUniqueWithoutPersonInput!]
  createMany: AddressCreateManyPersonInputEnvelope
  set: [AddressWhereUniqueInput!]
  disconnect: [AddressWhereUniqueInput!]
  delete: [AddressWhereUniqueInput!]
  connect: [AddressWhereUniqueInput!]
  update: [AddressUpdateWithWhereUniqueWithoutPersonInput!]
  updateMany: [AddressUpdateManyWithWhereWithoutPersonInput!]
  deleteMany: [AddressScalarWhereInput!]
}

input AddressUpsertWithWhereUniqueWithoutPersonInput {
  where: AddressWhereUniqueInput!
  update: AddressUpdateWithoutPersonInput!
  create: AddressCreateWithoutPersonInput!
}

input AddressUpdateWithoutPersonInput {
  id: StringFieldUpdateOperationsInput
  line1: NullableStringFieldUpdateOperationsInput
  line2: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  province: NullableStringFieldUpdateOperationsInput
  zip: NullableStringFieldUpdateOperationsInput
  Country: CountryUpdateOneWithoutAddress_county_addressesInput
  Wardrobes: WardrobeUpdateManyWithoutAddressInput
}

input CountryUpdateOneWithoutAddress_county_addressesInput {
  create: CountryCreateWithoutAddress_county_addressesInput
  connectOrCreate: CountryCreateOrConnectWithoutAddress_county_addressesInput
  upsert: CountryUpsertWithoutAddress_county_addressesInput
  disconnect: Boolean
  delete: Boolean
  connect: CountryWhereUniqueInput
  update: CountryUpdateWithoutAddress_county_addressesInput
}

input CountryUpsertWithoutAddress_county_addressesInput {
  update: CountryUpdateWithoutAddress_county_addressesInput!
  create: CountryCreateWithoutAddress_county_addressesInput!
}

input CountryUpdateWithoutAddress_county_addressesInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input WardrobeUpdateManyWithoutAddressInput {
  create: [WardrobeCreateWithoutAddressInput!]
  connectOrCreate: [WardrobeCreateOrConnectWithoutAddressInput!]
  upsert: [WardrobeUpsertWithWhereUniqueWithoutAddressInput!]
  createMany: WardrobeCreateManyAddressInputEnvelope
  set: [WardrobeWhereUniqueInput!]
  disconnect: [WardrobeWhereUniqueInput!]
  delete: [WardrobeWhereUniqueInput!]
  connect: [WardrobeWhereUniqueInput!]
  update: [WardrobeUpdateWithWhereUniqueWithoutAddressInput!]
  updateMany: [WardrobeUpdateManyWithWhereWithoutAddressInput!]
  deleteMany: [WardrobeScalarWhereInput!]
}

input WardrobeUpsertWithWhereUniqueWithoutAddressInput {
  where: WardrobeWhereUniqueInput!
  update: WardrobeUpdateWithoutAddressInput!
  create: WardrobeCreateWithoutAddressInput!
}

input WardrobeUpdateWithoutAddressInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  Cloths: ClothUpdateManyWithoutWardrobeInput
}

input ClothUpdateManyWithoutWardrobeInput {
  create: [ClothCreateWithoutWardrobeInput!]
  connectOrCreate: [ClothCreateOrConnectWithoutWardrobeInput!]
  upsert: [ClothUpsertWithWhereUniqueWithoutWardrobeInput!]
  createMany: ClothCreateManyWardrobeInputEnvelope
  set: [ClothWhereUniqueInput!]
  disconnect: [ClothWhereUniqueInput!]
  delete: [ClothWhereUniqueInput!]
  connect: [ClothWhereUniqueInput!]
  update: [ClothUpdateWithWhereUniqueWithoutWardrobeInput!]
  updateMany: [ClothUpdateManyWithWhereWithoutWardrobeInput!]
  deleteMany: [ClothScalarWhereInput!]
}

input ClothUpsertWithWhereUniqueWithoutWardrobeInput {
  where: ClothWhereUniqueInput!
  update: ClothUpdateWithoutWardrobeInput!
  create: ClothCreateWithoutWardrobeInput!
}

input ClothUpdateWithoutWardrobeInput {
  id: StringFieldUpdateOperationsInput
  code: NullableStringFieldUpdateOperationsInput
  Material: MaterialUpdateOneWithoutCloth_material_clothsInput
  Item: ItemUpdateOneRequiredWithoutCloth_item_clothInput
  ClothSizes: ClothSizeUpdateManyWithoutCloth_clothSize_clothInput
  ClothStyles: ClothStyleUpdateManyWithoutItem_clothStyle_itemsInput
  History: HistoryUpdateOneWithoutCloth_history_clothInput
}

input ClothSizeUpdateManyWithoutCloth_clothSize_clothInput {
  create: [ClothSizeCreateWithoutCloth_clothSize_clothInput!]
  connectOrCreate: [ClothSizeCreateOrConnectWithoutCloth_clothSize_clothInput!]
  upsert: [ClothSizeUpsertWithWhereUniqueWithoutCloth_clothSize_clothInput!]
  set: [ClothSizeWhereUniqueInput!]
  disconnect: [ClothSizeWhereUniqueInput!]
  delete: [ClothSizeWhereUniqueInput!]
  connect: [ClothSizeWhereUniqueInput!]
  update: [ClothSizeUpdateWithWhereUniqueWithoutCloth_clothSize_clothInput!]
  updateMany: [ClothSizeUpdateManyWithWhereWithoutCloth_clothSize_clothInput!]
  deleteMany: [ClothSizeScalarWhereInput!]
}

input ClothSizeUpsertWithWhereUniqueWithoutCloth_clothSize_clothInput {
  where: ClothSizeWhereUniqueInput!
  update: ClothSizeUpdateWithoutCloth_clothSize_clothInput!
  create: ClothSizeCreateWithoutCloth_clothSize_clothInput!
}

input ClothSizeUpdateWithoutCloth_clothSize_clothInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  rank: NullableIntFieldUpdateOperationsInput
  SizeModel: NullableEnumSizeModelFieldUpdateOperationsInput
  Categories: CategoryUpdateManyWithoutClothSizesInput
  Person_clothSize_persons: PersonUpdateManyWithoutClothSizesInput
  ComparableTo: ClothSizeUpdateManyWithoutClothSizeInput
  ClothSize: ClothSizeUpdateManyWithoutComparableToInput
}

input CategoryUpdateManyWithoutClothSizesInput {
  create: [CategoryCreateWithoutClothSizesInput!]
  connectOrCreate: [CategoryCreateOrConnectWithoutClothSizesInput!]
  upsert: [CategoryUpsertWithWhereUniqueWithoutClothSizesInput!]
  set: [CategoryWhereUniqueInput!]
  disconnect: [CategoryWhereUniqueInput!]
  delete: [CategoryWhereUniqueInput!]
  connect: [CategoryWhereUniqueInput!]
  update: [CategoryUpdateWithWhereUniqueWithoutClothSizesInput!]
  updateMany: [CategoryUpdateManyWithWhereWithoutClothSizesInput!]
  deleteMany: [CategoryScalarWhereInput!]
}

input CategoryUpsertWithWhereUniqueWithoutClothSizesInput {
  where: CategoryWhereUniqueInput!
  update: CategoryUpdateWithoutClothSizesInput!
  create: CategoryCreateWithoutClothSizesInput!
}

input CategoryUpdateWithoutClothSizesInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  Brand_category_brands: BrandUpdateManyWithoutCategoriesInput
  Item_category_items: ItemUpdateManyWithoutCategoryInput
  ParentCategory: CategoryUpdateOneWithoutSubCategoriesInput
  SubCategories: CategoryUpdateManyWithoutParentCategoryInput
}

input BrandUpdateManyWithoutCategoriesInput {
  create: [BrandCreateWithoutCategoriesInput!]
  connectOrCreate: [BrandCreateOrConnectWithoutCategoriesInput!]
  upsert: [BrandUpsertWithWhereUniqueWithoutCategoriesInput!]
  set: [BrandWhereUniqueInput!]
  disconnect: [BrandWhereUniqueInput!]
  delete: [BrandWhereUniqueInput!]
  connect: [BrandWhereUniqueInput!]
  update: [BrandUpdateWithWhereUniqueWithoutCategoriesInput!]
  updateMany: [BrandUpdateManyWithWhereWithoutCategoriesInput!]
  deleteMany: [BrandScalarWhereInput!]
}

input BrandUpsertWithWhereUniqueWithoutCategoriesInput {
  where: BrandWhereUniqueInput!
  update: BrandUpdateWithoutCategoriesInput!
  create: BrandCreateWithoutCategoriesInput!
}

input BrandUpdateWithoutCategoriesInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
}

input BrandUpdateWithWhereUniqueWithoutCategoriesInput {
  where: BrandWhereUniqueInput!
  data: BrandUpdateWithoutCategoriesInput!
}

input BrandUpdateManyWithWhereWithoutCategoriesInput {
  where: BrandScalarWhereInput!
  data: BrandUpdateManyMutationInput!
}

input BrandScalarWhereInput {
  AND: [BrandScalarWhereInput!]
  OR: [BrandScalarWhereInput!]
  NOT: [BrandScalarWhereInput!]
  id: StringFilter
  name: StringNullableFilter
}

input BrandUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
}

input ItemUpdateManyWithoutCategoryInput {
  create: [ItemCreateWithoutCategoryInput!]
  connectOrCreate: [ItemCreateOrConnectWithoutCategoryInput!]
  upsert: [ItemUpsertWithWhereUniqueWithoutCategoryInput!]
  createMany: ItemCreateManyCategoryInputEnvelope
  set: [ItemWhereUniqueInput!]
  disconnect: [ItemWhereUniqueInput!]
  delete: [ItemWhereUniqueInput!]
  connect: [ItemWhereUniqueInput!]
  update: [ItemUpdateWithWhereUniqueWithoutCategoryInput!]
  updateMany: [ItemUpdateManyWithWhereWithoutCategoryInput!]
  deleteMany: [ItemScalarWhereInput!]
}

input ItemUpsertWithWhereUniqueWithoutCategoryInput {
  where: ItemWhereUniqueInput!
  update: ItemUpdateWithoutCategoryInput!
  create: ItemCreateWithoutCategoryInput!
}

input ItemUpdateWithoutCategoryInput {
  id: StringFieldUpdateOperationsInput
  active: NullableBoolFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  Value: MoneyUpdateOneWithoutItem_value_itemInput
  Colors: ColorUpdateManyWithoutItem_color_itemsInput
  ItemGenders: ItemGenderUpdateManyWithoutItems_itemGender_itemsInput
  Pictures: PictureUpdateManyWithoutItem_picture_itemInput
  Condition: ConditionUpdateOneWithoutItem_condition_itemsInput
  Owner: PersonUpdateOneWithoutItem_owner_itemsInput
  Booster: BoosterUpdateManyWithoutItem_booster_itemInput
  Cloth_item_cloth: ClothUpdateOneWithoutItemInput
  TradePackage_item_tradePackages: TradePackageUpdateManyWithoutItemsInput
}

input ColorUpdateManyWithoutItem_color_itemsInput {
  create: [ColorCreateWithoutItem_color_itemsInput!]
  connectOrCreate: [ColorCreateOrConnectWithoutItem_color_itemsInput!]
  upsert: [ColorUpsertWithWhereUniqueWithoutItem_color_itemsInput!]
  set: [ColorWhereUniqueInput!]
  disconnect: [ColorWhereUniqueInput!]
  delete: [ColorWhereUniqueInput!]
  connect: [ColorWhereUniqueInput!]
  update: [ColorUpdateWithWhereUniqueWithoutItem_color_itemsInput!]
  updateMany: [ColorUpdateManyWithWhereWithoutItem_color_itemsInput!]
  deleteMany: [ColorScalarWhereInput!]
}

input ColorUpsertWithWhereUniqueWithoutItem_color_itemsInput {
  where: ColorWhereUniqueInput!
  update: ColorUpdateWithoutItem_color_itemsInput!
  create: ColorCreateWithoutItem_color_itemsInput!
}

input ColorUpdateWithoutItem_color_itemsInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  Type: NullableEnumColorTypeFieldUpdateOperationsInput
}

input NullableEnumColorTypeFieldUpdateOperationsInput {
  set: ColorType
}

input ColorUpdateWithWhereUniqueWithoutItem_color_itemsInput {
  where: ColorWhereUniqueInput!
  data: ColorUpdateWithoutItem_color_itemsInput!
}

input ColorUpdateManyWithWhereWithoutItem_color_itemsInput {
  where: ColorScalarWhereInput!
  data: ColorUpdateManyMutationInput!
}

input ColorScalarWhereInput {
  AND: [ColorScalarWhereInput!]
  OR: [ColorScalarWhereInput!]
  NOT: [ColorScalarWhereInput!]
  id: StringFilter
  name: StringNullableFilter
  Type: EnumColorTypeNullableFilter
}

input ColorUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  Type: NullableEnumColorTypeFieldUpdateOperationsInput
}

input ItemGenderUpdateManyWithoutItems_itemGender_itemsInput {
  create: [ItemGenderCreateWithoutItems_itemGender_itemsInput!]
  connectOrCreate: [ItemGenderCreateOrConnectWithoutItems_itemGender_itemsInput!]
  upsert: [ItemGenderUpsertWithWhereUniqueWithoutItems_itemGender_itemsInput!]
  set: [ItemGenderWhereUniqueInput!]
  disconnect: [ItemGenderWhereUniqueInput!]
  delete: [ItemGenderWhereUniqueInput!]
  connect: [ItemGenderWhereUniqueInput!]
  update: [ItemGenderUpdateWithWhereUniqueWithoutItems_itemGender_itemsInput!]
  updateMany: [ItemGenderUpdateManyWithWhereWithoutItems_itemGender_itemsInput!]
  deleteMany: [ItemGenderScalarWhereInput!]
}

input ItemGenderUpsertWithWhereUniqueWithoutItems_itemGender_itemsInput {
  where: ItemGenderWhereUniqueInput!
  update: ItemGenderUpdateWithoutItems_itemGender_itemsInput!
  create: ItemGenderCreateWithoutItems_itemGender_itemsInput!
}

input ItemGenderUpdateWithoutItems_itemGender_itemsInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  rank: NullableIntFieldUpdateOperationsInput
  Person_itemGender_persons: PersonUpdateManyWithoutItemGendersInput
}

input PersonUpdateManyWithoutItemGendersInput {
  create: [PersonCreateWithoutItemGendersInput!]
  connectOrCreate: [PersonCreateOrConnectWithoutItemGendersInput!]
  upsert: [PersonUpsertWithWhereUniqueWithoutItemGendersInput!]
  set: [PersonWhereUniqueInput!]
  disconnect: [PersonWhereUniqueInput!]
  delete: [PersonWhereUniqueInput!]
  connect: [PersonWhereUniqueInput!]
  update: [PersonUpdateWithWhereUniqueWithoutItemGendersInput!]
  updateMany: [PersonUpdateManyWithWhereWithoutItemGendersInput!]
  deleteMany: [PersonScalarWhereInput!]
}

input PersonUpsertWithWhereUniqueWithoutItemGendersInput {
  where: PersonWhereUniqueInput!
  update: PersonUpdateWithoutItemGendersInput!
  create: PersonCreateWithoutItemGendersInput!
}

input PersonUpdateWithoutItemGendersInput {
  id: StringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  birthday: NullableDateTimeFieldUpdateOperationsInput
  firstName: NullableStringFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  Gender: GenderUpdateOneWithoutProfile_gender_profilesInput
  History: HistoryUpdateOneWithoutUser_history_userInput
  Telephone: TelephoneUpdateOneWithoutPerson_telephone_personInput
  Address: AddressUpdateManyWithoutPersonInput
  Picture: PictureUpdateOneWithoutPersonInput
  ClothSizes: ClothSizeUpdateManyWithoutPerson_clothSize_personsInput
  ClothStyles: ClothStyleUpdateManyWithoutPerson_clothStyle_personsInput
  Event_who_events: EventUpdateManyWithoutWhoInput
  Item_owner_items: ItemUpdateManyWithoutOwnerInput
  Channel: ChannelUpdateOneWithoutParticipantsInput
  TradePackage_wantedBy_tradePackages: TradePackageUpdateManyWithoutWantedByInput
  TradePackage_from_tradePackages: TradePackageUpdateManyWithoutFromInput
  Rating_person_ratings: RatingUpdateManyWithoutFromInput
}

input PictureUpdateOneWithoutPersonInput {
  create: PictureCreateWithoutPersonInput
  connectOrCreate: PictureCreateOrConnectWithoutPersonInput
  upsert: PictureUpsertWithoutPersonInput
  disconnect: Boolean
  delete: Boolean
  connect: PictureWhereUniqueInput
  update: PictureUpdateWithoutPersonInput
}

input PictureUpsertWithoutPersonInput {
  update: PictureUpdateWithoutPersonInput!
  create: PictureCreateWithoutPersonInput!
}

input PictureUpdateWithoutPersonInput {
  id: StringFieldUpdateOperationsInput
  rank: NullableIntFieldUpdateOperationsInput
  LQ: FileUpdateOneWithoutFile_lqPictureFile_fileInput
  MQ: FileUpdateOneWithoutFile_mqPictureFile_fileInput
  HQ: FileUpdateOneWithoutFile_hqPictureFile_fileInput
  Item_picture_item: ItemUpdateOneWithoutPicturesInput
}

input FileUpdateOneWithoutFile_lqPictureFile_fileInput {
  create: FileCreateWithoutFile_lqPictureFile_fileInput
  connectOrCreate: FileCreateOrConnectWithoutFile_lqPictureFile_fileInput
  upsert: FileUpsertWithoutFile_lqPictureFile_fileInput
  disconnect: Boolean
  delete: Boolean
  connect: FileWhereUniqueInput
  update: FileUpdateWithoutFile_lqPictureFile_fileInput
}

input FileUpsertWithoutFile_lqPictureFile_fileInput {
  update: FileUpdateWithoutFile_lqPictureFile_fileInput!
  create: FileCreateWithoutFile_lqPictureFile_fileInput!
}

input FileUpdateWithoutFile_lqPictureFile_fileInput {
  id: StringFieldUpdateOperationsInput
  extension: NullableStringFieldUpdateOperationsInput
  File_mqPictureFile_file: PictureUpdateOneWithoutMQInput
  File_hqPictureFile_file: PictureUpdateOneWithoutHQInput
}

input PictureUpdateOneWithoutMQInput {
  create: PictureCreateWithoutMQInput
  connectOrCreate: PictureCreateOrConnectWithoutMQInput
  upsert: PictureUpsertWithoutMQInput
  disconnect: Boolean
  delete: Boolean
  connect: PictureWhereUniqueInput
  update: PictureUpdateWithoutMQInput
}

input PictureUpsertWithoutMQInput {
  update: PictureUpdateWithoutMQInput!
  create: PictureCreateWithoutMQInput!
}

input PictureUpdateWithoutMQInput {
  id: StringFieldUpdateOperationsInput
  rank: NullableIntFieldUpdateOperationsInput
  LQ: FileUpdateOneWithoutFile_lqPictureFile_fileInput
  HQ: FileUpdateOneWithoutFile_hqPictureFile_fileInput
  Person: PersonUpdateOneWithoutPictureInput
  Item_picture_item: ItemUpdateOneWithoutPicturesInput
}

input FileUpdateOneWithoutFile_hqPictureFile_fileInput {
  create: FileCreateWithoutFile_hqPictureFile_fileInput
  connectOrCreate: FileCreateOrConnectWithoutFile_hqPictureFile_fileInput
  upsert: FileUpsertWithoutFile_hqPictureFile_fileInput
  disconnect: Boolean
  delete: Boolean
  connect: FileWhereUniqueInput
  update: FileUpdateWithoutFile_hqPictureFile_fileInput
}

input FileUpsertWithoutFile_hqPictureFile_fileInput {
  update: FileUpdateWithoutFile_hqPictureFile_fileInput!
  create: FileCreateWithoutFile_hqPictureFile_fileInput!
}

input FileUpdateWithoutFile_hqPictureFile_fileInput {
  id: StringFieldUpdateOperationsInput
  extension: NullableStringFieldUpdateOperationsInput
  File_lqPictureFile_file: PictureUpdateOneWithoutLQInput
  File_mqPictureFile_file: PictureUpdateOneWithoutMQInput
}

input PictureUpdateOneWithoutLQInput {
  create: PictureCreateWithoutLQInput
  connectOrCreate: PictureCreateOrConnectWithoutLQInput
  upsert: PictureUpsertWithoutLQInput
  disconnect: Boolean
  delete: Boolean
  connect: PictureWhereUniqueInput
  update: PictureUpdateWithoutLQInput
}

input PictureUpsertWithoutLQInput {
  update: PictureUpdateWithoutLQInput!
  create: PictureCreateWithoutLQInput!
}

input PictureUpdateWithoutLQInput {
  id: StringFieldUpdateOperationsInput
  rank: NullableIntFieldUpdateOperationsInput
  MQ: FileUpdateOneWithoutFile_mqPictureFile_fileInput
  HQ: FileUpdateOneWithoutFile_hqPictureFile_fileInput
  Person: PersonUpdateOneWithoutPictureInput
  Item_picture_item: ItemUpdateOneWithoutPicturesInput
}

input FileUpdateOneWithoutFile_mqPictureFile_fileInput {
  create: FileCreateWithoutFile_mqPictureFile_fileInput
  connectOrCreate: FileCreateOrConnectWithoutFile_mqPictureFile_fileInput
  upsert: FileUpsertWithoutFile_mqPictureFile_fileInput
  disconnect: Boolean
  delete: Boolean
  connect: FileWhereUniqueInput
  update: FileUpdateWithoutFile_mqPictureFile_fileInput
}

input FileUpsertWithoutFile_mqPictureFile_fileInput {
  update: FileUpdateWithoutFile_mqPictureFile_fileInput!
  create: FileCreateWithoutFile_mqPictureFile_fileInput!
}

input FileUpdateWithoutFile_mqPictureFile_fileInput {
  id: StringFieldUpdateOperationsInput
  extension: NullableStringFieldUpdateOperationsInput
  File_lqPictureFile_file: PictureUpdateOneWithoutLQInput
  File_hqPictureFile_file: PictureUpdateOneWithoutHQInput
}

input PictureUpdateOneWithoutHQInput {
  create: PictureCreateWithoutHQInput
  connectOrCreate: PictureCreateOrConnectWithoutHQInput
  upsert: PictureUpsertWithoutHQInput
  disconnect: Boolean
  delete: Boolean
  connect: PictureWhereUniqueInput
  update: PictureUpdateWithoutHQInput
}

input PictureUpsertWithoutHQInput {
  update: PictureUpdateWithoutHQInput!
  create: PictureCreateWithoutHQInput!
}

input PictureUpdateWithoutHQInput {
  id: StringFieldUpdateOperationsInput
  rank: NullableIntFieldUpdateOperationsInput
  LQ: FileUpdateOneWithoutFile_lqPictureFile_fileInput
  MQ: FileUpdateOneWithoutFile_mqPictureFile_fileInput
  Person: PersonUpdateOneWithoutPictureInput
  Item_picture_item: ItemUpdateOneWithoutPicturesInput
}

input PersonUpdateOneWithoutPictureInput {
  create: PersonCreateWithoutPictureInput
  connectOrCreate: PersonCreateOrConnectWithoutPictureInput
  upsert: PersonUpsertWithoutPictureInput
  disconnect: Boolean
  delete: Boolean
  connect: PersonWhereUniqueInput
  update: PersonUpdateWithoutPictureInput
}

input PersonUpsertWithoutPictureInput {
  update: PersonUpdateWithoutPictureInput!
  create: PersonCreateWithoutPictureInput!
}

input PersonUpdateWithoutPictureInput {
  id: StringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  birthday: NullableDateTimeFieldUpdateOperationsInput
  firstName: NullableStringFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  Gender: GenderUpdateOneWithoutProfile_gender_profilesInput
  ItemGenders: ItemGenderUpdateManyWithoutPerson_itemGender_personsInput
  History: HistoryUpdateOneWithoutUser_history_userInput
  Telephone: TelephoneUpdateOneWithoutPerson_telephone_personInput
  Address: AddressUpdateManyWithoutPersonInput
  ClothSizes: ClothSizeUpdateManyWithoutPerson_clothSize_personsInput
  ClothStyles: ClothStyleUpdateManyWithoutPerson_clothStyle_personsInput
  Event_who_events: EventUpdateManyWithoutWhoInput
  Item_owner_items: ItemUpdateManyWithoutOwnerInput
  Channel: ChannelUpdateOneWithoutParticipantsInput
  TradePackage_wantedBy_tradePackages: TradePackageUpdateManyWithoutWantedByInput
  TradePackage_from_tradePackages: TradePackageUpdateManyWithoutFromInput
  Rating_person_ratings: RatingUpdateManyWithoutFromInput
}

input ClothSizeUpdateManyWithoutPerson_clothSize_personsInput {
  create: [ClothSizeCreateWithoutPerson_clothSize_personsInput!]
  connectOrCreate: [ClothSizeCreateOrConnectWithoutPerson_clothSize_personsInput!]
  upsert: [ClothSizeUpsertWithWhereUniqueWithoutPerson_clothSize_personsInput!]
  set: [ClothSizeWhereUniqueInput!]
  disconnect: [ClothSizeWhereUniqueInput!]
  delete: [ClothSizeWhereUniqueInput!]
  connect: [ClothSizeWhereUniqueInput!]
  update: [ClothSizeUpdateWithWhereUniqueWithoutPerson_clothSize_personsInput!]
  updateMany: [ClothSizeUpdateManyWithWhereWithoutPerson_clothSize_personsInput!]
  deleteMany: [ClothSizeScalarWhereInput!]
}

input ClothSizeUpsertWithWhereUniqueWithoutPerson_clothSize_personsInput {
  where: ClothSizeWhereUniqueInput!
  update: ClothSizeUpdateWithoutPerson_clothSize_personsInput!
  create: ClothSizeCreateWithoutPerson_clothSize_personsInput!
}

input ClothSizeUpdateWithoutPerson_clothSize_personsInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  rank: NullableIntFieldUpdateOperationsInput
  SizeModel: NullableEnumSizeModelFieldUpdateOperationsInput
  Categories: CategoryUpdateManyWithoutClothSizesInput
  Cloth_clothSize_cloth: ClothUpdateManyWithoutClothSizesInput
  ComparableTo: ClothSizeUpdateManyWithoutClothSizeInput
  ClothSize: ClothSizeUpdateManyWithoutComparableToInput
}

input ClothSizeUpdateManyWithoutClothSizeInput {
  create: [ClothSizeCreateWithoutClothSizeInput!]
  connectOrCreate: [ClothSizeCreateOrConnectWithoutClothSizeInput!]
  upsert: [ClothSizeUpsertWithWhereUniqueWithoutClothSizeInput!]
  set: [ClothSizeWhereUniqueInput!]
  disconnect: [ClothSizeWhereUniqueInput!]
  delete: [ClothSizeWhereUniqueInput!]
  connect: [ClothSizeWhereUniqueInput!]
  update: [ClothSizeUpdateWithWhereUniqueWithoutClothSizeInput!]
  updateMany: [ClothSizeUpdateManyWithWhereWithoutClothSizeInput!]
  deleteMany: [ClothSizeScalarWhereInput!]
}

input ClothSizeUpsertWithWhereUniqueWithoutClothSizeInput {
  where: ClothSizeWhereUniqueInput!
  update: ClothSizeUpdateWithoutClothSizeInput!
  create: ClothSizeCreateWithoutClothSizeInput!
}

input ClothSizeUpdateWithoutClothSizeInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  rank: NullableIntFieldUpdateOperationsInput
  SizeModel: NullableEnumSizeModelFieldUpdateOperationsInput
  Categories: CategoryUpdateManyWithoutClothSizesInput
  Cloth_clothSize_cloth: ClothUpdateManyWithoutClothSizesInput
  Person_clothSize_persons: PersonUpdateManyWithoutClothSizesInput
  ComparableTo: ClothSizeUpdateManyWithoutClothSizeInput
}

input PersonUpdateManyWithoutClothSizesInput {
  create: [PersonCreateWithoutClothSizesInput!]
  connectOrCreate: [PersonCreateOrConnectWithoutClothSizesInput!]
  upsert: [PersonUpsertWithWhereUniqueWithoutClothSizesInput!]
  set: [PersonWhereUniqueInput!]
  disconnect: [PersonWhereUniqueInput!]
  delete: [PersonWhereUniqueInput!]
  connect: [PersonWhereUniqueInput!]
  update: [PersonUpdateWithWhereUniqueWithoutClothSizesInput!]
  updateMany: [PersonUpdateManyWithWhereWithoutClothSizesInput!]
  deleteMany: [PersonScalarWhereInput!]
}

input PersonUpsertWithWhereUniqueWithoutClothSizesInput {
  where: PersonWhereUniqueInput!
  update: PersonUpdateWithoutClothSizesInput!
  create: PersonCreateWithoutClothSizesInput!
}

input PersonUpdateWithoutClothSizesInput {
  id: StringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  birthday: NullableDateTimeFieldUpdateOperationsInput
  firstName: NullableStringFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  Gender: GenderUpdateOneWithoutProfile_gender_profilesInput
  ItemGenders: ItemGenderUpdateManyWithoutPerson_itemGender_personsInput
  History: HistoryUpdateOneWithoutUser_history_userInput
  Telephone: TelephoneUpdateOneWithoutPerson_telephone_personInput
  Address: AddressUpdateManyWithoutPersonInput
  Picture: PictureUpdateOneWithoutPersonInput
  ClothStyles: ClothStyleUpdateManyWithoutPerson_clothStyle_personsInput
  Event_who_events: EventUpdateManyWithoutWhoInput
  Item_owner_items: ItemUpdateManyWithoutOwnerInput
  Channel: ChannelUpdateOneWithoutParticipantsInput
  TradePackage_wantedBy_tradePackages: TradePackageUpdateManyWithoutWantedByInput
  TradePackage_from_tradePackages: TradePackageUpdateManyWithoutFromInput
  Rating_person_ratings: RatingUpdateManyWithoutFromInput
}

input ClothStyleUpdateManyWithoutPerson_clothStyle_personsInput {
  create: [ClothStyleCreateWithoutPerson_clothStyle_personsInput!]
  connectOrCreate: [ClothStyleCreateOrConnectWithoutPerson_clothStyle_personsInput!]
  upsert: [ClothStyleUpsertWithWhereUniqueWithoutPerson_clothStyle_personsInput!]
  set: [ClothStyleWhereUniqueInput!]
  disconnect: [ClothStyleWhereUniqueInput!]
  delete: [ClothStyleWhereUniqueInput!]
  connect: [ClothStyleWhereUniqueInput!]
  update: [ClothStyleUpdateWithWhereUniqueWithoutPerson_clothStyle_personsInput!]
  updateMany: [ClothStyleUpdateManyWithWhereWithoutPerson_clothStyle_personsInput!]
  deleteMany: [ClothStyleScalarWhereInput!]
}

input ClothStyleUpsertWithWhereUniqueWithoutPerson_clothStyle_personsInput {
  where: ClothStyleWhereUniqueInput!
  update: ClothStyleUpdateWithoutPerson_clothStyle_personsInput!
  create: ClothStyleCreateWithoutPerson_clothStyle_personsInput!
}

input ClothStyleUpdateWithoutPerson_clothStyle_personsInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  Item_clothStyle_items: ClothUpdateManyWithoutClothStylesInput
}

input ClothStyleUpdateWithWhereUniqueWithoutPerson_clothStyle_personsInput {
  where: ClothStyleWhereUniqueInput!
  data: ClothStyleUpdateWithoutPerson_clothStyle_personsInput!
}

input ClothStyleUpdateManyWithWhereWithoutPerson_clothStyle_personsInput {
  where: ClothStyleScalarWhereInput!
  data: ClothStyleUpdateManyMutationInput!
}

input ClothStyleScalarWhereInput {
  AND: [ClothStyleScalarWhereInput!]
  OR: [ClothStyleScalarWhereInput!]
  NOT: [ClothStyleScalarWhereInput!]
  id: StringFilter
  name: StringNullableFilter
}

input ClothStyleUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
}

input EventUpdateManyWithoutWhoInput {
  create: [EventCreateWithoutWhoInput!]
  connectOrCreate: [EventCreateOrConnectWithoutWhoInput!]
  upsert: [EventUpsertWithWhereUniqueWithoutWhoInput!]
  createMany: EventCreateManyWhoInputEnvelope
  set: [EventWhereUniqueInput!]
  disconnect: [EventWhereUniqueInput!]
  delete: [EventWhereUniqueInput!]
  connect: [EventWhereUniqueInput!]
  update: [EventUpdateWithWhereUniqueWithoutWhoInput!]
  updateMany: [EventUpdateManyWithWhereWithoutWhoInput!]
  deleteMany: [EventScalarWhereInput!]
}

input EventUpsertWithWhereUniqueWithoutWhoInput {
  where: EventWhereUniqueInput!
  update: EventUpdateWithoutWhoInput!
  create: EventCreateWithoutWhoInput!
}

input EventUpdateWithoutWhoInput {
  id: StringFieldUpdateOperationsInput
  when: DateTimeFieldUpdateOperationsInput
  what: StringFieldUpdateOperationsInput
  from: JSON
  to: JSON
  History_created_history: HistoryUpdateOneWithoutCreatedInput
  History_updated_history: HistoryUpdateOneWithoutUpdatedInput
  History_deleted_history: HistoryUpdateOneWithoutDeletedInput
}

input HistoryUpdateOneWithoutDeletedInput {
  create: HistoryCreateWithoutDeletedInput
  connectOrCreate: HistoryCreateOrConnectWithoutDeletedInput
  upsert: HistoryUpsertWithoutDeletedInput
  disconnect: Boolean
  delete: Boolean
  connect: HistoryWhereUniqueInput
  update: HistoryUpdateWithoutDeletedInput
}

input HistoryUpsertWithoutDeletedInput {
  update: HistoryUpdateWithoutDeletedInput!
  create: HistoryCreateWithoutDeletedInput!
}

input HistoryUpdateWithoutDeletedInput {
  id: StringFieldUpdateOperationsInput
  Created: EventUpdateOneWithoutHistory_created_historyInput
  Updated: EventUpdateManyWithoutHistory_updated_historyInput
  User_history_user: PersonUpdateOneWithoutHistoryInput
  Money_history_money: MoneyUpdateOneWithoutHistoryInput
  Cloth_history_cloth: ClothUpdateOneWithoutHistoryInput
}

input MoneyUpdateOneWithoutHistoryInput {
  create: MoneyCreateWithoutHistoryInput
  connectOrCreate: MoneyCreateOrConnectWithoutHistoryInput
  upsert: MoneyUpsertWithoutHistoryInput
  disconnect: Boolean
  delete: Boolean
  connect: MoneyWhereUniqueInput
  update: MoneyUpdateWithoutHistoryInput
}

input MoneyUpsertWithoutHistoryInput {
  update: MoneyUpdateWithoutHistoryInput!
  create: MoneyCreateWithoutHistoryInput!
}

input MoneyUpdateWithoutHistoryInput {
  id: StringFieldUpdateOperationsInput
  value: NullableFloatFieldUpdateOperationsInput
  Currency: NullableEnumCurrencyFieldUpdateOperationsInput
  Item_value_item: ItemUpdateOneWithoutValueInput
  SubscriptionPlan_money_subscriptionPlans: SubscriptionPlanUpdateOneWithoutStandardPriceInput
  Subscription_money_subscription: SubscriptionUpdateOneWithoutPriceInput
}

input ItemUpdateOneWithoutValueInput {
  create: ItemCreateWithoutValueInput
  connectOrCreate: ItemCreateOrConnectWithoutValueInput
  upsert: ItemUpsertWithoutValueInput
  disconnect: Boolean
  delete: Boolean
  connect: ItemWhereUniqueInput
  update: ItemUpdateWithoutValueInput
}

input ItemUpsertWithoutValueInput {
  update: ItemUpdateWithoutValueInput!
  create: ItemCreateWithoutValueInput!
}

input ItemUpdateWithoutValueInput {
  id: StringFieldUpdateOperationsInput
  active: NullableBoolFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  Category: CategoryUpdateOneRequiredWithoutItem_category_itemsInput
  Colors: ColorUpdateManyWithoutItem_color_itemsInput
  ItemGenders: ItemGenderUpdateManyWithoutItems_itemGender_itemsInput
  Pictures: PictureUpdateManyWithoutItem_picture_itemInput
  Condition: ConditionUpdateOneWithoutItem_condition_itemsInput
  Owner: PersonUpdateOneWithoutItem_owner_itemsInput
  Booster: BoosterUpdateManyWithoutItem_booster_itemInput
  Cloth_item_cloth: ClothUpdateOneWithoutItemInput
  TradePackage_item_tradePackages: TradePackageUpdateManyWithoutItemsInput
}

input PictureUpdateManyWithoutItem_picture_itemInput {
  create: [PictureCreateWithoutItem_picture_itemInput!]
  connectOrCreate: [PictureCreateOrConnectWithoutItem_picture_itemInput!]
  upsert: [PictureUpsertWithWhereUniqueWithoutItem_picture_itemInput!]
  createMany: PictureCreateManyItem_picture_itemInputEnvelope
  set: [PictureWhereUniqueInput!]
  disconnect: [PictureWhereUniqueInput!]
  delete: [PictureWhereUniqueInput!]
  connect: [PictureWhereUniqueInput!]
  update: [PictureUpdateWithWhereUniqueWithoutItem_picture_itemInput!]
  updateMany: [PictureUpdateManyWithWhereWithoutItem_picture_itemInput!]
  deleteMany: [PictureScalarWhereInput!]
}

input PictureUpsertWithWhereUniqueWithoutItem_picture_itemInput {
  where: PictureWhereUniqueInput!
  update: PictureUpdateWithoutItem_picture_itemInput!
  create: PictureCreateWithoutItem_picture_itemInput!
}

input PictureUpdateWithoutItem_picture_itemInput {
  id: StringFieldUpdateOperationsInput
  rank: NullableIntFieldUpdateOperationsInput
  LQ: FileUpdateOneWithoutFile_lqPictureFile_fileInput
  MQ: FileUpdateOneWithoutFile_mqPictureFile_fileInput
  HQ: FileUpdateOneWithoutFile_hqPictureFile_fileInput
  Person: PersonUpdateOneWithoutPictureInput
}

input PictureUpdateWithWhereUniqueWithoutItem_picture_itemInput {
  where: PictureWhereUniqueInput!
  data: PictureUpdateWithoutItem_picture_itemInput!
}

input PictureUpdateManyWithWhereWithoutItem_picture_itemInput {
  where: PictureScalarWhereInput!
  data: PictureUpdateManyMutationInput!
}

input PictureScalarWhereInput {
  AND: [PictureScalarWhereInput!]
  OR: [PictureScalarWhereInput!]
  NOT: [PictureScalarWhereInput!]
  id: StringFilter
  rank: IntNullableFilter
}

input PictureUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  rank: NullableIntFieldUpdateOperationsInput
}

input ConditionUpdateOneWithoutItem_condition_itemsInput {
  create: ConditionCreateWithoutItem_condition_itemsInput
  connectOrCreate: ConditionCreateOrConnectWithoutItem_condition_itemsInput
  upsert: ConditionUpsertWithoutItem_condition_itemsInput
  disconnect: Boolean
  delete: Boolean
  connect: ConditionWhereUniqueInput
  update: ConditionUpdateWithoutItem_condition_itemsInput
}

input ConditionUpsertWithoutItem_condition_itemsInput {
  update: ConditionUpdateWithoutItem_condition_itemsInput!
  create: ConditionCreateWithoutItem_condition_itemsInput!
}

input ConditionUpdateWithoutItem_condition_itemsInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input PersonUpdateOneWithoutItem_owner_itemsInput {
  create: PersonCreateWithoutItem_owner_itemsInput
  connectOrCreate: PersonCreateOrConnectWithoutItem_owner_itemsInput
  upsert: PersonUpsertWithoutItem_owner_itemsInput
  disconnect: Boolean
  delete: Boolean
  connect: PersonWhereUniqueInput
  update: PersonUpdateWithoutItem_owner_itemsInput
}

input PersonUpsertWithoutItem_owner_itemsInput {
  update: PersonUpdateWithoutItem_owner_itemsInput!
  create: PersonCreateWithoutItem_owner_itemsInput!
}

input PersonUpdateWithoutItem_owner_itemsInput {
  id: StringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  birthday: NullableDateTimeFieldUpdateOperationsInput
  firstName: NullableStringFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  Gender: GenderUpdateOneWithoutProfile_gender_profilesInput
  ItemGenders: ItemGenderUpdateManyWithoutPerson_itemGender_personsInput
  History: HistoryUpdateOneWithoutUser_history_userInput
  Telephone: TelephoneUpdateOneWithoutPerson_telephone_personInput
  Address: AddressUpdateManyWithoutPersonInput
  Picture: PictureUpdateOneWithoutPersonInput
  ClothSizes: ClothSizeUpdateManyWithoutPerson_clothSize_personsInput
  ClothStyles: ClothStyleUpdateManyWithoutPerson_clothStyle_personsInput
  Event_who_events: EventUpdateManyWithoutWhoInput
  Channel: ChannelUpdateOneWithoutParticipantsInput
  TradePackage_wantedBy_tradePackages: TradePackageUpdateManyWithoutWantedByInput
  TradePackage_from_tradePackages: TradePackageUpdateManyWithoutFromInput
  Rating_person_ratings: RatingUpdateManyWithoutFromInput
}

input ChannelUpdateOneWithoutParticipantsInput {
  create: ChannelCreateWithoutParticipantsInput
  connectOrCreate: ChannelCreateOrConnectWithoutParticipantsInput
  upsert: ChannelUpsertWithoutParticipantsInput
  disconnect: Boolean
  delete: Boolean
  connect: ChannelWhereUniqueInput
  update: ChannelUpdateWithoutParticipantsInput
}

input ChannelUpsertWithoutParticipantsInput {
  update: ChannelUpdateWithoutParticipantsInput!
  create: ChannelCreateWithoutParticipantsInput!
}

input ChannelUpdateWithoutParticipantsInput {
  id: StringFieldUpdateOperationsInput
}

input TradePackageUpdateManyWithoutWantedByInput {
  create: [TradePackageCreateWithoutWantedByInput!]
  connectOrCreate: [TradePackageCreateOrConnectWithoutWantedByInput!]
  upsert: [TradePackageUpsertWithWhereUniqueWithoutWantedByInput!]
  set: [TradePackageWhereUniqueInput!]
  disconnect: [TradePackageWhereUniqueInput!]
  delete: [TradePackageWhereUniqueInput!]
  connect: [TradePackageWhereUniqueInput!]
  update: [TradePackageUpdateWithWhereUniqueWithoutWantedByInput!]
  updateMany: [TradePackageUpdateManyWithWhereWithoutWantedByInput!]
  deleteMany: [TradePackageScalarWhereInput!]
}

input TradePackageUpsertWithWhereUniqueWithoutWantedByInput {
  where: TradePackageWhereUniqueInput!
  update: TradePackageUpdateWithoutWantedByInput!
  create: TradePackageCreateWithoutWantedByInput!
}

input TradePackageUpdateWithoutWantedByInput {
  id: StringFieldUpdateOperationsInput
  From: PersonUpdateOneWithoutTradePackage_from_tradePackagesInput
  Items: ItemUpdateManyWithoutTradePackage_item_tradePackagesInput
  Offer_tradePackage_offers: OfferUpdateManyWithoutTradePackagesInput
}

input PersonUpdateOneWithoutTradePackage_from_tradePackagesInput {
  create: PersonCreateWithoutTradePackage_from_tradePackagesInput
  connectOrCreate: PersonCreateOrConnectWithoutTradePackage_from_tradePackagesInput
  upsert: PersonUpsertWithoutTradePackage_from_tradePackagesInput
  disconnect: Boolean
  delete: Boolean
  connect: PersonWhereUniqueInput
  update: PersonUpdateWithoutTradePackage_from_tradePackagesInput
}

input PersonUpsertWithoutTradePackage_from_tradePackagesInput {
  update: PersonUpdateWithoutTradePackage_from_tradePackagesInput!
  create: PersonCreateWithoutTradePackage_from_tradePackagesInput!
}

input PersonUpdateWithoutTradePackage_from_tradePackagesInput {
  id: StringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  birthday: NullableDateTimeFieldUpdateOperationsInput
  firstName: NullableStringFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  Gender: GenderUpdateOneWithoutProfile_gender_profilesInput
  ItemGenders: ItemGenderUpdateManyWithoutPerson_itemGender_personsInput
  History: HistoryUpdateOneWithoutUser_history_userInput
  Telephone: TelephoneUpdateOneWithoutPerson_telephone_personInput
  Address: AddressUpdateManyWithoutPersonInput
  Picture: PictureUpdateOneWithoutPersonInput
  ClothSizes: ClothSizeUpdateManyWithoutPerson_clothSize_personsInput
  ClothStyles: ClothStyleUpdateManyWithoutPerson_clothStyle_personsInput
  Event_who_events: EventUpdateManyWithoutWhoInput
  Item_owner_items: ItemUpdateManyWithoutOwnerInput
  Channel: ChannelUpdateOneWithoutParticipantsInput
  TradePackage_wantedBy_tradePackages: TradePackageUpdateManyWithoutWantedByInput
  Rating_person_ratings: RatingUpdateManyWithoutFromInput
}

input ItemUpdateManyWithoutOwnerInput {
  create: [ItemCreateWithoutOwnerInput!]
  connectOrCreate: [ItemCreateOrConnectWithoutOwnerInput!]
  upsert: [ItemUpsertWithWhereUniqueWithoutOwnerInput!]
  createMany: ItemCreateManyOwnerInputEnvelope
  set: [ItemWhereUniqueInput!]
  disconnect: [ItemWhereUniqueInput!]
  delete: [ItemWhereUniqueInput!]
  connect: [ItemWhereUniqueInput!]
  update: [ItemUpdateWithWhereUniqueWithoutOwnerInput!]
  updateMany: [ItemUpdateManyWithWhereWithoutOwnerInput!]
  deleteMany: [ItemScalarWhereInput!]
}

input ItemUpsertWithWhereUniqueWithoutOwnerInput {
  where: ItemWhereUniqueInput!
  update: ItemUpdateWithoutOwnerInput!
  create: ItemCreateWithoutOwnerInput!
}

input ItemUpdateWithoutOwnerInput {
  id: StringFieldUpdateOperationsInput
  active: NullableBoolFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  Category: CategoryUpdateOneRequiredWithoutItem_category_itemsInput
  Value: MoneyUpdateOneWithoutItem_value_itemInput
  Colors: ColorUpdateManyWithoutItem_color_itemsInput
  ItemGenders: ItemGenderUpdateManyWithoutItems_itemGender_itemsInput
  Pictures: PictureUpdateManyWithoutItem_picture_itemInput
  Condition: ConditionUpdateOneWithoutItem_condition_itemsInput
  Booster: BoosterUpdateManyWithoutItem_booster_itemInput
  Cloth_item_cloth: ClothUpdateOneWithoutItemInput
  TradePackage_item_tradePackages: TradePackageUpdateManyWithoutItemsInput
}

input BoosterUpdateManyWithoutItem_booster_itemInput {
  create: [BoosterCreateWithoutItem_booster_itemInput!]
  connectOrCreate: [BoosterCreateOrConnectWithoutItem_booster_itemInput!]
  upsert: [BoosterUpsertWithWhereUniqueWithoutItem_booster_itemInput!]
  createMany: BoosterCreateManyItem_booster_itemInputEnvelope
  set: [BoosterWhereUniqueInput!]
  disconnect: [BoosterWhereUniqueInput!]
  delete: [BoosterWhereUniqueInput!]
  connect: [BoosterWhereUniqueInput!]
  update: [BoosterUpdateWithWhereUniqueWithoutItem_booster_itemInput!]
  updateMany: [BoosterUpdateManyWithWhereWithoutItem_booster_itemInput!]
  deleteMany: [BoosterScalarWhereInput!]
}

input BoosterUpsertWithWhereUniqueWithoutItem_booster_itemInput {
  where: BoosterWhereUniqueInput!
  update: BoosterUpdateWithoutItem_booster_itemInput!
  create: BoosterCreateWithoutItem_booster_itemInput!
}

input BoosterUpdateWithoutItem_booster_itemInput {
  id: StringFieldUpdateOperationsInput
  Timespan: TimespanUpdateOneWithoutBooster_timespan_boosterInput
}

input TimespanUpdateOneWithoutBooster_timespan_boosterInput {
  create: TimespanCreateWithoutBooster_timespan_boosterInput
  connectOrCreate: TimespanCreateOrConnectWithoutBooster_timespan_boosterInput
  upsert: TimespanUpsertWithoutBooster_timespan_boosterInput
  disconnect: Boolean
  delete: Boolean
  connect: TimespanWhereUniqueInput
  update: TimespanUpdateWithoutBooster_timespan_boosterInput
}

input TimespanUpsertWithoutBooster_timespan_boosterInput {
  update: TimespanUpdateWithoutBooster_timespan_boosterInput!
  create: TimespanCreateWithoutBooster_timespan_boosterInput!
}

input TimespanUpdateWithoutBooster_timespan_boosterInput {
  id: StringFieldUpdateOperationsInput
  start: NullableDateTimeFieldUpdateOperationsInput
  end: NullableDateTimeFieldUpdateOperationsInput
  Subscription_timespan_subscription: SubscriptionUpdateOneWithoutTimespanInput
}

input SubscriptionUpdateOneWithoutTimespanInput {
  create: SubscriptionCreateWithoutTimespanInput
  connectOrCreate: SubscriptionCreateOrConnectWithoutTimespanInput
  upsert: SubscriptionUpsertWithoutTimespanInput
  disconnect: Boolean
  delete: Boolean
  connect: SubscriptionWhereUniqueInput
  update: SubscriptionUpdateWithoutTimespanInput
}

input SubscriptionUpsertWithoutTimespanInput {
  update: SubscriptionUpdateWithoutTimespanInput!
  create: SubscriptionCreateWithoutTimespanInput!
}

input SubscriptionUpdateWithoutTimespanInput {
  id: StringFieldUpdateOperationsInput
  Price: MoneyUpdateOneRequiredWithoutSubscription_money_subscriptionInput
  Type: SubscriptionPlanUpdateOneWithoutSubscription_subscriptionType_subscriptionInput
}

input MoneyUpdateOneRequiredWithoutSubscription_money_subscriptionInput {
  create: MoneyCreateWithoutSubscription_money_subscriptionInput
  connectOrCreate: MoneyCreateOrConnectWithoutSubscription_money_subscriptionInput
  upsert: MoneyUpsertWithoutSubscription_money_subscriptionInput
  connect: MoneyWhereUniqueInput
  update: MoneyUpdateWithoutSubscription_money_subscriptionInput
}

input MoneyUpsertWithoutSubscription_money_subscriptionInput {
  update: MoneyUpdateWithoutSubscription_money_subscriptionInput!
  create: MoneyCreateWithoutSubscription_money_subscriptionInput!
}

input MoneyUpdateWithoutSubscription_money_subscriptionInput {
  id: StringFieldUpdateOperationsInput
  value: NullableFloatFieldUpdateOperationsInput
  Currency: NullableEnumCurrencyFieldUpdateOperationsInput
  History: HistoryUpdateOneWithoutMoney_history_moneyInput
  Item_value_item: ItemUpdateOneWithoutValueInput
  SubscriptionPlan_money_subscriptionPlans: SubscriptionPlanUpdateOneWithoutStandardPriceInput
}

input SubscriptionPlanUpdateOneWithoutStandardPriceInput {
  create: SubscriptionPlanCreateWithoutStandardPriceInput
  connectOrCreate: SubscriptionPlanCreateOrConnectWithoutStandardPriceInput
  upsert: SubscriptionPlanUpsertWithoutStandardPriceInput
  disconnect: Boolean
  delete: Boolean
  connect: SubscriptionPlanWhereUniqueInput
  update: SubscriptionPlanUpdateWithoutStandardPriceInput
}

input SubscriptionPlanUpsertWithoutStandardPriceInput {
  update: SubscriptionPlanUpdateWithoutStandardPriceInput!
  create: SubscriptionPlanCreateWithoutStandardPriceInput!
}

input SubscriptionPlanUpdateWithoutStandardPriceInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  StandardDuration: DurationUpdateOneRequiredWithoutSubscriptionPlan_duration_subscriptionPlanInput
  Subscription_subscriptionType_subscription: SubscriptionUpdateManyWithoutTypeInput
}

input DurationUpdateOneRequiredWithoutSubscriptionPlan_duration_subscriptionPlanInput {
  create: DurationCreateWithoutSubscriptionPlan_duration_subscriptionPlanInput
  connectOrCreate: DurationCreateOrConnectWithoutSubscriptionPlan_duration_subscriptionPlanInput
  upsert: DurationUpsertWithoutSubscriptionPlan_duration_subscriptionPlanInput
  connect: DurationWhereUniqueInput
  update: DurationUpdateWithoutSubscriptionPlan_duration_subscriptionPlanInput
}

input DurationUpsertWithoutSubscriptionPlan_duration_subscriptionPlanInput {
  update: DurationUpdateWithoutSubscriptionPlan_duration_subscriptionPlanInput!
  create: DurationCreateWithoutSubscriptionPlan_duration_subscriptionPlanInput!
}

input DurationUpdateWithoutSubscriptionPlan_duration_subscriptionPlanInput {
  id: StringFieldUpdateOperationsInput
  seconds: NullableIntFieldUpdateOperationsInput
  minutes: NullableIntFieldUpdateOperationsInput
  hours: NullableIntFieldUpdateOperationsInput
  days: NullableIntFieldUpdateOperationsInput
  weeks: NullableIntFieldUpdateOperationsInput
  months: NullableIntFieldUpdateOperationsInput
  years: NullableIntFieldUpdateOperationsInput
}

input SubscriptionUpdateManyWithoutTypeInput {
  create: [SubscriptionCreateWithoutTypeInput!]
  connectOrCreate: [SubscriptionCreateOrConnectWithoutTypeInput!]
  upsert: [SubscriptionUpsertWithWhereUniqueWithoutTypeInput!]
  createMany: SubscriptionCreateManyTypeInputEnvelope
  set: [SubscriptionWhereUniqueInput!]
  disconnect: [SubscriptionWhereUniqueInput!]
  delete: [SubscriptionWhereUniqueInput!]
  connect: [SubscriptionWhereUniqueInput!]
  update: [SubscriptionUpdateWithWhereUniqueWithoutTypeInput!]
  updateMany: [SubscriptionUpdateManyWithWhereWithoutTypeInput!]
  deleteMany: [SubscriptionScalarWhereInput!]
}

input SubscriptionUpsertWithWhereUniqueWithoutTypeInput {
  where: SubscriptionWhereUniqueInput!
  update: SubscriptionUpdateWithoutTypeInput!
  create: SubscriptionCreateWithoutTypeInput!
}

input SubscriptionUpdateWithoutTypeInput {
  id: StringFieldUpdateOperationsInput
  Price: MoneyUpdateOneRequiredWithoutSubscription_money_subscriptionInput
  Timespan: TimespanUpdateOneWithoutSubscription_timespan_subscriptionInput
}

input TimespanUpdateOneWithoutSubscription_timespan_subscriptionInput {
  create: TimespanCreateWithoutSubscription_timespan_subscriptionInput
  connectOrCreate: TimespanCreateOrConnectWithoutSubscription_timespan_subscriptionInput
  upsert: TimespanUpsertWithoutSubscription_timespan_subscriptionInput
  disconnect: Boolean
  delete: Boolean
  connect: TimespanWhereUniqueInput
  update: TimespanUpdateWithoutSubscription_timespan_subscriptionInput
}

input TimespanUpsertWithoutSubscription_timespan_subscriptionInput {
  update: TimespanUpdateWithoutSubscription_timespan_subscriptionInput!
  create: TimespanCreateWithoutSubscription_timespan_subscriptionInput!
}

input TimespanUpdateWithoutSubscription_timespan_subscriptionInput {
  id: StringFieldUpdateOperationsInput
  start: NullableDateTimeFieldUpdateOperationsInput
  end: NullableDateTimeFieldUpdateOperationsInput
  Booster_timespan_booster: BoosterUpdateOneWithoutTimespanInput
}

input BoosterUpdateOneWithoutTimespanInput {
  create: BoosterCreateWithoutTimespanInput
  connectOrCreate: BoosterCreateOrConnectWithoutTimespanInput
  upsert: BoosterUpsertWithoutTimespanInput
  disconnect: Boolean
  delete: Boolean
  connect: BoosterWhereUniqueInput
  update: BoosterUpdateWithoutTimespanInput
}

input BoosterUpsertWithoutTimespanInput {
  update: BoosterUpdateWithoutTimespanInput!
  create: BoosterCreateWithoutTimespanInput!
}

input BoosterUpdateWithoutTimespanInput {
  id: StringFieldUpdateOperationsInput
  Item_booster_item: ItemUpdateOneWithoutBoosterInput
}

input ItemUpdateOneWithoutBoosterInput {
  create: ItemCreateWithoutBoosterInput
  connectOrCreate: ItemCreateOrConnectWithoutBoosterInput
  upsert: ItemUpsertWithoutBoosterInput
  disconnect: Boolean
  delete: Boolean
  connect: ItemWhereUniqueInput
  update: ItemUpdateWithoutBoosterInput
}

input ItemUpsertWithoutBoosterInput {
  update: ItemUpdateWithoutBoosterInput!
  create: ItemCreateWithoutBoosterInput!
}

input ItemUpdateWithoutBoosterInput {
  id: StringFieldUpdateOperationsInput
  active: NullableBoolFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  Category: CategoryUpdateOneRequiredWithoutItem_category_itemsInput
  Value: MoneyUpdateOneWithoutItem_value_itemInput
  Colors: ColorUpdateManyWithoutItem_color_itemsInput
  ItemGenders: ItemGenderUpdateManyWithoutItems_itemGender_itemsInput
  Pictures: PictureUpdateManyWithoutItem_picture_itemInput
  Condition: ConditionUpdateOneWithoutItem_condition_itemsInput
  Owner: PersonUpdateOneWithoutItem_owner_itemsInput
  Cloth_item_cloth: ClothUpdateOneWithoutItemInput
  TradePackage_item_tradePackages: TradePackageUpdateManyWithoutItemsInput
}

input ClothUpdateOneWithoutItemInput {
  create: ClothCreateWithoutItemInput
  connectOrCreate: ClothCreateOrConnectWithoutItemInput
  upsert: ClothUpsertWithoutItemInput
  disconnect: Boolean
  delete: Boolean
  connect: ClothWhereUniqueInput
  update: ClothUpdateWithoutItemInput
}

input ClothUpsertWithoutItemInput {
  update: ClothUpdateWithoutItemInput!
  create: ClothCreateWithoutItemInput!
}

input ClothUpdateWithoutItemInput {
  id: StringFieldUpdateOperationsInput
  code: NullableStringFieldUpdateOperationsInput
  Material: MaterialUpdateOneWithoutCloth_material_clothsInput
  ClothSizes: ClothSizeUpdateManyWithoutCloth_clothSize_clothInput
  ClothStyles: ClothStyleUpdateManyWithoutItem_clothStyle_itemsInput
  History: HistoryUpdateOneWithoutCloth_history_clothInput
  Wardrobe: WardrobeUpdateOneWithoutClothsInput
}

input HistoryUpdateOneWithoutCloth_history_clothInput {
  create: HistoryCreateWithoutCloth_history_clothInput
  connectOrCreate: HistoryCreateOrConnectWithoutCloth_history_clothInput
  upsert: HistoryUpsertWithoutCloth_history_clothInput
  disconnect: Boolean
  delete: Boolean
  connect: HistoryWhereUniqueInput
  update: HistoryUpdateWithoutCloth_history_clothInput
}

input HistoryUpsertWithoutCloth_history_clothInput {
  update: HistoryUpdateWithoutCloth_history_clothInput!
  create: HistoryCreateWithoutCloth_history_clothInput!
}

input HistoryUpdateWithoutCloth_history_clothInput {
  id: StringFieldUpdateOperationsInput
  Created: EventUpdateOneWithoutHistory_created_historyInput
  Updated: EventUpdateManyWithoutHistory_updated_historyInput
  Deleted: EventUpdateOneWithoutHistory_deleted_historyInput
  User_history_user: PersonUpdateOneWithoutHistoryInput
  Money_history_money: MoneyUpdateOneWithoutHistoryInput
}

input WardrobeUpdateOneWithoutClothsInput {
  create: WardrobeCreateWithoutClothsInput
  connectOrCreate: WardrobeCreateOrConnectWithoutClothsInput
  upsert: WardrobeUpsertWithoutClothsInput
  disconnect: Boolean
  delete: Boolean
  connect: WardrobeWhereUniqueInput
  update: WardrobeUpdateWithoutClothsInput
}

input WardrobeUpsertWithoutClothsInput {
  update: WardrobeUpdateWithoutClothsInput!
  create: WardrobeCreateWithoutClothsInput!
}

input WardrobeUpdateWithoutClothsInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  Address: AddressUpdateOneWithoutWardrobesInput
}

input AddressUpdateOneWithoutWardrobesInput {
  create: AddressCreateWithoutWardrobesInput
  connectOrCreate: AddressCreateOrConnectWithoutWardrobesInput
  upsert: AddressUpsertWithoutWardrobesInput
  disconnect: Boolean
  delete: Boolean
  connect: AddressWhereUniqueInput
  update: AddressUpdateWithoutWardrobesInput
}

input AddressUpsertWithoutWardrobesInput {
  update: AddressUpdateWithoutWardrobesInput!
  create: AddressCreateWithoutWardrobesInput!
}

input AddressUpdateWithoutWardrobesInput {
  id: StringFieldUpdateOperationsInput
  line1: NullableStringFieldUpdateOperationsInput
  line2: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  province: NullableStringFieldUpdateOperationsInput
  zip: NullableStringFieldUpdateOperationsInput
  Country: CountryUpdateOneWithoutAddress_county_addressesInput
  Person: PersonUpdateOneWithoutAddressInput
}

input PersonUpdateOneWithoutAddressInput {
  create: PersonCreateWithoutAddressInput
  connectOrCreate: PersonCreateOrConnectWithoutAddressInput
  upsert: PersonUpsertWithoutAddressInput
  disconnect: Boolean
  delete: Boolean
  connect: PersonWhereUniqueInput
  update: PersonUpdateWithoutAddressInput
}

input PersonUpsertWithoutAddressInput {
  update: PersonUpdateWithoutAddressInput!
  create: PersonCreateWithoutAddressInput!
}

input PersonUpdateWithoutAddressInput {
  id: StringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  birthday: NullableDateTimeFieldUpdateOperationsInput
  firstName: NullableStringFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  Gender: GenderUpdateOneWithoutProfile_gender_profilesInput
  ItemGenders: ItemGenderUpdateManyWithoutPerson_itemGender_personsInput
  History: HistoryUpdateOneWithoutUser_history_userInput
  Telephone: TelephoneUpdateOneWithoutPerson_telephone_personInput
  Picture: PictureUpdateOneWithoutPersonInput
  ClothSizes: ClothSizeUpdateManyWithoutPerson_clothSize_personsInput
  ClothStyles: ClothStyleUpdateManyWithoutPerson_clothStyle_personsInput
  Event_who_events: EventUpdateManyWithoutWhoInput
  Item_owner_items: ItemUpdateManyWithoutOwnerInput
  Channel: ChannelUpdateOneWithoutParticipantsInput
  TradePackage_wantedBy_tradePackages: TradePackageUpdateManyWithoutWantedByInput
  TradePackage_from_tradePackages: TradePackageUpdateManyWithoutFromInput
  Rating_person_ratings: RatingUpdateManyWithoutFromInput
}

input TradePackageUpdateManyWithoutFromInput {
  create: [TradePackageCreateWithoutFromInput!]
  connectOrCreate: [TradePackageCreateOrConnectWithoutFromInput!]
  upsert: [TradePackageUpsertWithWhereUniqueWithoutFromInput!]
  createMany: TradePackageCreateManyFromInputEnvelope
  set: [TradePackageWhereUniqueInput!]
  disconnect: [TradePackageWhereUniqueInput!]
  delete: [TradePackageWhereUniqueInput!]
  connect: [TradePackageWhereUniqueInput!]
  update: [TradePackageUpdateWithWhereUniqueWithoutFromInput!]
  updateMany: [TradePackageUpdateManyWithWhereWithoutFromInput!]
  deleteMany: [TradePackageScalarWhereInput!]
}

input TradePackageUpsertWithWhereUniqueWithoutFromInput {
  where: TradePackageWhereUniqueInput!
  update: TradePackageUpdateWithoutFromInput!
  create: TradePackageCreateWithoutFromInput!
}

input TradePackageUpdateWithoutFromInput {
  id: StringFieldUpdateOperationsInput
  WantedBy: PersonUpdateManyWithoutTradePackage_wantedBy_tradePackagesInput
  Items: ItemUpdateManyWithoutTradePackage_item_tradePackagesInput
  Offer_tradePackage_offers: OfferUpdateManyWithoutTradePackagesInput
}

input PersonUpdateManyWithoutTradePackage_wantedBy_tradePackagesInput {
  create: [PersonCreateWithoutTradePackage_wantedBy_tradePackagesInput!]
  connectOrCreate: [PersonCreateOrConnectWithoutTradePackage_wantedBy_tradePackagesInput!]
  upsert: [PersonUpsertWithWhereUniqueWithoutTradePackage_wantedBy_tradePackagesInput!]
  set: [PersonWhereUniqueInput!]
  disconnect: [PersonWhereUniqueInput!]
  delete: [PersonWhereUniqueInput!]
  connect: [PersonWhereUniqueInput!]
  update: [PersonUpdateWithWhereUniqueWithoutTradePackage_wantedBy_tradePackagesInput!]
  updateMany: [PersonUpdateManyWithWhereWithoutTradePackage_wantedBy_tradePackagesInput!]
  deleteMany: [PersonScalarWhereInput!]
}

input PersonUpsertWithWhereUniqueWithoutTradePackage_wantedBy_tradePackagesInput {
  where: PersonWhereUniqueInput!
  update: PersonUpdateWithoutTradePackage_wantedBy_tradePackagesInput!
  create: PersonCreateWithoutTradePackage_wantedBy_tradePackagesInput!
}

input PersonUpdateWithoutTradePackage_wantedBy_tradePackagesInput {
  id: StringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  birthday: NullableDateTimeFieldUpdateOperationsInput
  firstName: NullableStringFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  Gender: GenderUpdateOneWithoutProfile_gender_profilesInput
  ItemGenders: ItemGenderUpdateManyWithoutPerson_itemGender_personsInput
  History: HistoryUpdateOneWithoutUser_history_userInput
  Telephone: TelephoneUpdateOneWithoutPerson_telephone_personInput
  Address: AddressUpdateManyWithoutPersonInput
  Picture: PictureUpdateOneWithoutPersonInput
  ClothSizes: ClothSizeUpdateManyWithoutPerson_clothSize_personsInput
  ClothStyles: ClothStyleUpdateManyWithoutPerson_clothStyle_personsInput
  Event_who_events: EventUpdateManyWithoutWhoInput
  Item_owner_items: ItemUpdateManyWithoutOwnerInput
  Channel: ChannelUpdateOneWithoutParticipantsInput
  TradePackage_from_tradePackages: TradePackageUpdateManyWithoutFromInput
  Rating_person_ratings: RatingUpdateManyWithoutFromInput
}

input RatingUpdateManyWithoutFromInput {
  create: [RatingCreateWithoutFromInput!]
  connectOrCreate: [RatingCreateOrConnectWithoutFromInput!]
  upsert: [RatingUpsertWithWhereUniqueWithoutFromInput!]
  createMany: RatingCreateManyFromInputEnvelope
  set: [RatingWhereUniqueInput!]
  disconnect: [RatingWhereUniqueInput!]
  delete: [RatingWhereUniqueInput!]
  connect: [RatingWhereUniqueInput!]
  update: [RatingUpdateWithWhereUniqueWithoutFromInput!]
  updateMany: [RatingUpdateManyWithWhereWithoutFromInput!]
  deleteMany: [RatingScalarWhereInput!]
}

input RatingUpsertWithWhereUniqueWithoutFromInput {
  where: RatingWhereUniqueInput!
  update: RatingUpdateWithoutFromInput!
  create: RatingCreateWithoutFromInput!
}

input RatingUpdateWithoutFromInput {
  id: StringFieldUpdateOperationsInput
  amount: NullableIntFieldUpdateOperationsInput
  Contract: ContractUpdateOneWithoutRatingInput
}

input ContractUpdateOneWithoutRatingInput {
  create: ContractCreateWithoutRatingInput
  connectOrCreate: ContractCreateOrConnectWithoutRatingInput
  upsert: ContractUpsertWithoutRatingInput
  disconnect: Boolean
  delete: Boolean
  connect: ContractWhereUniqueInput
  update: ContractUpdateWithoutRatingInput
}

input ContractUpsertWithoutRatingInput {
  update: ContractUpdateWithoutRatingInput!
  create: ContractCreateWithoutRatingInput!
}

input ContractUpdateWithoutRatingInput {
  id: StringFieldUpdateOperationsInput
  Offer: OfferUpdateOneWithoutContractInput
}

input OfferUpdateOneWithoutContractInput {
  create: OfferCreateWithoutContractInput
  connectOrCreate: OfferCreateOrConnectWithoutContractInput
  upsert: OfferUpsertWithoutContractInput
  disconnect: Boolean
  delete: Boolean
  connect: OfferWhereUniqueInput
  update: OfferUpdateWithoutContractInput
}

input OfferUpsertWithoutContractInput {
  update: OfferUpdateWithoutContractInput!
  create: OfferCreateWithoutContractInput!
}

input OfferUpdateWithoutContractInput {
  id: StringFieldUpdateOperationsInput
  TradePackages: TradePackageUpdateManyWithoutOffer_tradePackage_offersInput
}

input TradePackageUpdateManyWithoutOffer_tradePackage_offersInput {
  create: [TradePackageCreateWithoutOffer_tradePackage_offersInput!]
  connectOrCreate: [TradePackageCreateOrConnectWithoutOffer_tradePackage_offersInput!]
  upsert: [TradePackageUpsertWithWhereUniqueWithoutOffer_tradePackage_offersInput!]
  set: [TradePackageWhereUniqueInput!]
  disconnect: [TradePackageWhereUniqueInput!]
  delete: [TradePackageWhereUniqueInput!]
  connect: [TradePackageWhereUniqueInput!]
  update: [TradePackageUpdateWithWhereUniqueWithoutOffer_tradePackage_offersInput!]
  updateMany: [TradePackageUpdateManyWithWhereWithoutOffer_tradePackage_offersInput!]
  deleteMany: [TradePackageScalarWhereInput!]
}

input TradePackageUpsertWithWhereUniqueWithoutOffer_tradePackage_offersInput {
  where: TradePackageWhereUniqueInput!
  update: TradePackageUpdateWithoutOffer_tradePackage_offersInput!
  create: TradePackageCreateWithoutOffer_tradePackage_offersInput!
}

input TradePackageUpdateWithoutOffer_tradePackage_offersInput {
  id: StringFieldUpdateOperationsInput
  WantedBy: PersonUpdateManyWithoutTradePackage_wantedBy_tradePackagesInput
  From: PersonUpdateOneWithoutTradePackage_from_tradePackagesInput
  Items: ItemUpdateManyWithoutTradePackage_item_tradePackagesInput
}

input ItemUpdateManyWithoutTradePackage_item_tradePackagesInput {
  create: [ItemCreateWithoutTradePackage_item_tradePackagesInput!]
  connectOrCreate: [ItemCreateOrConnectWithoutTradePackage_item_tradePackagesInput!]
  upsert: [ItemUpsertWithWhereUniqueWithoutTradePackage_item_tradePackagesInput!]
  set: [ItemWhereUniqueInput!]
  disconnect: [ItemWhereUniqueInput!]
  delete: [ItemWhereUniqueInput!]
  connect: [ItemWhereUniqueInput!]
  update: [ItemUpdateWithWhereUniqueWithoutTradePackage_item_tradePackagesInput!]
  updateMany: [ItemUpdateManyWithWhereWithoutTradePackage_item_tradePackagesInput!]
  deleteMany: [ItemScalarWhereInput!]
}

input ItemUpsertWithWhereUniqueWithoutTradePackage_item_tradePackagesInput {
  where: ItemWhereUniqueInput!
  update: ItemUpdateWithoutTradePackage_item_tradePackagesInput!
  create: ItemCreateWithoutTradePackage_item_tradePackagesInput!
}

input ItemUpdateWithoutTradePackage_item_tradePackagesInput {
  id: StringFieldUpdateOperationsInput
  active: NullableBoolFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  Category: CategoryUpdateOneRequiredWithoutItem_category_itemsInput
  Value: MoneyUpdateOneWithoutItem_value_itemInput
  Colors: ColorUpdateManyWithoutItem_color_itemsInput
  ItemGenders: ItemGenderUpdateManyWithoutItems_itemGender_itemsInput
  Pictures: PictureUpdateManyWithoutItem_picture_itemInput
  Condition: ConditionUpdateOneWithoutItem_condition_itemsInput
  Owner: PersonUpdateOneWithoutItem_owner_itemsInput
  Booster: BoosterUpdateManyWithoutItem_booster_itemInput
  Cloth_item_cloth: ClothUpdateOneWithoutItemInput
}

input ItemUpdateWithWhereUniqueWithoutTradePackage_item_tradePackagesInput {
  where: ItemWhereUniqueInput!
  data: ItemUpdateWithoutTradePackage_item_tradePackagesInput!
}

input ItemUpdateManyWithWhereWithoutTradePackage_item_tradePackagesInput {
  where: ItemScalarWhereInput!
  data: ItemUpdateManyMutationInput!
}

input ItemScalarWhereInput {
  AND: [ItemScalarWhereInput!]
  OR: [ItemScalarWhereInput!]
  NOT: [ItemScalarWhereInput!]
  id: StringFilter
  active: BoolNullableFilter
  description: StringNullableFilter
}

input ItemUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  active: NullableBoolFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
}

input TradePackageUpdateWithWhereUniqueWithoutOffer_tradePackage_offersInput {
  where: TradePackageWhereUniqueInput!
  data: TradePackageUpdateWithoutOffer_tradePackage_offersInput!
}

input TradePackageUpdateManyWithWhereWithoutOffer_tradePackage_offersInput {
  where: TradePackageScalarWhereInput!
  data: TradePackageUpdateManyMutationInput!
}

input TradePackageScalarWhereInput {
  AND: [TradePackageScalarWhereInput!]
  OR: [TradePackageScalarWhereInput!]
  NOT: [TradePackageScalarWhereInput!]
  id: StringFilter
}

input TradePackageUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
}

input RatingUpdateWithWhereUniqueWithoutFromInput {
  where: RatingWhereUniqueInput!
  data: RatingUpdateWithoutFromInput!
}

input RatingUpdateManyWithWhereWithoutFromInput {
  where: RatingScalarWhereInput!
  data: RatingUpdateManyMutationInput!
}

input RatingScalarWhereInput {
  AND: [RatingScalarWhereInput!]
  OR: [RatingScalarWhereInput!]
  NOT: [RatingScalarWhereInput!]
  id: StringFilter
  amount: IntNullableFilter
}

input RatingUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  amount: NullableIntFieldUpdateOperationsInput
}

input PersonUpdateWithWhereUniqueWithoutTradePackage_wantedBy_tradePackagesInput {
  where: PersonWhereUniqueInput!
  data: PersonUpdateWithoutTradePackage_wantedBy_tradePackagesInput!
}

input PersonUpdateManyWithWhereWithoutTradePackage_wantedBy_tradePackagesInput {
  where: PersonScalarWhereInput!
  data: PersonUpdateManyMutationInput!
}

input PersonScalarWhereInput {
  AND: [PersonScalarWhereInput!]
  OR: [PersonScalarWhereInput!]
  NOT: [PersonScalarWhereInput!]
  id: StringFilter
  email: StringNullableFilter
  birthday: DateTimeNullableFilter
  firstName: StringNullableFilter
  lastName: StringNullableFilter
  pictureId: StringNullableFilter
}

input PersonUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  birthday: NullableDateTimeFieldUpdateOperationsInput
  firstName: NullableStringFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
}

input OfferUpdateManyWithoutTradePackagesInput {
  create: [OfferCreateWithoutTradePackagesInput!]
  connectOrCreate: [OfferCreateOrConnectWithoutTradePackagesInput!]
  upsert: [OfferUpsertWithWhereUniqueWithoutTradePackagesInput!]
  set: [OfferWhereUniqueInput!]
  disconnect: [OfferWhereUniqueInput!]
  delete: [OfferWhereUniqueInput!]
  connect: [OfferWhereUniqueInput!]
  update: [OfferUpdateWithWhereUniqueWithoutTradePackagesInput!]
  updateMany: [OfferUpdateManyWithWhereWithoutTradePackagesInput!]
  deleteMany: [OfferScalarWhereInput!]
}

input OfferUpsertWithWhereUniqueWithoutTradePackagesInput {
  where: OfferWhereUniqueInput!
  update: OfferUpdateWithoutTradePackagesInput!
  create: OfferCreateWithoutTradePackagesInput!
}

input OfferUpdateWithoutTradePackagesInput {
  id: StringFieldUpdateOperationsInput
  Contract: ContractUpdateOneWithoutOfferInput
}

input ContractUpdateOneWithoutOfferInput {
  create: ContractCreateWithoutOfferInput
  connectOrCreate: ContractCreateOrConnectWithoutOfferInput
  upsert: ContractUpsertWithoutOfferInput
  disconnect: Boolean
  delete: Boolean
  connect: ContractWhereUniqueInput
  update: ContractUpdateWithoutOfferInput
}

input ContractUpsertWithoutOfferInput {
  update: ContractUpdateWithoutOfferInput!
  create: ContractCreateWithoutOfferInput!
}

input ContractUpdateWithoutOfferInput {
  id: StringFieldUpdateOperationsInput
  Rating: RatingUpdateManyWithoutContractInput
}

input RatingUpdateManyWithoutContractInput {
  create: [RatingCreateWithoutContractInput!]
  connectOrCreate: [RatingCreateOrConnectWithoutContractInput!]
  upsert: [RatingUpsertWithWhereUniqueWithoutContractInput!]
  createMany: RatingCreateManyContractInputEnvelope
  set: [RatingWhereUniqueInput!]
  disconnect: [RatingWhereUniqueInput!]
  delete: [RatingWhereUniqueInput!]
  connect: [RatingWhereUniqueInput!]
  update: [RatingUpdateWithWhereUniqueWithoutContractInput!]
  updateMany: [RatingUpdateManyWithWhereWithoutContractInput!]
  deleteMany: [RatingScalarWhereInput!]
}

input RatingUpsertWithWhereUniqueWithoutContractInput {
  where: RatingWhereUniqueInput!
  update: RatingUpdateWithoutContractInput!
  create: RatingCreateWithoutContractInput!
}

input RatingUpdateWithoutContractInput {
  id: StringFieldUpdateOperationsInput
  amount: NullableIntFieldUpdateOperationsInput
  From: PersonUpdateOneWithoutRating_person_ratingsInput
}

input PersonUpdateOneWithoutRating_person_ratingsInput {
  create: PersonCreateWithoutRating_person_ratingsInput
  connectOrCreate: PersonCreateOrConnectWithoutRating_person_ratingsInput
  upsert: PersonUpsertWithoutRating_person_ratingsInput
  disconnect: Boolean
  delete: Boolean
  connect: PersonWhereUniqueInput
  update: PersonUpdateWithoutRating_person_ratingsInput
}

input PersonUpsertWithoutRating_person_ratingsInput {
  update: PersonUpdateWithoutRating_person_ratingsInput!
  create: PersonCreateWithoutRating_person_ratingsInput!
}

input PersonUpdateWithoutRating_person_ratingsInput {
  id: StringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  birthday: NullableDateTimeFieldUpdateOperationsInput
  firstName: NullableStringFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  Gender: GenderUpdateOneWithoutProfile_gender_profilesInput
  ItemGenders: ItemGenderUpdateManyWithoutPerson_itemGender_personsInput
  History: HistoryUpdateOneWithoutUser_history_userInput
  Telephone: TelephoneUpdateOneWithoutPerson_telephone_personInput
  Address: AddressUpdateManyWithoutPersonInput
  Picture: PictureUpdateOneWithoutPersonInput
  ClothSizes: ClothSizeUpdateManyWithoutPerson_clothSize_personsInput
  ClothStyles: ClothStyleUpdateManyWithoutPerson_clothStyle_personsInput
  Event_who_events: EventUpdateManyWithoutWhoInput
  Item_owner_items: ItemUpdateManyWithoutOwnerInput
  Channel: ChannelUpdateOneWithoutParticipantsInput
  TradePackage_wantedBy_tradePackages: TradePackageUpdateManyWithoutWantedByInput
  TradePackage_from_tradePackages: TradePackageUpdateManyWithoutFromInput
}

input RatingUpdateWithWhereUniqueWithoutContractInput {
  where: RatingWhereUniqueInput!
  data: RatingUpdateWithoutContractInput!
}

input RatingUpdateManyWithWhereWithoutContractInput {
  where: RatingScalarWhereInput!
  data: RatingUpdateManyMutationInput!
}

input OfferUpdateWithWhereUniqueWithoutTradePackagesInput {
  where: OfferWhereUniqueInput!
  data: OfferUpdateWithoutTradePackagesInput!
}

input OfferUpdateManyWithWhereWithoutTradePackagesInput {
  where: OfferScalarWhereInput!
  data: OfferUpdateManyMutationInput!
}

input OfferScalarWhereInput {
  AND: [OfferScalarWhereInput!]
  OR: [OfferScalarWhereInput!]
  NOT: [OfferScalarWhereInput!]
  id: StringFilter
}

input OfferUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
}

input TradePackageUpdateWithWhereUniqueWithoutFromInput {
  where: TradePackageWhereUniqueInput!
  data: TradePackageUpdateWithoutFromInput!
}

input TradePackageUpdateManyWithWhereWithoutFromInput {
  where: TradePackageScalarWhereInput!
  data: TradePackageUpdateManyMutationInput!
}

input TradePackageUpdateManyWithoutItemsInput {
  create: [TradePackageCreateWithoutItemsInput!]
  connectOrCreate: [TradePackageCreateOrConnectWithoutItemsInput!]
  upsert: [TradePackageUpsertWithWhereUniqueWithoutItemsInput!]
  set: [TradePackageWhereUniqueInput!]
  disconnect: [TradePackageWhereUniqueInput!]
  delete: [TradePackageWhereUniqueInput!]
  connect: [TradePackageWhereUniqueInput!]
  update: [TradePackageUpdateWithWhereUniqueWithoutItemsInput!]
  updateMany: [TradePackageUpdateManyWithWhereWithoutItemsInput!]
  deleteMany: [TradePackageScalarWhereInput!]
}

input TradePackageUpsertWithWhereUniqueWithoutItemsInput {
  where: TradePackageWhereUniqueInput!
  update: TradePackageUpdateWithoutItemsInput!
  create: TradePackageCreateWithoutItemsInput!
}

input TradePackageUpdateWithoutItemsInput {
  id: StringFieldUpdateOperationsInput
  WantedBy: PersonUpdateManyWithoutTradePackage_wantedBy_tradePackagesInput
  From: PersonUpdateOneWithoutTradePackage_from_tradePackagesInput
  Offer_tradePackage_offers: OfferUpdateManyWithoutTradePackagesInput
}

input TradePackageUpdateWithWhereUniqueWithoutItemsInput {
  where: TradePackageWhereUniqueInput!
  data: TradePackageUpdateWithoutItemsInput!
}

input TradePackageUpdateManyWithWhereWithoutItemsInput {
  where: TradePackageScalarWhereInput!
  data: TradePackageUpdateManyMutationInput!
}

input SubscriptionUpdateWithWhereUniqueWithoutTypeInput {
  where: SubscriptionWhereUniqueInput!
  data: SubscriptionUpdateWithoutTypeInput!
}

input SubscriptionUpdateManyWithWhereWithoutTypeInput {
  where: SubscriptionScalarWhereInput!
  data: SubscriptionUpdateManyMutationInput!
}

input SubscriptionScalarWhereInput {
  AND: [SubscriptionScalarWhereInput!]
  OR: [SubscriptionScalarWhereInput!]
  NOT: [SubscriptionScalarWhereInput!]
  id: StringFilter
}

input SubscriptionUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
}

input SubscriptionPlanUpdateOneWithoutSubscription_subscriptionType_subscriptionInput {
  create: SubscriptionPlanCreateWithoutSubscription_subscriptionType_subscriptionInput
  connectOrCreate: SubscriptionPlanCreateOrConnectWithoutSubscription_subscriptionType_subscriptionInput
  upsert: SubscriptionPlanUpsertWithoutSubscription_subscriptionType_subscriptionInput
  disconnect: Boolean
  delete: Boolean
  connect: SubscriptionPlanWhereUniqueInput
  update: SubscriptionPlanUpdateWithoutSubscription_subscriptionType_subscriptionInput
}

input SubscriptionPlanUpsertWithoutSubscription_subscriptionType_subscriptionInput {
  update: SubscriptionPlanUpdateWithoutSubscription_subscriptionType_subscriptionInput!
  create: SubscriptionPlanCreateWithoutSubscription_subscriptionType_subscriptionInput!
}

input SubscriptionPlanUpdateWithoutSubscription_subscriptionType_subscriptionInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  StandardDuration: DurationUpdateOneRequiredWithoutSubscriptionPlan_duration_subscriptionPlanInput
  StandardPrice: MoneyUpdateOneWithoutSubscriptionPlan_money_subscriptionPlansInput
}

input MoneyUpdateOneWithoutSubscriptionPlan_money_subscriptionPlansInput {
  create: MoneyCreateWithoutSubscriptionPlan_money_subscriptionPlansInput
  connectOrCreate: MoneyCreateOrConnectWithoutSubscriptionPlan_money_subscriptionPlansInput
  upsert: MoneyUpsertWithoutSubscriptionPlan_money_subscriptionPlansInput
  disconnect: Boolean
  delete: Boolean
  connect: MoneyWhereUniqueInput
  update: MoneyUpdateWithoutSubscriptionPlan_money_subscriptionPlansInput
}

input MoneyUpsertWithoutSubscriptionPlan_money_subscriptionPlansInput {
  update: MoneyUpdateWithoutSubscriptionPlan_money_subscriptionPlansInput!
  create: MoneyCreateWithoutSubscriptionPlan_money_subscriptionPlansInput!
}

input MoneyUpdateWithoutSubscriptionPlan_money_subscriptionPlansInput {
  id: StringFieldUpdateOperationsInput
  value: NullableFloatFieldUpdateOperationsInput
  Currency: NullableEnumCurrencyFieldUpdateOperationsInput
  History: HistoryUpdateOneWithoutMoney_history_moneyInput
  Item_value_item: ItemUpdateOneWithoutValueInput
  Subscription_money_subscription: SubscriptionUpdateOneWithoutPriceInput
}

input SubscriptionUpdateOneWithoutPriceInput {
  create: SubscriptionCreateWithoutPriceInput
  connectOrCreate: SubscriptionCreateOrConnectWithoutPriceInput
  upsert: SubscriptionUpsertWithoutPriceInput
  disconnect: Boolean
  delete: Boolean
  connect: SubscriptionWhereUniqueInput
  update: SubscriptionUpdateWithoutPriceInput
}

input SubscriptionUpsertWithoutPriceInput {
  update: SubscriptionUpdateWithoutPriceInput!
  create: SubscriptionCreateWithoutPriceInput!
}

input SubscriptionUpdateWithoutPriceInput {
  id: StringFieldUpdateOperationsInput
  Timespan: TimespanUpdateOneWithoutSubscription_timespan_subscriptionInput
  Type: SubscriptionPlanUpdateOneWithoutSubscription_subscriptionType_subscriptionInput
}

input BoosterUpdateWithWhereUniqueWithoutItem_booster_itemInput {
  where: BoosterWhereUniqueInput!
  data: BoosterUpdateWithoutItem_booster_itemInput!
}

input BoosterUpdateManyWithWhereWithoutItem_booster_itemInput {
  where: BoosterScalarWhereInput!
  data: BoosterUpdateManyMutationInput!
}

input BoosterScalarWhereInput {
  AND: [BoosterScalarWhereInput!]
  OR: [BoosterScalarWhereInput!]
  NOT: [BoosterScalarWhereInput!]
  id: StringFilter
  TimespanId: StringNullableFilter
}

input BoosterUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
}

input ItemUpdateWithWhereUniqueWithoutOwnerInput {
  where: ItemWhereUniqueInput!
  data: ItemUpdateWithoutOwnerInput!
}

input ItemUpdateManyWithWhereWithoutOwnerInput {
  where: ItemScalarWhereInput!
  data: ItemUpdateManyMutationInput!
}

input TradePackageUpdateWithWhereUniqueWithoutWantedByInput {
  where: TradePackageWhereUniqueInput!
  data: TradePackageUpdateWithoutWantedByInput!
}

input TradePackageUpdateManyWithWhereWithoutWantedByInput {
  where: TradePackageScalarWhereInput!
  data: TradePackageUpdateManyMutationInput!
}

input ClothUpdateOneWithoutHistoryInput {
  create: ClothCreateWithoutHistoryInput
  connectOrCreate: ClothCreateOrConnectWithoutHistoryInput
  upsert: ClothUpsertWithoutHistoryInput
  disconnect: Boolean
  delete: Boolean
  connect: ClothWhereUniqueInput
  update: ClothUpdateWithoutHistoryInput
}

input ClothUpsertWithoutHistoryInput {
  update: ClothUpdateWithoutHistoryInput!
  create: ClothCreateWithoutHistoryInput!
}

input ClothUpdateWithoutHistoryInput {
  id: StringFieldUpdateOperationsInput
  code: NullableStringFieldUpdateOperationsInput
  Material: MaterialUpdateOneWithoutCloth_material_clothsInput
  Item: ItemUpdateOneRequiredWithoutCloth_item_clothInput
  ClothSizes: ClothSizeUpdateManyWithoutCloth_clothSize_clothInput
  ClothStyles: ClothStyleUpdateManyWithoutItem_clothStyle_itemsInput
  Wardrobe: WardrobeUpdateOneWithoutClothsInput
}

input EventUpdateWithWhereUniqueWithoutWhoInput {
  where: EventWhereUniqueInput!
  data: EventUpdateWithoutWhoInput!
}

input EventUpdateManyWithWhereWithoutWhoInput {
  where: EventScalarWhereInput!
  data: EventUpdateManyMutationInput!
}

input EventScalarWhereInput {
  AND: [EventScalarWhereInput!]
  OR: [EventScalarWhereInput!]
  NOT: [EventScalarWhereInput!]
  id: StringFilter
  when: DateTimeFilter
  what: StringFilter
  from: JsonNullableFilter
  to: JsonNullableFilter
}

input EventUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  when: DateTimeFieldUpdateOperationsInput
  what: StringFieldUpdateOperationsInput
  from: JSON
  to: JSON
}

input PersonUpdateWithWhereUniqueWithoutClothSizesInput {
  where: PersonWhereUniqueInput!
  data: PersonUpdateWithoutClothSizesInput!
}

input PersonUpdateManyWithWhereWithoutClothSizesInput {
  where: PersonScalarWhereInput!
  data: PersonUpdateManyMutationInput!
}

input ClothSizeUpdateWithWhereUniqueWithoutClothSizeInput {
  where: ClothSizeWhereUniqueInput!
  data: ClothSizeUpdateWithoutClothSizeInput!
}

input ClothSizeUpdateManyWithWhereWithoutClothSizeInput {
  where: ClothSizeScalarWhereInput!
  data: ClothSizeUpdateManyMutationInput!
}

input ClothSizeScalarWhereInput {
  AND: [ClothSizeScalarWhereInput!]
  OR: [ClothSizeScalarWhereInput!]
  NOT: [ClothSizeScalarWhereInput!]
  id: StringFilter
  name: StringNullableFilter
  rank: IntNullableFilter
  SizeModel: EnumSizeModelNullableFilter
}

input ClothSizeUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  rank: NullableIntFieldUpdateOperationsInput
  SizeModel: NullableEnumSizeModelFieldUpdateOperationsInput
}

input ClothSizeUpdateManyWithoutComparableToInput {
  create: [ClothSizeCreateWithoutComparableToInput!]
  connectOrCreate: [ClothSizeCreateOrConnectWithoutComparableToInput!]
  upsert: [ClothSizeUpsertWithWhereUniqueWithoutComparableToInput!]
  set: [ClothSizeWhereUniqueInput!]
  disconnect: [ClothSizeWhereUniqueInput!]
  delete: [ClothSizeWhereUniqueInput!]
  connect: [ClothSizeWhereUniqueInput!]
  update: [ClothSizeUpdateWithWhereUniqueWithoutComparableToInput!]
  updateMany: [ClothSizeUpdateManyWithWhereWithoutComparableToInput!]
  deleteMany: [ClothSizeScalarWhereInput!]
}

input ClothSizeUpsertWithWhereUniqueWithoutComparableToInput {
  where: ClothSizeWhereUniqueInput!
  update: ClothSizeUpdateWithoutComparableToInput!
  create: ClothSizeCreateWithoutComparableToInput!
}

input ClothSizeUpdateWithoutComparableToInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  rank: NullableIntFieldUpdateOperationsInput
  SizeModel: NullableEnumSizeModelFieldUpdateOperationsInput
  Categories: CategoryUpdateManyWithoutClothSizesInput
  Cloth_clothSize_cloth: ClothUpdateManyWithoutClothSizesInput
  Person_clothSize_persons: PersonUpdateManyWithoutClothSizesInput
  ClothSize: ClothSizeUpdateManyWithoutComparableToInput
}

input ClothSizeUpdateWithWhereUniqueWithoutComparableToInput {
  where: ClothSizeWhereUniqueInput!
  data: ClothSizeUpdateWithoutComparableToInput!
}

input ClothSizeUpdateManyWithWhereWithoutComparableToInput {
  where: ClothSizeScalarWhereInput!
  data: ClothSizeUpdateManyMutationInput!
}

input ClothSizeUpdateWithWhereUniqueWithoutPerson_clothSize_personsInput {
  where: ClothSizeWhereUniqueInput!
  data: ClothSizeUpdateWithoutPerson_clothSize_personsInput!
}

input ClothSizeUpdateManyWithWhereWithoutPerson_clothSize_personsInput {
  where: ClothSizeScalarWhereInput!
  data: ClothSizeUpdateManyMutationInput!
}

input ItemUpdateOneWithoutPicturesInput {
  create: ItemCreateWithoutPicturesInput
  connectOrCreate: ItemCreateOrConnectWithoutPicturesInput
  upsert: ItemUpsertWithoutPicturesInput
  disconnect: Boolean
  delete: Boolean
  connect: ItemWhereUniqueInput
  update: ItemUpdateWithoutPicturesInput
}

input ItemUpsertWithoutPicturesInput {
  update: ItemUpdateWithoutPicturesInput!
  create: ItemCreateWithoutPicturesInput!
}

input ItemUpdateWithoutPicturesInput {
  id: StringFieldUpdateOperationsInput
  active: NullableBoolFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  Category: CategoryUpdateOneRequiredWithoutItem_category_itemsInput
  Value: MoneyUpdateOneWithoutItem_value_itemInput
  Colors: ColorUpdateManyWithoutItem_color_itemsInput
  ItemGenders: ItemGenderUpdateManyWithoutItems_itemGender_itemsInput
  Condition: ConditionUpdateOneWithoutItem_condition_itemsInput
  Owner: PersonUpdateOneWithoutItem_owner_itemsInput
  Booster: BoosterUpdateManyWithoutItem_booster_itemInput
  Cloth_item_cloth: ClothUpdateOneWithoutItemInput
  TradePackage_item_tradePackages: TradePackageUpdateManyWithoutItemsInput
}

input PersonUpdateWithWhereUniqueWithoutItemGendersInput {
  where: PersonWhereUniqueInput!
  data: PersonUpdateWithoutItemGendersInput!
}

input PersonUpdateManyWithWhereWithoutItemGendersInput {
  where: PersonScalarWhereInput!
  data: PersonUpdateManyMutationInput!
}

input ItemGenderUpdateWithWhereUniqueWithoutItems_itemGender_itemsInput {
  where: ItemGenderWhereUniqueInput!
  data: ItemGenderUpdateWithoutItems_itemGender_itemsInput!
}

input ItemGenderUpdateManyWithWhereWithoutItems_itemGender_itemsInput {
  where: ItemGenderScalarWhereInput!
  data: ItemGenderUpdateManyMutationInput!
}

input ItemGenderScalarWhereInput {
  AND: [ItemGenderScalarWhereInput!]
  OR: [ItemGenderScalarWhereInput!]
  NOT: [ItemGenderScalarWhereInput!]
  id: StringFilter
  name: StringNullableFilter
  rank: IntNullableFilter
}

input ItemGenderUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  rank: NullableIntFieldUpdateOperationsInput
}

input ItemUpdateWithWhereUniqueWithoutCategoryInput {
  where: ItemWhereUniqueInput!
  data: ItemUpdateWithoutCategoryInput!
}

input ItemUpdateManyWithWhereWithoutCategoryInput {
  where: ItemScalarWhereInput!
  data: ItemUpdateManyMutationInput!
}

input CategoryUpdateOneWithoutSubCategoriesInput {
  create: CategoryCreateWithoutSubCategoriesInput
  connectOrCreate: CategoryCreateOrConnectWithoutSubCategoriesInput
  upsert: CategoryUpsertWithoutSubCategoriesInput
  disconnect: Boolean
  delete: Boolean
  connect: CategoryWhereUniqueInput
  update: CategoryUpdateWithoutSubCategoriesInput
}

input CategoryUpsertWithoutSubCategoriesInput {
  update: CategoryUpdateWithoutSubCategoriesInput!
  create: CategoryCreateWithoutSubCategoriesInput!
}

input CategoryUpdateWithoutSubCategoriesInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  ClothSizes: ClothSizeUpdateManyWithoutCategoriesInput
  Brand_category_brands: BrandUpdateManyWithoutCategoriesInput
  Item_category_items: ItemUpdateManyWithoutCategoryInput
  ParentCategory: CategoryUpdateOneWithoutSubCategoriesInput
}

input CategoryUpdateManyWithoutParentCategoryInput {
  create: [CategoryCreateWithoutParentCategoryInput!]
  connectOrCreate: [CategoryCreateOrConnectWithoutParentCategoryInput!]
  upsert: [CategoryUpsertWithWhereUniqueWithoutParentCategoryInput!]
  createMany: CategoryCreateManyParentCategoryInputEnvelope
  set: [CategoryWhereUniqueInput!]
  disconnect: [CategoryWhereUniqueInput!]
  delete: [CategoryWhereUniqueInput!]
  connect: [CategoryWhereUniqueInput!]
  update: [CategoryUpdateWithWhereUniqueWithoutParentCategoryInput!]
  updateMany: [CategoryUpdateManyWithWhereWithoutParentCategoryInput!]
  deleteMany: [CategoryScalarWhereInput!]
}

input CategoryUpsertWithWhereUniqueWithoutParentCategoryInput {
  where: CategoryWhereUniqueInput!
  update: CategoryUpdateWithoutParentCategoryInput!
  create: CategoryCreateWithoutParentCategoryInput!
}

input CategoryUpdateWithoutParentCategoryInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  ClothSizes: ClothSizeUpdateManyWithoutCategoriesInput
  Brand_category_brands: BrandUpdateManyWithoutCategoriesInput
  Item_category_items: ItemUpdateManyWithoutCategoryInput
  SubCategories: CategoryUpdateManyWithoutParentCategoryInput
}

input CategoryUpdateWithWhereUniqueWithoutParentCategoryInput {
  where: CategoryWhereUniqueInput!
  data: CategoryUpdateWithoutParentCategoryInput!
}

input CategoryUpdateManyWithWhereWithoutParentCategoryInput {
  where: CategoryScalarWhereInput!
  data: CategoryUpdateManyMutationInput!
}

input CategoryScalarWhereInput {
  AND: [CategoryScalarWhereInput!]
  OR: [CategoryScalarWhereInput!]
  NOT: [CategoryScalarWhereInput!]
  id: StringFilter
  name: StringNullableFilter
}

input CategoryUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
}

input CategoryUpdateWithWhereUniqueWithoutClothSizesInput {
  where: CategoryWhereUniqueInput!
  data: CategoryUpdateWithoutClothSizesInput!
}

input CategoryUpdateManyWithWhereWithoutClothSizesInput {
  where: CategoryScalarWhereInput!
  data: CategoryUpdateManyMutationInput!
}

input ClothSizeUpdateWithWhereUniqueWithoutCloth_clothSize_clothInput {
  where: ClothSizeWhereUniqueInput!
  data: ClothSizeUpdateWithoutCloth_clothSize_clothInput!
}

input ClothSizeUpdateManyWithWhereWithoutCloth_clothSize_clothInput {
  where: ClothSizeScalarWhereInput!
  data: ClothSizeUpdateManyMutationInput!
}

input ClothUpdateWithWhereUniqueWithoutWardrobeInput {
  where: ClothWhereUniqueInput!
  data: ClothUpdateWithoutWardrobeInput!
}

input ClothUpdateManyWithWhereWithoutWardrobeInput {
  where: ClothScalarWhereInput!
  data: ClothUpdateManyMutationInput!
}

input ClothScalarWhereInput {
  AND: [ClothScalarWhereInput!]
  OR: [ClothScalarWhereInput!]
  NOT: [ClothScalarWhereInput!]
  id: StringFilter
  code: StringNullableFilter
}

input ClothUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  code: NullableStringFieldUpdateOperationsInput
}

input WardrobeUpdateWithWhereUniqueWithoutAddressInput {
  where: WardrobeWhereUniqueInput!
  data: WardrobeUpdateWithoutAddressInput!
}

input WardrobeUpdateManyWithWhereWithoutAddressInput {
  where: WardrobeScalarWhereInput!
  data: WardrobeUpdateManyMutationInput!
}

input WardrobeScalarWhereInput {
  AND: [WardrobeScalarWhereInput!]
  OR: [WardrobeScalarWhereInput!]
  NOT: [WardrobeScalarWhereInput!]
  id: StringFilter
  name: StringNullableFilter
}

input WardrobeUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
}

input AddressUpdateWithWhereUniqueWithoutPersonInput {
  where: AddressWhereUniqueInput!
  data: AddressUpdateWithoutPersonInput!
}

input AddressUpdateManyWithWhereWithoutPersonInput {
  where: AddressScalarWhereInput!
  data: AddressUpdateManyMutationInput!
}

input AddressScalarWhereInput {
  AND: [AddressScalarWhereInput!]
  OR: [AddressScalarWhereInput!]
  NOT: [AddressScalarWhereInput!]
  id: StringFilter
  line1: StringNullableFilter
  line2: StringNullableFilter
  city: StringNullableFilter
  province: StringNullableFilter
  zip: StringNullableFilter
}

input AddressUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  line1: NullableStringFieldUpdateOperationsInput
  line2: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  province: NullableStringFieldUpdateOperationsInput
  zip: NullableStringFieldUpdateOperationsInput
}

input EventUpdateWithWhereUniqueWithoutHistory_updated_historyInput {
  where: EventWhereUniqueInput!
  data: EventUpdateWithoutHistory_updated_historyInput!
}

input EventUpdateManyWithWhereWithoutHistory_updated_historyInput {
  where: EventScalarWhereInput!
  data: EventUpdateManyMutationInput!
}

input ItemUpdateWithWhereUniqueWithoutItemGendersInput {
  where: ItemWhereUniqueInput!
  data: ItemUpdateWithoutItemGendersInput!
}

input ItemUpdateManyWithWhereWithoutItemGendersInput {
  where: ItemScalarWhereInput!
  data: ItemUpdateManyMutationInput!
}

input ItemGenderUpdateWithWhereUniqueWithoutPerson_itemGender_personsInput {
  where: ItemGenderWhereUniqueInput!
  data: ItemGenderUpdateWithoutPerson_itemGender_personsInput!
}

input ItemGenderUpdateManyWithWhereWithoutPerson_itemGender_personsInput {
  where: ItemGenderScalarWhereInput!
  data: ItemGenderUpdateManyMutationInput!
}

input PersonUpdateWithWhereUniqueWithoutClothStylesInput {
  where: PersonWhereUniqueInput!
  data: PersonUpdateWithoutClothStylesInput!
}

input PersonUpdateManyWithWhereWithoutClothStylesInput {
  where: PersonScalarWhereInput!
  data: PersonUpdateManyMutationInput!
}

input ClothStyleUpdateWithWhereUniqueWithoutItem_clothStyle_itemsInput {
  where: ClothStyleWhereUniqueInput!
  data: ClothStyleUpdateWithoutItem_clothStyle_itemsInput!
}

input ClothStyleUpdateManyWithWhereWithoutItem_clothStyle_itemsInput {
  where: ClothStyleScalarWhereInput!
  data: ClothStyleUpdateManyMutationInput!
}

input ClothUpdateWithWhereUniqueWithoutClothSizesInput {
  where: ClothWhereUniqueInput!
  data: ClothUpdateWithoutClothSizesInput!
}

input ClothUpdateManyWithWhereWithoutClothSizesInput {
  where: ClothScalarWhereInput!
  data: ClothUpdateManyMutationInput!
}

input ClothSizeUpdateWithWhereUniqueWithoutCategoriesInput {
  where: ClothSizeWhereUniqueInput!
  data: ClothSizeUpdateWithoutCategoriesInput!
}

input ClothSizeUpdateManyWithWhereWithoutCategoriesInput {
  where: ClothSizeScalarWhereInput!
  data: ClothSizeUpdateManyMutationInput!
}

input ClothUpdateWithWhereUniqueWithoutClothStylesInput {
  where: ClothWhereUniqueInput!
  data: ClothUpdateWithoutClothStylesInput!
}

input ClothUpdateManyWithWhereWithoutClothStylesInput {
  where: ClothScalarWhereInput!
  data: ClothUpdateManyMutationInput!
}

input ItemGenderCreateInput {
  id: String
  name: String
  rank: Int
  Items_itemGender_items: ItemCreateNestedManyWithoutItemGendersInput
  Person_itemGender_persons: PersonCreateNestedManyWithoutItemGendersInput
}

input ItemGenderUpdateInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  rank: NullableIntFieldUpdateOperationsInput
  Items_itemGender_items: ItemUpdateManyWithoutItemGendersInput
  Person_itemGender_persons: PersonUpdateManyWithoutItemGendersInput
}

input MaterialCreateInput {
  id: String
  name: String
  Cloth_material_cloths: ClothCreateNestedManyWithoutMaterialInput
}

input ClothCreateNestedManyWithoutMaterialInput {
  create: [ClothCreateWithoutMaterialInput!]
  connectOrCreate: [ClothCreateOrConnectWithoutMaterialInput!]
  createMany: ClothCreateManyMaterialInputEnvelope
  connect: [ClothWhereUniqueInput!]
}

input ClothCreateWithoutMaterialInput {
  id: String
  code: String
  Item: ItemCreateNestedOneWithoutCloth_item_clothInput!
  ClothSizes: ClothSizeCreateNestedManyWithoutCloth_clothSize_clothInput
  ClothStyles: ClothStyleCreateNestedManyWithoutItem_clothStyle_itemsInput
  History: HistoryCreateNestedOneWithoutCloth_history_clothInput
  Wardrobe: WardrobeCreateNestedOneWithoutClothsInput
}

input ClothCreateOrConnectWithoutMaterialInput {
  where: ClothWhereUniqueInput!
  create: ClothCreateWithoutMaterialInput!
}

input ClothCreateManyMaterialInputEnvelope {
  data: [ClothCreateManyMaterialInput!]!
  skipDuplicates: Boolean
}

input ClothCreateManyMaterialInput {
  id: String
  code: String
}

input MaterialUpdateInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  Cloth_material_cloths: ClothUpdateManyWithoutMaterialInput
}

input ClothUpdateManyWithoutMaterialInput {
  create: [ClothCreateWithoutMaterialInput!]
  connectOrCreate: [ClothCreateOrConnectWithoutMaterialInput!]
  upsert: [ClothUpsertWithWhereUniqueWithoutMaterialInput!]
  createMany: ClothCreateManyMaterialInputEnvelope
  set: [ClothWhereUniqueInput!]
  disconnect: [ClothWhereUniqueInput!]
  delete: [ClothWhereUniqueInput!]
  connect: [ClothWhereUniqueInput!]
  update: [ClothUpdateWithWhereUniqueWithoutMaterialInput!]
  updateMany: [ClothUpdateManyWithWhereWithoutMaterialInput!]
  deleteMany: [ClothScalarWhereInput!]
}

input ClothUpsertWithWhereUniqueWithoutMaterialInput {
  where: ClothWhereUniqueInput!
  update: ClothUpdateWithoutMaterialInput!
  create: ClothCreateWithoutMaterialInput!
}

input ClothUpdateWithoutMaterialInput {
  id: StringFieldUpdateOperationsInput
  code: NullableStringFieldUpdateOperationsInput
  Item: ItemUpdateOneRequiredWithoutCloth_item_clothInput
  ClothSizes: ClothSizeUpdateManyWithoutCloth_clothSize_clothInput
  ClothStyles: ClothStyleUpdateManyWithoutItem_clothStyle_itemsInput
  History: HistoryUpdateOneWithoutCloth_history_clothInput
  Wardrobe: WardrobeUpdateOneWithoutClothsInput
}

input ClothUpdateWithWhereUniqueWithoutMaterialInput {
  where: ClothWhereUniqueInput!
  data: ClothUpdateWithoutMaterialInput!
}

input ClothUpdateManyWithWhereWithoutMaterialInput {
  where: ClothScalarWhereInput!
  data: ClothUpdateManyMutationInput!
}

input PictureCreateInput {
  id: String
  rank: Int
  LQ: FileCreateNestedOneWithoutFile_lqPictureFile_fileInput
  MQ: FileCreateNestedOneWithoutFile_mqPictureFile_fileInput
  HQ: FileCreateNestedOneWithoutFile_hqPictureFile_fileInput
  Person: PersonCreateNestedOneWithoutPictureInput
  Item_picture_item: ItemCreateNestedOneWithoutPicturesInput
}

input PictureUpdateInput {
  id: StringFieldUpdateOperationsInput
  rank: NullableIntFieldUpdateOperationsInput
  LQ: FileUpdateOneWithoutFile_lqPictureFile_fileInput
  MQ: FileUpdateOneWithoutFile_mqPictureFile_fileInput
  HQ: FileUpdateOneWithoutFile_hqPictureFile_fileInput
  Person: PersonUpdateOneWithoutPictureInput
  Item_picture_item: ItemUpdateOneWithoutPicturesInput
}

input FileCreateInput {
  id: String
  extension: String
  File_lqPictureFile_file: PictureCreateNestedOneWithoutLQInput
  File_mqPictureFile_file: PictureCreateNestedOneWithoutMQInput
  File_hqPictureFile_file: PictureCreateNestedOneWithoutHQInput
}

input FileUpdateInput {
  id: StringFieldUpdateOperationsInput
  extension: NullableStringFieldUpdateOperationsInput
  File_lqPictureFile_file: PictureUpdateOneWithoutLQInput
  File_mqPictureFile_file: PictureUpdateOneWithoutMQInput
  File_hqPictureFile_file: PictureUpdateOneWithoutHQInput
}

input RatingCreateInput {
  id: String
  amount: Int
  Contract: ContractCreateNestedOneWithoutRatingInput
  From: PersonCreateNestedOneWithoutRating_person_ratingsInput
}

input RatingUpdateInput {
  id: StringFieldUpdateOperationsInput
  amount: NullableIntFieldUpdateOperationsInput
  Contract: ContractUpdateOneWithoutRatingInput
  From: PersonUpdateOneWithoutRating_person_ratingsInput
}

input SubscriptionCreateInput {
  id: String
  Price: MoneyCreateNestedOneWithoutSubscription_money_subscriptionInput!
  Timespan: TimespanCreateNestedOneWithoutSubscription_timespan_subscriptionInput
  Type: SubscriptionPlanCreateNestedOneWithoutSubscription_subscriptionType_subscriptionInput
}

input SubscriptionUpdateInput {
  id: StringFieldUpdateOperationsInput
  Price: MoneyUpdateOneRequiredWithoutSubscription_money_subscriptionInput
  Timespan: TimespanUpdateOneWithoutSubscription_timespan_subscriptionInput
  Type: SubscriptionPlanUpdateOneWithoutSubscription_subscriptionType_subscriptionInput
}

input SubscriptionPlanCreateInput {
  id: String
  name: String
  StandardDuration: DurationCreateNestedOneWithoutSubscriptionPlan_duration_subscriptionPlanInput!
  StandardPrice: MoneyCreateNestedOneWithoutSubscriptionPlan_money_subscriptionPlansInput
  Subscription_subscriptionType_subscription: SubscriptionCreateNestedManyWithoutTypeInput
}

input SubscriptionPlanUpdateInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  StandardDuration: DurationUpdateOneRequiredWithoutSubscriptionPlan_duration_subscriptionPlanInput
  StandardPrice: MoneyUpdateOneWithoutSubscriptionPlan_money_subscriptionPlansInput
  Subscription_subscriptionType_subscription: SubscriptionUpdateManyWithoutTypeInput
}

input BoosterCreateInput {
  id: String
  Timespan: TimespanCreateNestedOneWithoutBooster_timespan_boosterInput
  Item_booster_item: ItemCreateNestedOneWithoutBoosterInput
}

input BoosterUpdateInput {
  id: StringFieldUpdateOperationsInput
  Timespan: TimespanUpdateOneWithoutBooster_timespan_boosterInput
  Item_booster_item: ItemUpdateOneWithoutBoosterInput
}

input MoneyCreateInput {
  id: String
  value: Float
  Currency: Currency
  History: HistoryCreateNestedOneWithoutMoney_history_moneyInput
  Item_value_item: ItemCreateNestedOneWithoutValueInput
  SubscriptionPlan_money_subscriptionPlans: SubscriptionPlanCreateNestedOneWithoutStandardPriceInput
  Subscription_money_subscription: SubscriptionCreateNestedOneWithoutPriceInput
}

input MoneyUpdateInput {
  id: StringFieldUpdateOperationsInput
  value: NullableFloatFieldUpdateOperationsInput
  Currency: NullableEnumCurrencyFieldUpdateOperationsInput
  History: HistoryUpdateOneWithoutMoney_history_moneyInput
  Item_value_item: ItemUpdateOneWithoutValueInput
  SubscriptionPlan_money_subscriptionPlans: SubscriptionPlanUpdateOneWithoutStandardPriceInput
  Subscription_money_subscription: SubscriptionUpdateOneWithoutPriceInput
}

input ContractCreateInput {
  id: String
  Offer: OfferCreateNestedOneWithoutContractInput
  Rating: RatingCreateNestedManyWithoutContractInput
}

input ContractUpdateInput {
  id: StringFieldUpdateOperationsInput
  Offer: OfferUpdateOneWithoutContractInput
  Rating: RatingUpdateManyWithoutContractInput
}

input OfferCreateInput {
  id: String
  TradePackages: TradePackageCreateNestedManyWithoutOffer_tradePackage_offersInput
  Contract: ContractCreateNestedOneWithoutOfferInput
}

input OfferUpdateInput {
  id: StringFieldUpdateOperationsInput
  TradePackages: TradePackageUpdateManyWithoutOffer_tradePackage_offersInput
  Contract: ContractUpdateOneWithoutOfferInput
}

input TradePackageCreateInput {
  id: String
  WantedBy: PersonCreateNestedManyWithoutTradePackage_wantedBy_tradePackagesInput
  From: PersonCreateNestedOneWithoutTradePackage_from_tradePackagesInput
  Items: ItemCreateNestedManyWithoutTradePackage_item_tradePackagesInput
  Offer_tradePackage_offers: OfferCreateNestedManyWithoutTradePackagesInput
}

input TradePackageUpdateInput {
  id: StringFieldUpdateOperationsInput
  WantedBy: PersonUpdateManyWithoutTradePackage_wantedBy_tradePackagesInput
  From: PersonUpdateOneWithoutTradePackage_from_tradePackagesInput
  Items: ItemUpdateManyWithoutTradePackage_item_tradePackagesInput
  Offer_tradePackage_offers: OfferUpdateManyWithoutTradePackagesInput
}

input WardrobeCreateInput {
  id: String
  name: String
  Address: AddressCreateNestedOneWithoutWardrobesInput
  Cloths: ClothCreateNestedManyWithoutWardrobeInput
}

input WardrobeUpdateInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  Address: AddressUpdateOneWithoutWardrobesInput
  Cloths: ClothUpdateManyWithoutWardrobeInput
}

input PersonCreateInput {
  id: String!
  email: String
  birthday: DateTime
  firstName: String
  lastName: String
  Gender: GenderCreateNestedOneWithoutProfile_gender_profilesInput
  ItemGenders: ItemGenderCreateNestedManyWithoutPerson_itemGender_personsInput
  History: HistoryCreateNestedOneWithoutUser_history_userInput
  Telephone: TelephoneCreateNestedOneWithoutPerson_telephone_personInput
  Address: AddressCreateNestedManyWithoutPersonInput
  Picture: PictureCreateNestedOneWithoutPersonInput
  ClothSizes: ClothSizeCreateNestedManyWithoutPerson_clothSize_personsInput
  ClothStyles: ClothStyleCreateNestedManyWithoutPerson_clothStyle_personsInput
  Event_who_events: EventCreateNestedManyWithoutWhoInput
  Item_owner_items: ItemCreateNestedManyWithoutOwnerInput
  Channel: ChannelCreateNestedOneWithoutParticipantsInput
  TradePackage_wantedBy_tradePackages: TradePackageCreateNestedManyWithoutWantedByInput
  TradePackage_from_tradePackages: TradePackageCreateNestedManyWithoutFromInput
  Rating_person_ratings: RatingCreateNestedManyWithoutFromInput
}

input PersonUpdateInput {
  id: StringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  birthday: NullableDateTimeFieldUpdateOperationsInput
  firstName: NullableStringFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  Gender: GenderUpdateOneWithoutProfile_gender_profilesInput
  ItemGenders: ItemGenderUpdateManyWithoutPerson_itemGender_personsInput
  History: HistoryUpdateOneWithoutUser_history_userInput
  Telephone: TelephoneUpdateOneWithoutPerson_telephone_personInput
  Address: AddressUpdateManyWithoutPersonInput
  Picture: PictureUpdateOneWithoutPersonInput
  ClothSizes: ClothSizeUpdateManyWithoutPerson_clothSize_personsInput
  ClothStyles: ClothStyleUpdateManyWithoutPerson_clothStyle_personsInput
  Event_who_events: EventUpdateManyWithoutWhoInput
  Item_owner_items: ItemUpdateManyWithoutOwnerInput
  Channel: ChannelUpdateOneWithoutParticipantsInput
  TradePackage_wantedBy_tradePackages: TradePackageUpdateManyWithoutWantedByInput
  TradePackage_from_tradePackages: TradePackageUpdateManyWithoutFromInput
  Rating_person_ratings: RatingUpdateManyWithoutFromInput
}

input PersonUncheckedUpdateInput {
  email: NullableStringFieldUpdateOperationsInput
  birthday: NullableDateTimeFieldUpdateOperationsInput
  firstName: NullableStringFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
}

input PictureInput {
  rank: Float

  # base64 encoded image, max 1mb in size
  pictureBase64: String!
}

input ClothCreateInput {
  id: String
  code: String
  Material: MaterialCreateNestedOneWithoutCloth_material_clothsInput
  Item: ItemCreateNestedOneWithoutCloth_item_clothInput!
  ClothSizes: ClothSizeCreateNestedManyWithoutCloth_clothSize_clothInput
  ClothStyles: ClothStyleCreateNestedManyWithoutItem_clothStyle_itemsInput
  History: HistoryCreateNestedOneWithoutCloth_history_clothInput
  Wardrobe: WardrobeCreateNestedOneWithoutClothsInput
}

input ClothUpdateInput {
  id: StringFieldUpdateOperationsInput
  code: NullableStringFieldUpdateOperationsInput
  Material: MaterialUpdateOneWithoutCloth_material_clothsInput
  Item: ItemUpdateOneRequiredWithoutCloth_item_clothInput
  ClothSizes: ClothSizeUpdateManyWithoutCloth_clothSize_clothInput
  ClothStyles: ClothStyleUpdateManyWithoutItem_clothStyle_itemsInput
  History: HistoryUpdateOneWithoutCloth_history_clothInput
  Wardrobe: WardrobeUpdateOneWithoutClothsInput
}

input CreateMyClothInput {
  Cloth: ClothUncheckedCreateInput!
  Material: MaterialWhereUniqueInput
  ClothSizes: [ClothSizeWhereUniqueInput!]
  ClothStyles: [ClothStyleWhereUniqueInput!]
  Wardrobe: WardrobeWhereUniqueInput!
  Item: CreateMyItemInput!
}

input ClothUncheckedCreateInput {
  code: String
}

input CreateMyItemInput {
  Scalars: ItemUncheckedCreateInput!
  Category: CategoryWhereUniqueInput!
  Pictures: [PictureInput!]!
  Genders: [ItemGenderWhereUniqueInput!]
  Condition: ConditionWhereUniqueInput
  Value: MoneyUncheckedCreateInput!
  Colors: [ColorWhereUniqueInput!]
}

input ItemUncheckedCreateInput {
  active: Boolean
  description: String
}

input MoneyUncheckedCreateInput {
  value: Float
  Currency: Currency
}

input ConditionCreateInput {
  id: String
  name: String!
  Item_condition_items: ItemCreateNestedManyWithoutConditionInput
}

input ItemCreateNestedManyWithoutConditionInput {
  create: [ItemCreateWithoutConditionInput!]
  connectOrCreate: [ItemCreateOrConnectWithoutConditionInput!]
  createMany: ItemCreateManyConditionInputEnvelope
  connect: [ItemWhereUniqueInput!]
}

input ItemCreateWithoutConditionInput {
  id: String
  active: Boolean
  description: String
  Category: CategoryCreateNestedOneWithoutItem_category_itemsInput!
  Value: MoneyCreateNestedOneWithoutItem_value_itemInput
  Colors: ColorCreateNestedManyWithoutItem_color_itemsInput
  ItemGenders: ItemGenderCreateNestedManyWithoutItems_itemGender_itemsInput
  Pictures: PictureCreateNestedManyWithoutItem_picture_itemInput
  Owner: PersonCreateNestedOneWithoutItem_owner_itemsInput
  Booster: BoosterCreateNestedManyWithoutItem_booster_itemInput
  Cloth_item_cloth: ClothCreateNestedOneWithoutItemInput
  TradePackage_item_tradePackages: TradePackageCreateNestedManyWithoutItemsInput
}

input ItemCreateOrConnectWithoutConditionInput {
  where: ItemWhereUniqueInput!
  create: ItemCreateWithoutConditionInput!
}

input ItemCreateManyConditionInputEnvelope {
  data: [ItemCreateManyConditionInput!]!
  skipDuplicates: Boolean
}

input ItemCreateManyConditionInput {
  id: String
  active: Boolean
  description: String
}

input ConditionUpdateInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  Item_condition_items: ItemUpdateManyWithoutConditionInput
}

input ItemUpdateManyWithoutConditionInput {
  create: [ItemCreateWithoutConditionInput!]
  connectOrCreate: [ItemCreateOrConnectWithoutConditionInput!]
  upsert: [ItemUpsertWithWhereUniqueWithoutConditionInput!]
  createMany: ItemCreateManyConditionInputEnvelope
  set: [ItemWhereUniqueInput!]
  disconnect: [ItemWhereUniqueInput!]
  delete: [ItemWhereUniqueInput!]
  connect: [ItemWhereUniqueInput!]
  update: [ItemUpdateWithWhereUniqueWithoutConditionInput!]
  updateMany: [ItemUpdateManyWithWhereWithoutConditionInput!]
  deleteMany: [ItemScalarWhereInput!]
}

input ItemUpsertWithWhereUniqueWithoutConditionInput {
  where: ItemWhereUniqueInput!
  update: ItemUpdateWithoutConditionInput!
  create: ItemCreateWithoutConditionInput!
}

input ItemUpdateWithoutConditionInput {
  id: StringFieldUpdateOperationsInput
  active: NullableBoolFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  Category: CategoryUpdateOneRequiredWithoutItem_category_itemsInput
  Value: MoneyUpdateOneWithoutItem_value_itemInput
  Colors: ColorUpdateManyWithoutItem_color_itemsInput
  ItemGenders: ItemGenderUpdateManyWithoutItems_itemGender_itemsInput
  Pictures: PictureUpdateManyWithoutItem_picture_itemInput
  Owner: PersonUpdateOneWithoutItem_owner_itemsInput
  Booster: BoosterUpdateManyWithoutItem_booster_itemInput
  Cloth_item_cloth: ClothUpdateOneWithoutItemInput
  TradePackage_item_tradePackages: TradePackageUpdateManyWithoutItemsInput
}

input ItemUpdateWithWhereUniqueWithoutConditionInput {
  where: ItemWhereUniqueInput!
  data: ItemUpdateWithoutConditionInput!
}

input ItemUpdateManyWithWhereWithoutConditionInput {
  where: ItemScalarWhereInput!
  data: ItemUpdateManyMutationInput!
}

input ClothSizeCreateInput {
  id: String
  name: String
  rank: Int
  SizeModel: SizeModel
  Categories: CategoryCreateNestedManyWithoutClothSizesInput
  Cloth_clothSize_cloth: ClothCreateNestedManyWithoutClothSizesInput
  Person_clothSize_persons: PersonCreateNestedManyWithoutClothSizesInput
  ComparableTo: ClothSizeCreateNestedManyWithoutClothSizeInput
  ClothSize: ClothSizeCreateNestedManyWithoutComparableToInput
}

input ClothSizeUpdateInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  rank: NullableIntFieldUpdateOperationsInput
  SizeModel: NullableEnumSizeModelFieldUpdateOperationsInput
  Categories: CategoryUpdateManyWithoutClothSizesInput
  Cloth_clothSize_cloth: ClothUpdateManyWithoutClothSizesInput
  Person_clothSize_persons: PersonUpdateManyWithoutClothSizesInput
  ComparableTo: ClothSizeUpdateManyWithoutClothSizeInput
  ClothSize: ClothSizeUpdateManyWithoutComparableToInput
}

input ColorCreateInput {
  id: String
  name: String
  Type: ColorType
  Item_color_items: ItemCreateNestedManyWithoutColorsInput
}

input ItemCreateNestedManyWithoutColorsInput {
  create: [ItemCreateWithoutColorsInput!]
  connectOrCreate: [ItemCreateOrConnectWithoutColorsInput!]
  connect: [ItemWhereUniqueInput!]
}

input ItemCreateWithoutColorsInput {
  id: String
  active: Boolean
  description: String
  Category: CategoryCreateNestedOneWithoutItem_category_itemsInput!
  Value: MoneyCreateNestedOneWithoutItem_value_itemInput
  ItemGenders: ItemGenderCreateNestedManyWithoutItems_itemGender_itemsInput
  Pictures: PictureCreateNestedManyWithoutItem_picture_itemInput
  Condition: ConditionCreateNestedOneWithoutItem_condition_itemsInput
  Owner: PersonCreateNestedOneWithoutItem_owner_itemsInput
  Booster: BoosterCreateNestedManyWithoutItem_booster_itemInput
  Cloth_item_cloth: ClothCreateNestedOneWithoutItemInput
  TradePackage_item_tradePackages: TradePackageCreateNestedManyWithoutItemsInput
}

input ItemCreateOrConnectWithoutColorsInput {
  where: ItemWhereUniqueInput!
  create: ItemCreateWithoutColorsInput!
}

input ColorUpdateInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  Type: NullableEnumColorTypeFieldUpdateOperationsInput
  Item_color_items: ItemUpdateManyWithoutColorsInput
}

input ItemUpdateManyWithoutColorsInput {
  create: [ItemCreateWithoutColorsInput!]
  connectOrCreate: [ItemCreateOrConnectWithoutColorsInput!]
  upsert: [ItemUpsertWithWhereUniqueWithoutColorsInput!]
  set: [ItemWhereUniqueInput!]
  disconnect: [ItemWhereUniqueInput!]
  delete: [ItemWhereUniqueInput!]
  connect: [ItemWhereUniqueInput!]
  update: [ItemUpdateWithWhereUniqueWithoutColorsInput!]
  updateMany: [ItemUpdateManyWithWhereWithoutColorsInput!]
  deleteMany: [ItemScalarWhereInput!]
}

input ItemUpsertWithWhereUniqueWithoutColorsInput {
  where: ItemWhereUniqueInput!
  update: ItemUpdateWithoutColorsInput!
  create: ItemCreateWithoutColorsInput!
}

input ItemUpdateWithoutColorsInput {
  id: StringFieldUpdateOperationsInput
  active: NullableBoolFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  Category: CategoryUpdateOneRequiredWithoutItem_category_itemsInput
  Value: MoneyUpdateOneWithoutItem_value_itemInput
  ItemGenders: ItemGenderUpdateManyWithoutItems_itemGender_itemsInput
  Pictures: PictureUpdateManyWithoutItem_picture_itemInput
  Condition: ConditionUpdateOneWithoutItem_condition_itemsInput
  Owner: PersonUpdateOneWithoutItem_owner_itemsInput
  Booster: BoosterUpdateManyWithoutItem_booster_itemInput
  Cloth_item_cloth: ClothUpdateOneWithoutItemInput
  TradePackage_item_tradePackages: TradePackageUpdateManyWithoutItemsInput
}

input ItemUpdateWithWhereUniqueWithoutColorsInput {
  where: ItemWhereUniqueInput!
  data: ItemUpdateWithoutColorsInput!
}

input ItemUpdateManyWithWhereWithoutColorsInput {
  where: ItemScalarWhereInput!
  data: ItemUpdateManyMutationInput!
}

input ItemCreateInput {
  id: String
  active: Boolean
  description: String
  Category: CategoryCreateNestedOneWithoutItem_category_itemsInput!
  Value: MoneyCreateNestedOneWithoutItem_value_itemInput
  Colors: ColorCreateNestedManyWithoutItem_color_itemsInput
  ItemGenders: ItemGenderCreateNestedManyWithoutItems_itemGender_itemsInput
  Pictures: PictureCreateNestedManyWithoutItem_picture_itemInput
  Condition: ConditionCreateNestedOneWithoutItem_condition_itemsInput
  Owner: PersonCreateNestedOneWithoutItem_owner_itemsInput
  Booster: BoosterCreateNestedManyWithoutItem_booster_itemInput
  Cloth_item_cloth: ClothCreateNestedOneWithoutItemInput
  TradePackage_item_tradePackages: TradePackageCreateNestedManyWithoutItemsInput
}

input ItemUpdateInput {
  id: StringFieldUpdateOperationsInput
  active: NullableBoolFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  Category: CategoryUpdateOneRequiredWithoutItem_category_itemsInput
  Value: MoneyUpdateOneWithoutItem_value_itemInput
  Colors: ColorUpdateManyWithoutItem_color_itemsInput
  ItemGenders: ItemGenderUpdateManyWithoutItems_itemGender_itemsInput
  Pictures: PictureUpdateManyWithoutItem_picture_itemInput
  Condition: ConditionUpdateOneWithoutItem_condition_itemsInput
  Owner: PersonUpdateOneWithoutItem_owner_itemsInput
  Booster: BoosterUpdateManyWithoutItem_booster_itemInput
  Cloth_item_cloth: ClothUpdateOneWithoutItemInput
  TradePackage_item_tradePackages: TradePackageUpdateManyWithoutItemsInput
}

input BrandCreateInput {
  id: String
  name: String
  Categories: CategoryCreateNestedManyWithoutBrand_category_brandsInput
}

input CategoryCreateNestedManyWithoutBrand_category_brandsInput {
  create: [CategoryCreateWithoutBrand_category_brandsInput!]
  connectOrCreate: [CategoryCreateOrConnectWithoutBrand_category_brandsInput!]
  connect: [CategoryWhereUniqueInput!]
}

input CategoryCreateWithoutBrand_category_brandsInput {
  id: String
  name: String
  ClothSizes: ClothSizeCreateNestedManyWithoutCategoriesInput
  Item_category_items: ItemCreateNestedManyWithoutCategoryInput
  ParentCategory: CategoryCreateNestedOneWithoutSubCategoriesInput
  SubCategories: CategoryCreateNestedManyWithoutParentCategoryInput
}

input CategoryCreateOrConnectWithoutBrand_category_brandsInput {
  where: CategoryWhereUniqueInput!
  create: CategoryCreateWithoutBrand_category_brandsInput!
}

input BrandUpdateInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  Categories: CategoryUpdateManyWithoutBrand_category_brandsInput
}

input CategoryUpdateManyWithoutBrand_category_brandsInput {
  create: [CategoryCreateWithoutBrand_category_brandsInput!]
  connectOrCreate: [CategoryCreateOrConnectWithoutBrand_category_brandsInput!]
  upsert: [CategoryUpsertWithWhereUniqueWithoutBrand_category_brandsInput!]
  set: [CategoryWhereUniqueInput!]
  disconnect: [CategoryWhereUniqueInput!]
  delete: [CategoryWhereUniqueInput!]
  connect: [CategoryWhereUniqueInput!]
  update: [CategoryUpdateWithWhereUniqueWithoutBrand_category_brandsInput!]
  updateMany: [CategoryUpdateManyWithWhereWithoutBrand_category_brandsInput!]
  deleteMany: [CategoryScalarWhereInput!]
}

input CategoryUpsertWithWhereUniqueWithoutBrand_category_brandsInput {
  where: CategoryWhereUniqueInput!
  update: CategoryUpdateWithoutBrand_category_brandsInput!
  create: CategoryCreateWithoutBrand_category_brandsInput!
}

input CategoryUpdateWithoutBrand_category_brandsInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  ClothSizes: ClothSizeUpdateManyWithoutCategoriesInput
  Item_category_items: ItemUpdateManyWithoutCategoryInput
  ParentCategory: CategoryUpdateOneWithoutSubCategoriesInput
  SubCategories: CategoryUpdateManyWithoutParentCategoryInput
}

input CategoryUpdateWithWhereUniqueWithoutBrand_category_brandsInput {
  where: CategoryWhereUniqueInput!
  data: CategoryUpdateWithoutBrand_category_brandsInput!
}

input CategoryUpdateManyWithWhereWithoutBrand_category_brandsInput {
  where: CategoryScalarWhereInput!
  data: CategoryUpdateManyMutationInput!
}

input CategoryCreateInput {
  id: String
  name: String
  ClothSizes: ClothSizeCreateNestedManyWithoutCategoriesInput
  Brand_category_brands: BrandCreateNestedManyWithoutCategoriesInput
  Item_category_items: ItemCreateNestedManyWithoutCategoryInput
  ParentCategory: CategoryCreateNestedOneWithoutSubCategoriesInput
  SubCategories: CategoryCreateNestedManyWithoutParentCategoryInput
}

input CategoryUpdateInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  ClothSizes: ClothSizeUpdateManyWithoutCategoriesInput
  Brand_category_brands: BrandUpdateManyWithoutCategoriesInput
  Item_category_items: ItemUpdateManyWithoutCategoryInput
  ParentCategory: CategoryUpdateOneWithoutSubCategoriesInput
  SubCategories: CategoryUpdateManyWithoutParentCategoryInput
}

input AddressCreateInput {
  id: String
  line1: String
  line2: String
  city: String
  province: String
  zip: String
  Country: CountryCreateNestedOneWithoutAddress_county_addressesInput
  Person: PersonCreateNestedOneWithoutAddressInput
  Wardrobes: WardrobeCreateNestedManyWithoutAddressInput
}

input AddressUpdateInput {
  id: StringFieldUpdateOperationsInput
  line1: NullableStringFieldUpdateOperationsInput
  line2: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  province: NullableStringFieldUpdateOperationsInput
  zip: NullableStringFieldUpdateOperationsInput
  Country: CountryUpdateOneWithoutAddress_county_addressesInput
  Person: PersonUpdateOneWithoutAddressInput
  Wardrobes: WardrobeUpdateManyWithoutAddressInput
}

input CountryCreateInput {
  id: String
  name: String!
  Address_county_addresses: AddressCreateNestedManyWithoutCountryInput
}

input AddressCreateNestedManyWithoutCountryInput {
  create: [AddressCreateWithoutCountryInput!]
  connectOrCreate: [AddressCreateOrConnectWithoutCountryInput!]
  createMany: AddressCreateManyCountryInputEnvelope
  connect: [AddressWhereUniqueInput!]
}

input AddressCreateWithoutCountryInput {
  id: String
  line1: String
  line2: String
  city: String
  province: String
  zip: String
  Person: PersonCreateNestedOneWithoutAddressInput
  Wardrobes: WardrobeCreateNestedManyWithoutAddressInput
}

input AddressCreateOrConnectWithoutCountryInput {
  where: AddressWhereUniqueInput!
  create: AddressCreateWithoutCountryInput!
}

input AddressCreateManyCountryInputEnvelope {
  data: [AddressCreateManyCountryInput!]!
  skipDuplicates: Boolean
}

input AddressCreateManyCountryInput {
  id: String
  line1: String
  line2: String
  city: String
  province: String
  zip: String
}

input CountryUpdateInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  Address_county_addresses: AddressUpdateManyWithoutCountryInput
}

input AddressUpdateManyWithoutCountryInput {
  create: [AddressCreateWithoutCountryInput!]
  connectOrCreate: [AddressCreateOrConnectWithoutCountryInput!]
  upsert: [AddressUpsertWithWhereUniqueWithoutCountryInput!]
  createMany: AddressCreateManyCountryInputEnvelope
  set: [AddressWhereUniqueInput!]
  disconnect: [AddressWhereUniqueInput!]
  delete: [AddressWhereUniqueInput!]
  connect: [AddressWhereUniqueInput!]
  update: [AddressUpdateWithWhereUniqueWithoutCountryInput!]
  updateMany: [AddressUpdateManyWithWhereWithoutCountryInput!]
  deleteMany: [AddressScalarWhereInput!]
}

input AddressUpsertWithWhereUniqueWithoutCountryInput {
  where: AddressWhereUniqueInput!
  update: AddressUpdateWithoutCountryInput!
  create: AddressCreateWithoutCountryInput!
}

input AddressUpdateWithoutCountryInput {
  id: StringFieldUpdateOperationsInput
  line1: NullableStringFieldUpdateOperationsInput
  line2: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  province: NullableStringFieldUpdateOperationsInput
  zip: NullableStringFieldUpdateOperationsInput
  Person: PersonUpdateOneWithoutAddressInput
  Wardrobes: WardrobeUpdateManyWithoutAddressInput
}

input AddressUpdateWithWhereUniqueWithoutCountryInput {
  where: AddressWhereUniqueInput!
  data: AddressUpdateWithoutCountryInput!
}

input AddressUpdateManyWithWhereWithoutCountryInput {
  where: AddressScalarWhereInput!
  data: AddressUpdateManyMutationInput!
}

input TelephoneCreateInput {
  id: String
  telephoneNumber: String
  Person_telephone_person: PersonCreateNestedOneWithoutTelephoneInput
}

input PersonCreateNestedOneWithoutTelephoneInput {
  create: PersonCreateWithoutTelephoneInput
  connectOrCreate: PersonCreateOrConnectWithoutTelephoneInput
  connect: PersonWhereUniqueInput
}

input PersonCreateWithoutTelephoneInput {
  id: String!
  email: String
  birthday: DateTime
  firstName: String
  lastName: String
  Gender: GenderCreateNestedOneWithoutProfile_gender_profilesInput
  ItemGenders: ItemGenderCreateNestedManyWithoutPerson_itemGender_personsInput
  History: HistoryCreateNestedOneWithoutUser_history_userInput
  Address: AddressCreateNestedManyWithoutPersonInput
  Picture: PictureCreateNestedOneWithoutPersonInput
  ClothSizes: ClothSizeCreateNestedManyWithoutPerson_clothSize_personsInput
  ClothStyles: ClothStyleCreateNestedManyWithoutPerson_clothStyle_personsInput
  Event_who_events: EventCreateNestedManyWithoutWhoInput
  Item_owner_items: ItemCreateNestedManyWithoutOwnerInput
  Channel: ChannelCreateNestedOneWithoutParticipantsInput
  TradePackage_wantedBy_tradePackages: TradePackageCreateNestedManyWithoutWantedByInput
  TradePackage_from_tradePackages: TradePackageCreateNestedManyWithoutFromInput
  Rating_person_ratings: RatingCreateNestedManyWithoutFromInput
}

input PersonCreateOrConnectWithoutTelephoneInput {
  where: PersonWhereUniqueInput!
  create: PersonCreateWithoutTelephoneInput!
}

input TelephoneUpdateInput {
  id: StringFieldUpdateOperationsInput
  telephoneNumber: NullableStringFieldUpdateOperationsInput
  Person_telephone_person: PersonUpdateOneWithoutTelephoneInput
}

input PersonUpdateOneWithoutTelephoneInput {
  create: PersonCreateWithoutTelephoneInput
  connectOrCreate: PersonCreateOrConnectWithoutTelephoneInput
  upsert: PersonUpsertWithoutTelephoneInput
  disconnect: Boolean
  delete: Boolean
  connect: PersonWhereUniqueInput
  update: PersonUpdateWithoutTelephoneInput
}

input PersonUpsertWithoutTelephoneInput {
  update: PersonUpdateWithoutTelephoneInput!
  create: PersonCreateWithoutTelephoneInput!
}

input PersonUpdateWithoutTelephoneInput {
  id: StringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  birthday: NullableDateTimeFieldUpdateOperationsInput
  firstName: NullableStringFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  Gender: GenderUpdateOneWithoutProfile_gender_profilesInput
  ItemGenders: ItemGenderUpdateManyWithoutPerson_itemGender_personsInput
  History: HistoryUpdateOneWithoutUser_history_userInput
  Address: AddressUpdateManyWithoutPersonInput
  Picture: PictureUpdateOneWithoutPersonInput
  ClothSizes: ClothSizeUpdateManyWithoutPerson_clothSize_personsInput
  ClothStyles: ClothStyleUpdateManyWithoutPerson_clothStyle_personsInput
  Event_who_events: EventUpdateManyWithoutWhoInput
  Item_owner_items: ItemUpdateManyWithoutOwnerInput
  Channel: ChannelUpdateOneWithoutParticipantsInput
  TradePackage_wantedBy_tradePackages: TradePackageUpdateManyWithoutWantedByInput
  TradePackage_from_tradePackages: TradePackageUpdateManyWithoutFromInput
  Rating_person_ratings: RatingUpdateManyWithoutFromInput
}

input ChannelCreateInput {
  id: String
  Participants: PersonCreateNestedManyWithoutChannelInput
}

input PersonCreateNestedManyWithoutChannelInput {
  create: [PersonCreateWithoutChannelInput!]
  connectOrCreate: [PersonCreateOrConnectWithoutChannelInput!]
  createMany: PersonCreateManyChannelInputEnvelope
  connect: [PersonWhereUniqueInput!]
}

input PersonCreateWithoutChannelInput {
  id: String!
  email: String
  birthday: DateTime
  firstName: String
  lastName: String
  Gender: GenderCreateNestedOneWithoutProfile_gender_profilesInput
  ItemGenders: ItemGenderCreateNestedManyWithoutPerson_itemGender_personsInput
  History: HistoryCreateNestedOneWithoutUser_history_userInput
  Telephone: TelephoneCreateNestedOneWithoutPerson_telephone_personInput
  Address: AddressCreateNestedManyWithoutPersonInput
  Picture: PictureCreateNestedOneWithoutPersonInput
  ClothSizes: ClothSizeCreateNestedManyWithoutPerson_clothSize_personsInput
  ClothStyles: ClothStyleCreateNestedManyWithoutPerson_clothStyle_personsInput
  Event_who_events: EventCreateNestedManyWithoutWhoInput
  Item_owner_items: ItemCreateNestedManyWithoutOwnerInput
  TradePackage_wantedBy_tradePackages: TradePackageCreateNestedManyWithoutWantedByInput
  TradePackage_from_tradePackages: TradePackageCreateNestedManyWithoutFromInput
  Rating_person_ratings: RatingCreateNestedManyWithoutFromInput
}

input PersonCreateOrConnectWithoutChannelInput {
  where: PersonWhereUniqueInput!
  create: PersonCreateWithoutChannelInput!
}

input PersonCreateManyChannelInputEnvelope {
  data: [PersonCreateManyChannelInput!]!
  skipDuplicates: Boolean
}

input PersonCreateManyChannelInput {
  id: String!
  email: String
  birthday: DateTime
  firstName: String
  lastName: String
  pictureId: String
}

input ChannelUpdateInput {
  id: StringFieldUpdateOperationsInput
  Participants: PersonUpdateManyWithoutChannelInput
}

input PersonUpdateManyWithoutChannelInput {
  create: [PersonCreateWithoutChannelInput!]
  connectOrCreate: [PersonCreateOrConnectWithoutChannelInput!]
  upsert: [PersonUpsertWithWhereUniqueWithoutChannelInput!]
  createMany: PersonCreateManyChannelInputEnvelope
  set: [PersonWhereUniqueInput!]
  disconnect: [PersonWhereUniqueInput!]
  delete: [PersonWhereUniqueInput!]
  connect: [PersonWhereUniqueInput!]
  update: [PersonUpdateWithWhereUniqueWithoutChannelInput!]
  updateMany: [PersonUpdateManyWithWhereWithoutChannelInput!]
  deleteMany: [PersonScalarWhereInput!]
}

input PersonUpsertWithWhereUniqueWithoutChannelInput {
  where: PersonWhereUniqueInput!
  update: PersonUpdateWithoutChannelInput!
  create: PersonCreateWithoutChannelInput!
}

input PersonUpdateWithoutChannelInput {
  id: StringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  birthday: NullableDateTimeFieldUpdateOperationsInput
  firstName: NullableStringFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  Gender: GenderUpdateOneWithoutProfile_gender_profilesInput
  ItemGenders: ItemGenderUpdateManyWithoutPerson_itemGender_personsInput
  History: HistoryUpdateOneWithoutUser_history_userInput
  Telephone: TelephoneUpdateOneWithoutPerson_telephone_personInput
  Address: AddressUpdateManyWithoutPersonInput
  Picture: PictureUpdateOneWithoutPersonInput
  ClothSizes: ClothSizeUpdateManyWithoutPerson_clothSize_personsInput
  ClothStyles: ClothStyleUpdateManyWithoutPerson_clothStyle_personsInput
  Event_who_events: EventUpdateManyWithoutWhoInput
  Item_owner_items: ItemUpdateManyWithoutOwnerInput
  TradePackage_wantedBy_tradePackages: TradePackageUpdateManyWithoutWantedByInput
  TradePackage_from_tradePackages: TradePackageUpdateManyWithoutFromInput
  Rating_person_ratings: RatingUpdateManyWithoutFromInput
}

input PersonUpdateWithWhereUniqueWithoutChannelInput {
  where: PersonWhereUniqueInput!
  data: PersonUpdateWithoutChannelInput!
}

input PersonUpdateManyWithWhereWithoutChannelInput {
  where: PersonScalarWhereInput!
  data: PersonUpdateManyMutationInput!
}

input GenderCreateInput {
  id: String
  name: String
  Profile_gender_profiles: PersonCreateNestedManyWithoutGenderInput
}

input PersonCreateNestedManyWithoutGenderInput {
  create: [PersonCreateWithoutGenderInput!]
  connectOrCreate: [PersonCreateOrConnectWithoutGenderInput!]
  createMany: PersonCreateManyGenderInputEnvelope
  connect: [PersonWhereUniqueInput!]
}

input PersonCreateWithoutGenderInput {
  id: String!
  email: String
  birthday: DateTime
  firstName: String
  lastName: String
  ItemGenders: ItemGenderCreateNestedManyWithoutPerson_itemGender_personsInput
  History: HistoryCreateNestedOneWithoutUser_history_userInput
  Telephone: TelephoneCreateNestedOneWithoutPerson_telephone_personInput
  Address: AddressCreateNestedManyWithoutPersonInput
  Picture: PictureCreateNestedOneWithoutPersonInput
  ClothSizes: ClothSizeCreateNestedManyWithoutPerson_clothSize_personsInput
  ClothStyles: ClothStyleCreateNestedManyWithoutPerson_clothStyle_personsInput
  Event_who_events: EventCreateNestedManyWithoutWhoInput
  Item_owner_items: ItemCreateNestedManyWithoutOwnerInput
  Channel: ChannelCreateNestedOneWithoutParticipantsInput
  TradePackage_wantedBy_tradePackages: TradePackageCreateNestedManyWithoutWantedByInput
  TradePackage_from_tradePackages: TradePackageCreateNestedManyWithoutFromInput
  Rating_person_ratings: RatingCreateNestedManyWithoutFromInput
}

input PersonCreateOrConnectWithoutGenderInput {
  where: PersonWhereUniqueInput!
  create: PersonCreateWithoutGenderInput!
}

input PersonCreateManyGenderInputEnvelope {
  data: [PersonCreateManyGenderInput!]!
  skipDuplicates: Boolean
}

input PersonCreateManyGenderInput {
  id: String!
  email: String
  birthday: DateTime
  firstName: String
  lastName: String
  pictureId: String
}

input GenderUpdateInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  Profile_gender_profiles: PersonUpdateManyWithoutGenderInput
}

input PersonUpdateManyWithoutGenderInput {
  create: [PersonCreateWithoutGenderInput!]
  connectOrCreate: [PersonCreateOrConnectWithoutGenderInput!]
  upsert: [PersonUpsertWithWhereUniqueWithoutGenderInput!]
  createMany: PersonCreateManyGenderInputEnvelope
  set: [PersonWhereUniqueInput!]
  disconnect: [PersonWhereUniqueInput!]
  delete: [PersonWhereUniqueInput!]
  connect: [PersonWhereUniqueInput!]
  update: [PersonUpdateWithWhereUniqueWithoutGenderInput!]
  updateMany: [PersonUpdateManyWithWhereWithoutGenderInput!]
  deleteMany: [PersonScalarWhereInput!]
}

input PersonUpsertWithWhereUniqueWithoutGenderInput {
  where: PersonWhereUniqueInput!
  update: PersonUpdateWithoutGenderInput!
  create: PersonCreateWithoutGenderInput!
}

input PersonUpdateWithoutGenderInput {
  id: StringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  birthday: NullableDateTimeFieldUpdateOperationsInput
  firstName: NullableStringFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  ItemGenders: ItemGenderUpdateManyWithoutPerson_itemGender_personsInput
  History: HistoryUpdateOneWithoutUser_history_userInput
  Telephone: TelephoneUpdateOneWithoutPerson_telephone_personInput
  Address: AddressUpdateManyWithoutPersonInput
  Picture: PictureUpdateOneWithoutPersonInput
  ClothSizes: ClothSizeUpdateManyWithoutPerson_clothSize_personsInput
  ClothStyles: ClothStyleUpdateManyWithoutPerson_clothStyle_personsInput
  Event_who_events: EventUpdateManyWithoutWhoInput
  Item_owner_items: ItemUpdateManyWithoutOwnerInput
  Channel: ChannelUpdateOneWithoutParticipantsInput
  TradePackage_wantedBy_tradePackages: TradePackageUpdateManyWithoutWantedByInput
  TradePackage_from_tradePackages: TradePackageUpdateManyWithoutFromInput
  Rating_person_ratings: RatingUpdateManyWithoutFromInput
}

input PersonUpdateWithWhereUniqueWithoutGenderInput {
  where: PersonWhereUniqueInput!
  data: PersonUpdateWithoutGenderInput!
}

input PersonUpdateManyWithWhereWithoutGenderInput {
  where: PersonScalarWhereInput!
  data: PersonUpdateManyMutationInput!
}

input DurationCreateInput {
  id: String
  seconds: Int
  minutes: Int
  hours: Int
  days: Int
  weeks: Int
  months: Int
  years: Int
  SubscriptionPlan_duration_subscriptionPlan: SubscriptionPlanCreateNestedOneWithoutStandardDurationInput
}

input SubscriptionPlanCreateNestedOneWithoutStandardDurationInput {
  create: SubscriptionPlanCreateWithoutStandardDurationInput
  connectOrCreate: SubscriptionPlanCreateOrConnectWithoutStandardDurationInput
  connect: SubscriptionPlanWhereUniqueInput
}

input SubscriptionPlanCreateWithoutStandardDurationInput {
  id: String
  name: String
  StandardPrice: MoneyCreateNestedOneWithoutSubscriptionPlan_money_subscriptionPlansInput
  Subscription_subscriptionType_subscription: SubscriptionCreateNestedManyWithoutTypeInput
}

input SubscriptionPlanCreateOrConnectWithoutStandardDurationInput {
  where: SubscriptionPlanWhereUniqueInput!
  create: SubscriptionPlanCreateWithoutStandardDurationInput!
}

input DurationUpdateInput {
  id: StringFieldUpdateOperationsInput
  seconds: NullableIntFieldUpdateOperationsInput
  minutes: NullableIntFieldUpdateOperationsInput
  hours: NullableIntFieldUpdateOperationsInput
  days: NullableIntFieldUpdateOperationsInput
  weeks: NullableIntFieldUpdateOperationsInput
  months: NullableIntFieldUpdateOperationsInput
  years: NullableIntFieldUpdateOperationsInput
  SubscriptionPlan_duration_subscriptionPlan: SubscriptionPlanUpdateOneWithoutStandardDurationInput
}

input SubscriptionPlanUpdateOneWithoutStandardDurationInput {
  create: SubscriptionPlanCreateWithoutStandardDurationInput
  connectOrCreate: SubscriptionPlanCreateOrConnectWithoutStandardDurationInput
  upsert: SubscriptionPlanUpsertWithoutStandardDurationInput
  disconnect: Boolean
  delete: Boolean
  connect: SubscriptionPlanWhereUniqueInput
  update: SubscriptionPlanUpdateWithoutStandardDurationInput
}

input SubscriptionPlanUpsertWithoutStandardDurationInput {
  update: SubscriptionPlanUpdateWithoutStandardDurationInput!
  create: SubscriptionPlanCreateWithoutStandardDurationInput!
}

input SubscriptionPlanUpdateWithoutStandardDurationInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  StandardPrice: MoneyUpdateOneWithoutSubscriptionPlan_money_subscriptionPlansInput
  Subscription_subscriptionType_subscription: SubscriptionUpdateManyWithoutTypeInput
}

input TimespanCreateInput {
  id: String
  start: DateTime
  end: DateTime
  Booster_timespan_booster: BoosterCreateNestedOneWithoutTimespanInput
  Subscription_timespan_subscription: SubscriptionCreateNestedOneWithoutTimespanInput
}

input TimespanUpdateInput {
  id: StringFieldUpdateOperationsInput
  start: NullableDateTimeFieldUpdateOperationsInput
  end: NullableDateTimeFieldUpdateOperationsInput
  Booster_timespan_booster: BoosterUpdateOneWithoutTimespanInput
  Subscription_timespan_subscription: SubscriptionUpdateOneWithoutTimespanInput
}

input HistoryCreateInput {
  id: String
  Created: EventCreateNestedOneWithoutHistory_created_historyInput
  Updated: EventCreateNestedManyWithoutHistory_updated_historyInput
  Deleted: EventCreateNestedOneWithoutHistory_deleted_historyInput
  User_history_user: PersonCreateNestedOneWithoutHistoryInput
  Money_history_money: MoneyCreateNestedOneWithoutHistoryInput
  Cloth_history_cloth: ClothCreateNestedOneWithoutHistoryInput
}

input HistoryUpdateInput {
  id: StringFieldUpdateOperationsInput
  Created: EventUpdateOneWithoutHistory_created_historyInput
  Updated: EventUpdateManyWithoutHistory_updated_historyInput
  Deleted: EventUpdateOneWithoutHistory_deleted_historyInput
  User_history_user: PersonUpdateOneWithoutHistoryInput
  Money_history_money: MoneyUpdateOneWithoutHistoryInput
  Cloth_history_cloth: ClothUpdateOneWithoutHistoryInput
}

input EventCreateInput {
  id: String
  when: DateTime
  what: String!
  from: JSON
  to: JSON
  Who: PersonCreateNestedOneWithoutEvent_who_eventsInput
  History_created_history: HistoryCreateNestedOneWithoutCreatedInput
  History_updated_history: HistoryCreateNestedOneWithoutUpdatedInput
  History_deleted_history: HistoryCreateNestedOneWithoutDeletedInput
}

input EventUpdateInput {
  id: StringFieldUpdateOperationsInput
  when: DateTimeFieldUpdateOperationsInput
  what: StringFieldUpdateOperationsInput
  from: JSON
  to: JSON
  Who: PersonUpdateOneWithoutEvent_who_eventsInput
  History_created_history: HistoryUpdateOneWithoutCreatedInput
  History_updated_history: HistoryUpdateOneWithoutUpdatedInput
  History_deleted_history: HistoryUpdateOneWithoutDeletedInput
}
