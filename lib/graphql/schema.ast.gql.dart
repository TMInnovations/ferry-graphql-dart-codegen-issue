// GENERATED CODE - DO NOT MODIFY BY HAND

import 'package:gql/ast.dart' as _i1;

const AddressCountAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'AddressCountAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'line1'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'line2'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'city'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'province'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'zip'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'countryId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'personId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: '_all'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true))
    ]);
const AddressCount = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'AddressCount'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Wardrobes'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true))
    ]);
const AddressMaxAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'AddressMaxAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'line1'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'line2'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'city'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'province'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'zip'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'countryId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'personId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const AddressMinAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'AddressMinAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'line1'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'line2'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'city'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'province'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'zip'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'countryId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'personId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const Address = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'Address'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ID'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'line1'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'line2'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'city'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'province'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'zip'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Country'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Country'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'countryId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Person'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Person'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'personId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Wardrobes'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'WardrobeWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'WardrobeOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'WardrobeWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'WardrobeScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Wardrobe'), isNonNull: true),
              isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: '_count'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressCount'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Wardrobe_address_wardrobes'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'WardrobeWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'WardrobeOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'WardrobeWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'WardrobeScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Wardrobe'), isNonNull: true),
              isNonNull: true))
    ]);
const WardrobeWhereInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'WardrobeWhereInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'AND'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'WardrobeWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'OR'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'WardrobeWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'NOT'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'WardrobeWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringNullableFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Address'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloths'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothListRelationFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const StringFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'StringFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'equals'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'in'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'String'), isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'notIn'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'String'), isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lt'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lte'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'gt'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'gte'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'contains'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'startsWith'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'endsWith'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'mode'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'QueryMode'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'not'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'NestedStringFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const QueryMode = _i1.EnumTypeDefinitionNode(
    name: _i1.NameNode(value: 'QueryMode'),
    directives: [],
    values: [
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'default'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'insensitive'), directives: [])
    ]);
const NestedStringFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'NestedStringFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'equals'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'in'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'String'), isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'notIn'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'String'), isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lt'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lte'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'gt'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'gte'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'contains'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'startsWith'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'endsWith'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'not'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'NestedStringFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const StringNullableFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'StringNullableFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'equals'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'in'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'String'), isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'notIn'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'String'), isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lt'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lte'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'gt'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'gte'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'contains'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'startsWith'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'endsWith'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'mode'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'QueryMode'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'not'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'NestedStringNullableFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const NestedStringNullableFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'NestedStringNullableFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'equals'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'in'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'String'), isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'notIn'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'String'), isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lt'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lte'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'gt'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'gte'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'contains'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'startsWith'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'endsWith'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'not'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'NestedStringNullableFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const AddressRelationFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'AddressRelationFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'is'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressWhereInput'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'isNot'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressWhereInput'), isNonNull: false),
          defaultValue: null)
    ]);
const AddressWhereInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'AddressWhereInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'AND'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'AddressWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'OR'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'AddressWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'NOT'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'AddressWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'line1'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringNullableFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'line2'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringNullableFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'city'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringNullableFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'province'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringNullableFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'zip'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringNullableFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Country'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'CountryRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Person'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Wardrobes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'WardrobeListRelationFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const CountryRelationFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'CountryRelationFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'is'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'CountryWhereInput'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'isNot'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'CountryWhereInput'), isNonNull: false),
          defaultValue: null)
    ]);
const CountryWhereInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'CountryWhereInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'AND'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'CountryWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'OR'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'CountryWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'NOT'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'CountryWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Address_county_addresses'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressListRelationFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const AddressListRelationFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'AddressListRelationFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'every'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressWhereInput'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'some'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressWhereInput'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'none'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressWhereInput'), isNonNull: false),
          defaultValue: null)
    ]);
const PersonRelationFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PersonRelationFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'is'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonWhereInput'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'isNot'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonWhereInput'), isNonNull: false),
          defaultValue: null)
    ]);
const PersonWhereInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PersonWhereInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'AND'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PersonWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'OR'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PersonWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'NOT'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PersonWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'email'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringNullableFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'birthday'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTimeNullableFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'firstName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringNullableFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lastName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringNullableFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Gender'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'GenderRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemGenderListRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Telephone'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TelephoneRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Address'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressListRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Picture'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'pictureId'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringNullableFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothSizeListRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothStyles'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothStyleListRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Event_who_events'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventListRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_owner_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemListRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Channel'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ChannelRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_wantedBy_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TradePackageListRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_from_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TradePackageListRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Rating_person_ratings'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'RatingListRelationFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const DateTimeNullableFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'DateTimeNullableFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'equals'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'in'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'DateTime'), isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'notIn'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'DateTime'), isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lt'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lte'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'gt'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'gte'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'not'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'NestedDateTimeNullableFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const DateTime = _i1.ScalarTypeDefinitionNode(
    name: _i1.NameNode(value: 'DateTime'), directives: []);
const NestedDateTimeNullableFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'NestedDateTimeNullableFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'equals'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'in'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'DateTime'), isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'notIn'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'DateTime'), isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lt'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lte'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'gt'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'gte'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'not'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'NestedDateTimeNullableFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const GenderRelationFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'GenderRelationFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'is'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'GenderWhereInput'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'isNot'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'GenderWhereInput'), isNonNull: false),
          defaultValue: null)
    ]);
const GenderWhereInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'GenderWhereInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'AND'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'GenderWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'OR'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'GenderWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'NOT'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'GenderWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringNullableFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Profile_gender_profiles'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonListRelationFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonListRelationFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PersonListRelationFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'every'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonWhereInput'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'some'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonWhereInput'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'none'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonWhereInput'), isNonNull: false),
          defaultValue: null)
    ]);
const ItemGenderListRelationFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemGenderListRelationFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'every'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemGenderWhereInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'some'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemGenderWhereInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'none'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemGenderWhereInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemGenderWhereInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemGenderWhereInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'AND'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemGenderWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'OR'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemGenderWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'NOT'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemGenderWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringNullableFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'IntNullableFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Items_itemGender_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemListRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Person_itemGender_persons'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonListRelationFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const IntNullableFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'IntNullableFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'equals'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'in'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Int'), isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'notIn'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Int'), isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lt'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lte'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'gt'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'gte'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'not'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'NestedIntNullableFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const NestedIntNullableFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'NestedIntNullableFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'equals'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'in'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Int'), isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'notIn'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Int'), isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lt'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lte'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'gt'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'gte'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'not'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'NestedIntNullableFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemListRelationFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemListRelationFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'every'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemWhereInput'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'some'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemWhereInput'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'none'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemWhereInput'), isNonNull: false),
          defaultValue: null)
    ]);
const ItemWhereInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemWhereInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'AND'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemWhereInput'), isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'OR'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemWhereInput'), isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'NOT'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemWhereInput'), isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'active'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'BoolNullableFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'description'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringNullableFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Category'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'CategoryRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Value'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'MoneyRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Colors'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ColorListRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemGenderListRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Pictures'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureListRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Condition'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ConditionRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Owner'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Booster'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'BoosterListRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_item_cloth'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_item_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TradePackageListRelationFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const BoolNullableFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'BoolNullableFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'equals'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'not'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'NestedBoolNullableFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const NestedBoolNullableFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'NestedBoolNullableFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'equals'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'not'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'NestedBoolNullableFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const CategoryRelationFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'CategoryRelationFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'is'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'CategoryWhereInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'isNot'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'CategoryWhereInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const CategoryWhereInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'CategoryWhereInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'AND'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'CategoryWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'OR'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'CategoryWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'NOT'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'CategoryWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringNullableFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothSizeListRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Brand_category_brands'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'BrandListRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_category_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemListRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ParentCategory'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'CategoryRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'SubCategories'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'CategoryListRelationFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothSizeListRelationFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothSizeListRelationFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'every'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothSizeWhereInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'some'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothSizeWhereInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'none'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothSizeWhereInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothSizeWhereInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothSizeWhereInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'AND'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothSizeWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'OR'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothSizeWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'NOT'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothSizeWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringNullableFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'IntNullableFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'SizeModel'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EnumSizeModelNullableFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Categories'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'CategoryListRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_clothSize_cloth'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothListRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Person_clothSize_persons'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonListRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ComparableTo'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothSizeListRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSize'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothSizeListRelationFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const EnumSizeModelNullableFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'EnumSizeModelNullableFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'equals'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SizeModel'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'in'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'SizeModel'), isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'notIn'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'SizeModel'), isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'not'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'NestedEnumSizeModelNullableFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const SizeModel = _i1.EnumTypeDefinitionNode(
    name: _i1.NameNode(value: 'SizeModel'),
    directives: [],
    values: [
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'GERMAN'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'FRANCE'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'BRITTAIN'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'USA'), directives: [])
    ]);
const NestedEnumSizeModelNullableFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'NestedEnumSizeModelNullableFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'equals'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SizeModel'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'in'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'SizeModel'), isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'notIn'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'SizeModel'), isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'not'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'NestedEnumSizeModelNullableFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const CategoryListRelationFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'CategoryListRelationFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'every'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'CategoryWhereInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'some'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'CategoryWhereInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'none'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'CategoryWhereInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothListRelationFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothListRelationFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'every'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothWhereInput'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'some'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothWhereInput'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'none'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothWhereInput'), isNonNull: false),
          defaultValue: null)
    ]);
const ClothWhereInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothWhereInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'AND'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'OR'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'NOT'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'code'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringNullableFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Material'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'MaterialRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothSizeListRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothStyles'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothStyleListRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Wardrobe'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'WardrobeRelationFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const MaterialRelationFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'MaterialRelationFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'is'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'MaterialWhereInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'isNot'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'MaterialWhereInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const MaterialWhereInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'MaterialWhereInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'AND'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'MaterialWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'OR'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'MaterialWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'NOT'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'MaterialWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringNullableFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_material_cloths'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothListRelationFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemRelationFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemRelationFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'is'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemWhereInput'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'isNot'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemWhereInput'), isNonNull: false),
          defaultValue: null)
    ]);
const ClothStyleListRelationFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothStyleListRelationFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'every'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothStyleWhereInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'some'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothStyleWhereInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'none'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothStyleWhereInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothStyleWhereInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothStyleWhereInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'AND'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothStyleWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'OR'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothStyleWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'NOT'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothStyleWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringNullableFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_clothStyle_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothListRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Person_clothStyle_persons'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonListRelationFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const HistoryRelationFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'HistoryRelationFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'is'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryWhereInput'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'isNot'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryWhereInput'), isNonNull: false),
          defaultValue: null)
    ]);
const HistoryWhereInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'HistoryWhereInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'AND'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'HistoryWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'OR'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'HistoryWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'NOT'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'HistoryWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Created'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Updated'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventListRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Deleted'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'User_history_user'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Money_history_money'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'MoneyRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_history_cloth'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothRelationFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const EventRelationFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'EventRelationFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'is'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventWhereInput'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'isNot'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventWhereInput'), isNonNull: false),
          defaultValue: null)
    ]);
const EventWhereInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'EventWhereInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'AND'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'EventWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'OR'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'EventWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'NOT'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'EventWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'when'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTimeFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'what'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'from'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'JsonNullableFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'to'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'JsonNullableFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Who'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History_created_history'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History_updated_history'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History_deleted_history'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryRelationFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const DateTimeFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'DateTimeFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'equals'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'in'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'DateTime'), isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'notIn'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'DateTime'), isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lt'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lte'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'gt'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'gte'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'not'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'NestedDateTimeFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const NestedDateTimeFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'NestedDateTimeFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'equals'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'in'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'DateTime'), isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'notIn'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'DateTime'), isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lt'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lte'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'gt'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'gte'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'not'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'NestedDateTimeFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const JsonNullableFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'JsonNullableFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'equals'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'JSON'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'not'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'JSON'), isNonNull: false),
          defaultValue: null)
    ]);
const JSON = _i1.ScalarTypeDefinitionNode(
    name: _i1.NameNode(value: 'JSON'), directives: []);
const EventListRelationFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'EventListRelationFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'every'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventWhereInput'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'some'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventWhereInput'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'none'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventWhereInput'), isNonNull: false),
          defaultValue: null)
    ]);
const MoneyRelationFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'MoneyRelationFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'is'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'MoneyWhereInput'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'isNot'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'MoneyWhereInput'), isNonNull: false),
          defaultValue: null)
    ]);
const MoneyWhereInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'MoneyWhereInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'AND'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'MoneyWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'OR'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'MoneyWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'NOT'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'MoneyWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'value'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'FloatNullableFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Currency'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EnumCurrencyNullableFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_value_item'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'SubscriptionPlan_money_subscriptionPlans'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SubscriptionPlanRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Subscription_money_subscription'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SubscriptionRelationFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const FloatNullableFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'FloatNullableFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'equals'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Float'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'in'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Float'), isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'notIn'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Float'), isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lt'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Float'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lte'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Float'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'gt'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Float'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'gte'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Float'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'not'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'NestedFloatNullableFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const NestedFloatNullableFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'NestedFloatNullableFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'equals'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Float'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'in'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Float'), isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'notIn'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Float'), isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lt'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Float'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lte'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Float'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'gt'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Float'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'gte'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Float'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'not'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'NestedFloatNullableFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const EnumCurrencyNullableFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'EnumCurrencyNullableFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'equals'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Currency'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'in'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Currency'), isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'notIn'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Currency'), isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'not'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'NestedEnumCurrencyNullableFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const Currency = _i1.EnumTypeDefinitionNode(
    name: _i1.NameNode(value: 'Currency'),
    directives: [],
    values: [
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'EUR'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'USD'), directives: [])
    ]);
const NestedEnumCurrencyNullableFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'NestedEnumCurrencyNullableFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'equals'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Currency'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'in'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Currency'), isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'notIn'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Currency'), isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'not'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'NestedEnumCurrencyNullableFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const SubscriptionPlanRelationFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'SubscriptionPlanRelationFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'is'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SubscriptionPlanWhereInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'isNot'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SubscriptionPlanWhereInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const SubscriptionPlanWhereInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'SubscriptionPlanWhereInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'AND'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'SubscriptionPlanWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'OR'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'SubscriptionPlanWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'NOT'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'SubscriptionPlanWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringNullableFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'StandardDuration'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DurationRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'StandardPrice'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'MoneyRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name:
              _i1.NameNode(value: 'Subscription_subscriptionType_subscription'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SubscriptionListRelationFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const DurationRelationFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'DurationRelationFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'is'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DurationWhereInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'isNot'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DurationWhereInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const DurationWhereInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'DurationWhereInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'AND'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'DurationWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'OR'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'DurationWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'NOT'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'DurationWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'seconds'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'IntNullableFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'minutes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'IntNullableFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'hours'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'IntNullableFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'days'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'IntNullableFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'weeks'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'IntNullableFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'months'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'IntNullableFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'years'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'IntNullableFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name:
              _i1.NameNode(value: 'SubscriptionPlan_duration_subscriptionPlan'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SubscriptionPlanRelationFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const SubscriptionListRelationFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'SubscriptionListRelationFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'every'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SubscriptionWhereInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'some'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SubscriptionWhereInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'none'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SubscriptionWhereInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const SubscriptionWhereInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'SubscriptionWhereInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'AND'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'SubscriptionWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'OR'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'SubscriptionWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'NOT'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'SubscriptionWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Price'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'MoneyRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Timespan'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TimespanRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Type'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SubscriptionPlanRelationFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const TimespanRelationFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'TimespanRelationFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'is'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TimespanWhereInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'isNot'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TimespanWhereInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const TimespanWhereInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'TimespanWhereInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'AND'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'TimespanWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'OR'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'TimespanWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'NOT'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'TimespanWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'start'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTimeNullableFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'end'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTimeNullableFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Booster_timespan_booster'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'BoosterRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Subscription_timespan_subscription'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SubscriptionRelationFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const BoosterRelationFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'BoosterRelationFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'is'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'BoosterWhereInput'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'isNot'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'BoosterWhereInput'), isNonNull: false),
          defaultValue: null)
    ]);
const BoosterWhereInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'BoosterWhereInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'AND'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'BoosterWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'OR'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'BoosterWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'NOT'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'BoosterWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Timespan'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TimespanRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TimespanId'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringNullableFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_booster_item'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemRelationFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const SubscriptionRelationFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'SubscriptionRelationFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'is'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SubscriptionWhereInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'isNot'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SubscriptionWhereInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothRelationFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothRelationFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'is'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothWhereInput'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'isNot'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothWhereInput'), isNonNull: false),
          defaultValue: null)
    ]);
const WardrobeRelationFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'WardrobeRelationFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'is'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'WardrobeWhereInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'isNot'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'WardrobeWhereInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const BrandListRelationFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'BrandListRelationFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'every'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'BrandWhereInput'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'some'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'BrandWhereInput'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'none'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'BrandWhereInput'), isNonNull: false),
          defaultValue: null)
    ]);
const BrandWhereInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'BrandWhereInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'AND'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'BrandWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'OR'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'BrandWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'NOT'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'BrandWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringNullableFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Categories'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'CategoryListRelationFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ColorListRelationFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ColorListRelationFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'every'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ColorWhereInput'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'some'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ColorWhereInput'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'none'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ColorWhereInput'), isNonNull: false),
          defaultValue: null)
    ]);
const ColorWhereInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ColorWhereInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'AND'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ColorWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'OR'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ColorWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'NOT'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ColorWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringNullableFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Type'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EnumColorTypeNullableFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_color_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemListRelationFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const EnumColorTypeNullableFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'EnumColorTypeNullableFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'equals'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ColorType'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'in'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ColorType'), isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'notIn'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ColorType'), isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'not'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'NestedEnumColorTypeNullableFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ColorType = _i1.EnumTypeDefinitionNode(
    name: _i1.NameNode(value: 'ColorType'),
    directives: [],
    values: [
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'MATT'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'SHINY'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'SPARKLING'), directives: [])
    ]);
const NestedEnumColorTypeNullableFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'NestedEnumColorTypeNullableFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'equals'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ColorType'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'in'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ColorType'), isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'notIn'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ColorType'), isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'not'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'NestedEnumColorTypeNullableFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PictureListRelationFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PictureListRelationFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'every'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureWhereInput'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'some'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureWhereInput'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'none'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureWhereInput'), isNonNull: false),
          defaultValue: null)
    ]);
const PictureWhereInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PictureWhereInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'AND'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PictureWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'OR'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PictureWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'NOT'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PictureWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'IntNullableFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'LQ'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'FileRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'MQ'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'FileRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'HQ'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'FileRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Person'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_picture_item'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemRelationFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const FileRelationFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'FileRelationFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'is'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'FileWhereInput'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'isNot'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'FileWhereInput'), isNonNull: false),
          defaultValue: null)
    ]);
const FileWhereInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'FileWhereInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'AND'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'FileWhereInput'), isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'OR'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'FileWhereInput'), isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'NOT'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'FileWhereInput'), isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'extension'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringNullableFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'File_lqPictureFile_file'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'File_mqPictureFile_file'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'File_hqPictureFile_file'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureRelationFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PictureRelationFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PictureRelationFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'is'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureWhereInput'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'isNot'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureWhereInput'), isNonNull: false),
          defaultValue: null)
    ]);
const ConditionRelationFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ConditionRelationFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'is'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ConditionWhereInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'isNot'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ConditionWhereInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ConditionWhereInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ConditionWhereInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'AND'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ConditionWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'OR'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ConditionWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'NOT'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ConditionWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_condition_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemListRelationFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const BoosterListRelationFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'BoosterListRelationFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'every'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'BoosterWhereInput'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'some'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'BoosterWhereInput'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'none'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'BoosterWhereInput'), isNonNull: false),
          defaultValue: null)
    ]);
const TradePackageListRelationFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'TradePackageListRelationFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'every'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TradePackageWhereInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'some'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TradePackageWhereInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'none'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TradePackageWhereInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const TradePackageWhereInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'TradePackageWhereInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'AND'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'TradePackageWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'OR'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'TradePackageWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'NOT'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'TradePackageWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'WantedBy'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonListRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'From'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemListRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Offer_tradePackage_offers'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'OfferListRelationFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const OfferListRelationFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'OfferListRelationFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'every'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'OfferWhereInput'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'some'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'OfferWhereInput'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'none'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'OfferWhereInput'), isNonNull: false),
          defaultValue: null)
    ]);
const OfferWhereInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'OfferWhereInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'AND'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'OfferWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'OR'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'OfferWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'NOT'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'OfferWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TradePackageListRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Contract'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ContractRelationFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ContractRelationFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ContractRelationFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'is'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ContractWhereInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'isNot'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ContractWhereInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ContractWhereInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ContractWhereInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'AND'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ContractWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'OR'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ContractWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'NOT'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ContractWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Offer'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'OfferRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Rating'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'RatingListRelationFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const OfferRelationFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'OfferRelationFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'is'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'OfferWhereInput'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'isNot'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'OfferWhereInput'), isNonNull: false),
          defaultValue: null)
    ]);
const RatingListRelationFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'RatingListRelationFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'every'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'RatingWhereInput'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'some'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'RatingWhereInput'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'none'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'RatingWhereInput'), isNonNull: false),
          defaultValue: null)
    ]);
const RatingWhereInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'RatingWhereInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'AND'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'RatingWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'OR'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'RatingWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'NOT'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'RatingWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'amount'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'IntNullableFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Contract'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ContractRelationFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'From'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonRelationFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const TelephoneRelationFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'TelephoneRelationFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'is'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TelephoneWhereInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'isNot'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TelephoneWhereInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const TelephoneWhereInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'TelephoneWhereInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'AND'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'TelephoneWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'OR'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'TelephoneWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'NOT'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'TelephoneWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'telephoneNumber'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringNullableFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Person_telephone_person'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonRelationFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ChannelRelationFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ChannelRelationFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'is'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ChannelWhereInput'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'isNot'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ChannelWhereInput'), isNonNull: false),
          defaultValue: null)
    ]);
const ChannelWhereInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ChannelWhereInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'AND'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ChannelWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'OR'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ChannelWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'NOT'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ChannelWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Participants'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonListRelationFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const WardrobeListRelationFilter = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'WardrobeListRelationFilter'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'every'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'WardrobeWhereInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'some'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'WardrobeWhereInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'none'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'WardrobeWhereInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const WardrobeOrderByWithRelationInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'WardrobeOrderByWithRelationInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Address'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressOrderByWithRelationInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloths'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothOrderByRelationAggregateInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const SortOrder = _i1.EnumTypeDefinitionNode(
    name: _i1.NameNode(value: 'SortOrder'),
    directives: [],
    values: [
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'asc'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'desc'), directives: [])
    ]);
const AddressOrderByWithRelationInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'AddressOrderByWithRelationInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'line1'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'line2'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'city'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'province'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'zip'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Country'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'CountryOrderByWithRelationInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Person'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonOrderByWithRelationInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Wardrobes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'WardrobeOrderByRelationAggregateInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const CountryOrderByWithRelationInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'CountryOrderByWithRelationInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Address_county_addresses'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressOrderByRelationAggregateInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const AddressOrderByRelationAggregateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'AddressOrderByRelationAggregateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: '_count'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null)
    ]);
const PersonOrderByWithRelationInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PersonOrderByWithRelationInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'email'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'birthday'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'firstName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lastName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Gender'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'GenderOrderByWithRelationInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ItemGenderOrderByRelationAggregateInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryOrderByWithRelationInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Telephone'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TelephoneOrderByWithRelationInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Address'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressOrderByRelationAggregateInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Picture'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureOrderByWithRelationInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'pictureId'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'ClothSizeOrderByRelationAggregateInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothStyles'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothStyleOrderByRelationAggregateInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Event_who_events'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventOrderByRelationAggregateInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_owner_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemOrderByRelationAggregateInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Channel'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ChannelOrderByWithRelationInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_wantedBy_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageOrderByRelationAggregateInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_from_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageOrderByRelationAggregateInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Rating_person_ratings'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'RatingOrderByRelationAggregateInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const GenderOrderByWithRelationInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'GenderOrderByWithRelationInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Profile_gender_profiles'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonOrderByRelationAggregateInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonOrderByRelationAggregateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PersonOrderByRelationAggregateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: '_count'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null)
    ]);
const ItemGenderOrderByRelationAggregateInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'ItemGenderOrderByRelationAggregateInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: '_count'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null)
    ]);
const HistoryOrderByWithRelationInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'HistoryOrderByWithRelationInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Created'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventOrderByWithRelationInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Updated'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventOrderByRelationAggregateInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Deleted'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventOrderByWithRelationInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'User_history_user'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonOrderByWithRelationInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Money_history_money'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'MoneyOrderByWithRelationInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_history_cloth'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothOrderByWithRelationInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const EventOrderByWithRelationInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'EventOrderByWithRelationInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'when'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'what'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'from'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'to'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Who'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonOrderByWithRelationInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History_created_history'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryOrderByWithRelationInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History_updated_history'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryOrderByWithRelationInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History_deleted_history'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryOrderByWithRelationInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const EventOrderByRelationAggregateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'EventOrderByRelationAggregateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: '_count'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null)
    ]);
const MoneyOrderByWithRelationInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'MoneyOrderByWithRelationInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'value'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Currency'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryOrderByWithRelationInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_value_item'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemOrderByWithRelationInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'SubscriptionPlan_money_subscriptionPlans'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'SubscriptionPlanOrderByWithRelationInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Subscription_money_subscription'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SubscriptionOrderByWithRelationInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemOrderByWithRelationInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemOrderByWithRelationInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'active'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'description'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Category'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'CategoryOrderByWithRelationInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Value'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'MoneyOrderByWithRelationInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Colors'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ColorOrderByRelationAggregateInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ItemGenderOrderByRelationAggregateInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Pictures'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureOrderByRelationAggregateInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Condition'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ConditionOrderByWithRelationInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Owner'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonOrderByWithRelationInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Booster'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'BoosterOrderByRelationAggregateInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_item_cloth'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothOrderByWithRelationInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_item_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageOrderByRelationAggregateInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const CategoryOrderByWithRelationInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'CategoryOrderByWithRelationInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'ClothSizeOrderByRelationAggregateInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Brand_category_brands'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'BrandOrderByRelationAggregateInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_category_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemOrderByRelationAggregateInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ParentCategory'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'CategoryOrderByWithRelationInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'SubCategories'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'CategoryOrderByRelationAggregateInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothSizeOrderByRelationAggregateInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'ClothSizeOrderByRelationAggregateInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: '_count'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null)
    ]);
const BrandOrderByRelationAggregateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'BrandOrderByRelationAggregateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: '_count'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null)
    ]);
const ItemOrderByRelationAggregateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemOrderByRelationAggregateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: '_count'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null)
    ]);
const CategoryOrderByRelationAggregateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'CategoryOrderByRelationAggregateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: '_count'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null)
    ]);
const ColorOrderByRelationAggregateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ColorOrderByRelationAggregateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: '_count'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null)
    ]);
const PictureOrderByRelationAggregateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PictureOrderByRelationAggregateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: '_count'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null)
    ]);
const ConditionOrderByWithRelationInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ConditionOrderByWithRelationInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_condition_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemOrderByRelationAggregateInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const BoosterOrderByRelationAggregateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'BoosterOrderByRelationAggregateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: '_count'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null)
    ]);
const ClothOrderByWithRelationInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothOrderByWithRelationInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'code'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Material'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'MaterialOrderByWithRelationInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemOrderByWithRelationInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'ClothSizeOrderByRelationAggregateInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothStyles'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothStyleOrderByRelationAggregateInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryOrderByWithRelationInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Wardrobe'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'WardrobeOrderByWithRelationInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const MaterialOrderByWithRelationInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'MaterialOrderByWithRelationInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_material_cloths'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothOrderByRelationAggregateInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothOrderByRelationAggregateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothOrderByRelationAggregateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: '_count'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null)
    ]);
const ClothStyleOrderByRelationAggregateInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'ClothStyleOrderByRelationAggregateInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: '_count'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null)
    ]);
const TradePackageOrderByRelationAggregateInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'TradePackageOrderByRelationAggregateInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: '_count'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null)
    ]);
const SubscriptionPlanOrderByWithRelationInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'SubscriptionPlanOrderByWithRelationInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'StandardDuration'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DurationOrderByWithRelationInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'StandardPrice'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'MoneyOrderByWithRelationInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name:
              _i1.NameNode(value: 'Subscription_subscriptionType_subscription'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'SubscriptionOrderByRelationAggregateInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const DurationOrderByWithRelationInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'DurationOrderByWithRelationInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'seconds'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'minutes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'hours'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'days'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'weeks'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'months'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'years'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name:
              _i1.NameNode(value: 'SubscriptionPlan_duration_subscriptionPlan'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'SubscriptionPlanOrderByWithRelationInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const SubscriptionOrderByRelationAggregateInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'SubscriptionOrderByRelationAggregateInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: '_count'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null)
    ]);
const SubscriptionOrderByWithRelationInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'SubscriptionOrderByWithRelationInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Price'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'MoneyOrderByWithRelationInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Timespan'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TimespanOrderByWithRelationInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Type'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'SubscriptionPlanOrderByWithRelationInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const TimespanOrderByWithRelationInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'TimespanOrderByWithRelationInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'start'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'end'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Booster_timespan_booster'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'BoosterOrderByWithRelationInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Subscription_timespan_subscription'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SubscriptionOrderByWithRelationInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const BoosterOrderByWithRelationInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'BoosterOrderByWithRelationInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Timespan'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TimespanOrderByWithRelationInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TimespanId'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_booster_item'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemOrderByWithRelationInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const TelephoneOrderByWithRelationInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'TelephoneOrderByWithRelationInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'telephoneNumber'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Person_telephone_person'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonOrderByWithRelationInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PictureOrderByWithRelationInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PictureOrderByWithRelationInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'LQ'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'FileOrderByWithRelationInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'MQ'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'FileOrderByWithRelationInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'HQ'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'FileOrderByWithRelationInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Person'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonOrderByWithRelationInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_picture_item'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemOrderByWithRelationInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const FileOrderByWithRelationInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'FileOrderByWithRelationInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'extension'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'File_lqPictureFile_file'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureOrderByWithRelationInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'File_mqPictureFile_file'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureOrderByWithRelationInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'File_hqPictureFile_file'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureOrderByWithRelationInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ChannelOrderByWithRelationInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ChannelOrderByWithRelationInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Participants'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonOrderByRelationAggregateInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const RatingOrderByRelationAggregateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'RatingOrderByRelationAggregateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: '_count'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null)
    ]);
const WardrobeOrderByRelationAggregateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'WardrobeOrderByRelationAggregateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: '_count'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null)
    ]);
const WardrobeWhereUniqueInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'WardrobeWhereUniqueInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null)
    ]);
const WardrobeScalarFieldEnum = _i1.EnumTypeDefinitionNode(
    name: _i1.NameNode(value: 'WardrobeScalarFieldEnum'),
    directives: [],
    values: [
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'id'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'name'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'addressId'), directives: [])
    ]);
const BoosterCountAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'BoosterCountAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'TimespanId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'itemId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: '_all'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true))
    ]);
const BoosterMaxAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'BoosterMaxAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'TimespanId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'itemId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const BoosterMinAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'BoosterMinAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'TimespanId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'itemId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const Booster = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'Booster'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ID'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Timespan'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Timespan'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'TimespanId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Item_booster_item'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Item'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'itemId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const BrandCountAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'BrandCountAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: '_all'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true))
    ]);
const BrandCount = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'BrandCount'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Categories'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true))
    ]);
const BrandMaxAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'BrandMaxAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const BrandMinAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'BrandMinAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const Brand = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'Brand'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ID'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Categories'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'CategoryWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'CategoryOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'CategoryWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'CategoryScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Category'), isNonNull: true),
              isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: '_count'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'BrandCount'), isNonNull: true))
    ]);
const CategoryWhereUniqueInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'CategoryWhereUniqueInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null)
    ]);
const CategoryScalarFieldEnum = _i1.EnumTypeDefinitionNode(
    name: _i1.NameNode(value: 'CategoryScalarFieldEnum'),
    directives: [],
    values: [
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'id'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'name'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'categoryId'), directives: [])
    ]);
const CategoryCountAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'CategoryCountAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'categoryId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: '_all'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true))
    ]);
const CategoryCount = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'CategoryCount'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Brand_category_brands'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Item_category_items'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'SubCategories'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true))
    ]);
const CategoryMaxAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'CategoryMaxAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'categoryId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const CategoryMinAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'CategoryMinAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'categoryId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const Category = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'Category'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ID'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ClothSizeWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'ClothSizeOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ClothSizeWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'ClothSizeScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothSize'), isNonNull: true),
              isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Brand_category_brands'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'BrandWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'BrandOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'BrandWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'BrandScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Brand'), isNonNull: true),
              isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Item_category_items'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ItemWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name:
                            _i1.NameNode(value: 'ItemOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'ItemScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Item'), isNonNull: true),
              isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'categoryId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'ParentCategory'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Category'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'SubCategories'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'CategoryWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'CategoryOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'CategoryWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'CategoryScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Category'), isNonNull: true),
              isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: '_count'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'CategoryCount'), isNonNull: true))
    ]);
const ClothSizeOrderByWithRelationInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothSizeOrderByWithRelationInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'SizeModel'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Categories'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'CategoryOrderByRelationAggregateInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_clothSize_cloth'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothOrderByRelationAggregateInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Person_clothSize_persons'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonOrderByRelationAggregateInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ComparableTo'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'ClothSizeOrderByRelationAggregateInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSize'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'ClothSizeOrderByRelationAggregateInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothSizeWhereUniqueInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothSizeWhereUniqueInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null)
    ]);
const ClothSizeScalarFieldEnum = _i1.EnumTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothSizeScalarFieldEnum'),
    directives: [],
    values: [
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'id'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'name'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'rank'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'SizeModel'), directives: [])
    ]);
const BrandOrderByWithRelationInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'BrandOrderByWithRelationInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Categories'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'CategoryOrderByRelationAggregateInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const BrandWhereUniqueInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'BrandWhereUniqueInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null)
    ]);
const BrandScalarFieldEnum = _i1.EnumTypeDefinitionNode(
    name: _i1.NameNode(value: 'BrandScalarFieldEnum'),
    directives: [],
    values: [
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'id'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'name'), directives: [])
    ]);
const ItemWhereUniqueInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null)
    ]);
const ItemScalarFieldEnum = _i1.EnumTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemScalarFieldEnum'),
    directives: [],
    values: [
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'id'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'active'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'description'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'categoryId'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'conditionId'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'ownerId'), directives: [])
    ]);
const ChannelCountAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ChannelCountAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: '_all'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true))
    ]);
const ChannelCount = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ChannelCount'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Participants'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true))
    ]);
const ChannelMaxAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ChannelMaxAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const ChannelMinAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ChannelMinAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const Channel = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'Channel'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ID'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Participants'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'PersonWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'PersonOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'PersonScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Person'), isNonNull: true),
              isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: '_count'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ChannelCount'), isNonNull: true))
    ]);
const PersonWhereUniqueInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'pictureId'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null)
    ]);
const PersonScalarFieldEnum = _i1.EnumTypeDefinitionNode(
    name: _i1.NameNode(value: 'PersonScalarFieldEnum'),
    directives: [],
    values: [
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'id'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'email'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'birthday'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'firstName'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'lastName'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'genderId'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'historyId'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'telephoneId'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'pictureId'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'channelId'), directives: [])
    ]);
const ClothCountAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothCountAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'code'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'materialId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'itemId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'historyId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'wardrobeId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: '_all'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true))
    ]);
const ClothCount = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothCount'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'ClothStyles'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true))
    ]);
const ClothMaxAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothMaxAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'code'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'materialId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'itemId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'historyId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'wardrobeId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const ClothMinAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothMinAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'code'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'materialId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'itemId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'historyId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'wardrobeId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const Cloth = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'Cloth'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ID'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'code'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Material'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Material'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'materialId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Item'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Item'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'itemId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ClothSizeWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'ClothSizeOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ClothSizeWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'ClothSizeScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothSize'), isNonNull: true),
              isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'ClothStyles'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ClothStyleWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'ClothStyleOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ClothStyleWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'ClothStyleScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothStyle'), isNonNull: true),
              isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'History'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'historyId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Wardrobe'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Wardrobe'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'wardrobeId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: '_count'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothCount'), isNonNull: true))
    ]);
const ClothStyleOrderByWithRelationInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothStyleOrderByWithRelationInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_clothStyle_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothOrderByRelationAggregateInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Person_clothStyle_persons'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonOrderByRelationAggregateInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothStyleWhereUniqueInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothStyleWhereUniqueInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null)
    ]);
const ClothStyleScalarFieldEnum = _i1.EnumTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothStyleScalarFieldEnum'),
    directives: [],
    values: [
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'id'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'name'), directives: [])
    ]);
const ClothSizeAvgAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothSizeAvgAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Float'), isNonNull: false))
    ]);
const ClothSizeCountAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothSizeCountAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'SizeModel'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: '_all'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true))
    ]);
const ClothSizeCount = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothSizeCount'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Categories'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_clothSize_cloth'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Person_clothSize_persons'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'ComparableTo'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'ClothSize'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true))
    ]);
const ClothSizeMaxAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothSizeMaxAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'SizeModel'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SizeModel'), isNonNull: false))
    ]);
const ClothSizeMinAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothSizeMinAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'SizeModel'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SizeModel'), isNonNull: false))
    ]);
const ClothSizeSumAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothSizeSumAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false))
    ]);
const ClothSize = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothSize'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ID'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'SizeModel'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SizeModel'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Categories'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'CategoryWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'CategoryOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'CategoryWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'CategoryScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Category'), isNonNull: true),
              isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_clothSize_cloth'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ClothWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'ClothOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ClothWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'ClothScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Cloth'), isNonNull: true),
              isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Person_clothSize_persons'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'PersonWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'PersonOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'PersonScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Person'), isNonNull: true),
              isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'ComparableTo'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ClothSizeWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'ClothSizeOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ClothSizeWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'ClothSizeScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothSize'), isNonNull: true),
              isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'ClothSize'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ClothSizeWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'ClothSizeOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ClothSizeWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'ClothSizeScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothSize'), isNonNull: true),
              isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: '_count'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothSizeCount'), isNonNull: true))
    ]);
const ClothWhereUniqueInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothWhereUniqueInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null)
    ]);
const ClothScalarFieldEnum = _i1.EnumTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothScalarFieldEnum'),
    directives: [],
    values: [
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'id'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'code'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'materialId'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'itemId'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'historyId'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'wardrobeId'), directives: [])
    ]);
const ClothStyleCountAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothStyleCountAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: '_all'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true))
    ]);
const ClothStyleCount = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothStyleCount'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Item_clothStyle_items'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Person_clothStyle_persons'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true))
    ]);
const ClothStyleMaxAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothStyleMaxAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const ClothStyleMinAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothStyleMinAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const ClothStyle = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothStyle'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ID'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Item_clothStyle_items'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ClothWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'ClothOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ClothWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'ClothScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Cloth'), isNonNull: true),
              isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Person_clothStyle_persons'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'PersonWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'PersonOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'PersonScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Person'), isNonNull: true),
              isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: '_count'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothStyleCount'), isNonNull: true))
    ]);
const ColorCountAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ColorCountAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Type'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: '_all'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true))
    ]);
const ColorCount = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ColorCount'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Item_color_items'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true))
    ]);
const ColorMaxAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ColorMaxAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Type'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ColorType'), isNonNull: false))
    ]);
const ColorMinAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ColorMinAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Type'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ColorType'), isNonNull: false))
    ]);
const Color = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'Color'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ID'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Type'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ColorType'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Item_color_items'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ItemWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name:
                            _i1.NameNode(value: 'ItemOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'ItemScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Item'), isNonNull: true),
              isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: '_count'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ColorCount'), isNonNull: true))
    ]);
const ConditionCountAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ConditionCountAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: '_all'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true))
    ]);
const ConditionCount = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ConditionCount'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Item_condition_items'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true))
    ]);
const ConditionMaxAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ConditionMaxAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const ConditionMinAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ConditionMinAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const Condition = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'Condition'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ID'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Item_condition_items'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ItemWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name:
                            _i1.NameNode(value: 'ItemOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'ItemScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Item'), isNonNull: true),
              isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: '_count'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ConditionCount'), isNonNull: true))
    ]);
const ContractCountAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ContractCountAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'offerId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: '_all'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true))
    ]);
const ContractCount = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ContractCount'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Rating'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true))
    ]);
const ContractMaxAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ContractMaxAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'offerId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const ContractMinAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ContractMinAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'offerId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const Contract = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'Contract'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ID'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Offer'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Offer'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'offerId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Rating'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'RatingWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'RatingOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'RatingWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'RatingScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Rating'), isNonNull: true),
              isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: '_count'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ContractCount'), isNonNull: true))
    ]);
const RatingOrderByWithRelationInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'RatingOrderByWithRelationInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'amount'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Contract'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ContractOrderByWithRelationInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'From'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonOrderByWithRelationInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ContractOrderByWithRelationInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ContractOrderByWithRelationInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Offer'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'OfferOrderByWithRelationInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Rating'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'RatingOrderByRelationAggregateInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const OfferOrderByWithRelationInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'OfferOrderByWithRelationInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageOrderByRelationAggregateInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Contract'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ContractOrderByWithRelationInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const RatingWhereUniqueInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'RatingWhereUniqueInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null)
    ]);
const RatingScalarFieldEnum = _i1.EnumTypeDefinitionNode(
    name: _i1.NameNode(value: 'RatingScalarFieldEnum'),
    directives: [],
    values: [
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'id'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'amount'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'contractId'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'personId'), directives: [])
    ]);
const CountryCountAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'CountryCountAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: '_all'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true))
    ]);
const CountryCount = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'CountryCount'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Address_county_addresses'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true))
    ]);
const CountryMaxAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'CountryMaxAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const CountryMinAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'CountryMinAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const Country = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'Country'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ID'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Address_county_addresses'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'AddressWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'AddressOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'AddressWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'AddressScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Address'), isNonNull: true),
              isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: '_count'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'CountryCount'), isNonNull: true))
    ]);
const AddressWhereUniqueInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'AddressWhereUniqueInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null)
    ]);
const AddressScalarFieldEnum = _i1.EnumTypeDefinitionNode(
    name: _i1.NameNode(value: 'AddressScalarFieldEnum'),
    directives: [],
    values: [
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'id'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'line1'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'line2'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'city'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'province'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'zip'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'countryId'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'personId'), directives: [])
    ]);
const DurationAvgAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'DurationAvgAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'seconds'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Float'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'minutes'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Float'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'hours'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Float'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'days'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Float'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'weeks'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Float'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'months'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Float'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'years'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Float'), isNonNull: false))
    ]);
const DurationCountAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'DurationCountAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'seconds'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'minutes'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'hours'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'days'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'weeks'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'months'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'years'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: '_all'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true))
    ]);
const DurationMaxAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'DurationMaxAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'seconds'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'minutes'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'hours'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'days'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'weeks'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'months'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'years'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false))
    ]);
const DurationMinAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'DurationMinAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'seconds'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'minutes'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'hours'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'days'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'weeks'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'months'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'years'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false))
    ]);
const DurationSumAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'DurationSumAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'seconds'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'minutes'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'hours'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'days'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'weeks'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'months'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'years'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false))
    ]);
const Duration = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'Duration'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ID'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'seconds'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'minutes'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'hours'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'days'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'weeks'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'months'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'years'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name:
              _i1.NameNode(value: 'SubscriptionPlan_duration_subscriptionPlan'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SubscriptionPlan'), isNonNull: false))
    ]);
const EventCountAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'EventCountAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'when'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'what'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'from'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'to'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'whoId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'historyId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: '_all'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true))
    ]);
const EventMaxAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'EventMaxAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'when'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'what'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'whoId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'historyId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const EventMinAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'EventMinAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'when'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'what'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'whoId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'historyId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const Event = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'Event'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ID'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'when'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'what'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'from'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'JSON'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'to'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'JSON'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Who'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Person'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'whoId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'History_created_history'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'History'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'History_updated_history'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'History'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'historyId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'History_deleted_history'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'History'), isNonNull: false))
    ]);
const FileCountAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'FileCountAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: '_all'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true))
    ]);
const FileMaxAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'FileMaxAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const FileMinAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'FileMinAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const File = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'File'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ID'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'File_lqPictureFile_file'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Picture'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'File_mqPictureFile_file'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Picture'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'File_hqPictureFile_file'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Picture'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const GenderCountAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'GenderCountAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: '_all'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true))
    ]);
const GenderCount = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'GenderCount'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Profile_gender_profiles'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true))
    ]);
const GenderMaxAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'GenderMaxAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const GenderMinAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'GenderMinAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const Gender = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'Gender'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ID'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Profile_gender_profiles'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'PersonWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'PersonOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'PersonScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Person'), isNonNull: true),
              isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: '_count'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'GenderCount'), isNonNull: true))
    ]);
const HistoryCountAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'HistoryCountAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'createdId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'deletedId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'userId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: '_all'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true))
    ]);
const HistoryCount = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'HistoryCount'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Updated'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true))
    ]);
const HistoryMaxAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'HistoryMaxAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'createdId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'deletedId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'userId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const HistoryMinAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'HistoryMinAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'createdId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'deletedId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'userId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const History = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'History'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ID'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Created'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Event'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'createdId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Updated'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'EventWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'EventOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'EventWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'EventScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Event'), isNonNull: true),
              isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Deleted'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Event'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'deletedId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'User_history_user'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Person'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'userId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Money_history_money'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Money'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_history_cloth'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Cloth'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: '_count'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryCount'), isNonNull: true))
    ]);
const EventWhereUniqueInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'EventWhereUniqueInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null)
    ]);
const EventScalarFieldEnum = _i1.EnumTypeDefinitionNode(
    name: _i1.NameNode(value: 'EventScalarFieldEnum'),
    directives: [],
    values: [
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'id'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'when'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'what'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'from'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'to'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'whoId'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'historyId'), directives: [])
    ]);
const ItemCountAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemCountAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'active'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'description'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'categoryId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'conditionId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'ownerId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: '_all'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true))
    ]);
const ItemCount = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemCount'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Colors'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Pictures'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Booster'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_item_tradePackages'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true))
    ]);
const ItemGenderCount = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemGenderCount'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Items_itemGender_items'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Person_itemGender_persons'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true))
    ]);
const ItemMaxAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemMaxAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'active'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'description'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'categoryId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'conditionId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'ownerId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const ItemMinAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemMinAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'active'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'description'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'categoryId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'conditionId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'ownerId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const Item = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'Item'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ID'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'active'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'description'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Category'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Category'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'categoryId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Value'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Money'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Colors'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ColorWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'ColorOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ColorWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'ColorScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Color'), isNonNull: true),
              isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ItemGenderWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'ItemGenderOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ItemGenderWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'ItemGenderScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemGender'), isNonNull: true),
              isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Pictures'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'PictureWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'PictureOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'PictureWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'PictureScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Picture'), isNonNull: true),
              isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Condition'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Condition'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'conditionId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Owner'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Person'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'ownerId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Booster'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'BoosterWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'BoosterOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'BoosterWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'BoosterScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Booster'), isNonNull: true),
              isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_item_cloth'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Cloth'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_item_tradePackages'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'TradePackageWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'TradePackageOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'TradePackageWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name:
                            _i1.NameNode(value: 'TradePackageScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'TradePackage'), isNonNull: true),
              isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: '_count'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemCount'), isNonNull: true))
    ]);
const ColorOrderByWithRelationInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ColorOrderByWithRelationInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Type'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_color_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemOrderByRelationAggregateInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ColorWhereUniqueInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ColorWhereUniqueInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null)
    ]);
const ColorScalarFieldEnum = _i1.EnumTypeDefinitionNode(
    name: _i1.NameNode(value: 'ColorScalarFieldEnum'),
    directives: [],
    values: [
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'id'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'name'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'Type'), directives: [])
    ]);
const ItemGenderOrderByWithRelationInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemGenderOrderByWithRelationInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Items_itemGender_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemOrderByRelationAggregateInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Person_itemGender_persons'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonOrderByRelationAggregateInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemGenderWhereUniqueInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemGenderWhereUniqueInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null)
    ]);
const ItemGenderScalarFieldEnum = _i1.EnumTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemGenderScalarFieldEnum'),
    directives: [],
    values: [
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'id'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'name'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'rank'), directives: [])
    ]);
const PictureWhereUniqueInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PictureWhereUniqueInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null)
    ]);
const PictureScalarFieldEnum = _i1.EnumTypeDefinitionNode(
    name: _i1.NameNode(value: 'PictureScalarFieldEnum'),
    directives: [],
    values: [
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'id'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'rank'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'lQFileId'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'mQFileId'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'hQFileId'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'itemId'), directives: [])
    ]);
const BoosterWhereUniqueInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'BoosterWhereUniqueInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TimespanId'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null)
    ]);
const BoosterScalarFieldEnum = _i1.EnumTypeDefinitionNode(
    name: _i1.NameNode(value: 'BoosterScalarFieldEnum'),
    directives: [],
    values: [
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'id'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'TimespanId'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'itemId'), directives: [])
    ]);
const TradePackageOrderByWithRelationInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'TradePackageOrderByWithRelationInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'WantedBy'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonOrderByRelationAggregateInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'From'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonOrderByWithRelationInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemOrderByRelationAggregateInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Offer_tradePackage_offers'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'OfferOrderByRelationAggregateInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const OfferOrderByRelationAggregateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'OfferOrderByRelationAggregateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: '_count'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SortOrder'), isNonNull: false),
          defaultValue: null)
    ]);
const TradePackageWhereUniqueInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'TradePackageWhereUniqueInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null)
    ]);
const TradePackageScalarFieldEnum = _i1.EnumTypeDefinitionNode(
    name: _i1.NameNode(value: 'TradePackageScalarFieldEnum'),
    directives: [],
    values: [
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'id'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'fromId'), directives: [])
    ]);
const ItemGenderAvgAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemGenderAvgAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Float'), isNonNull: false))
    ]);
const ItemGenderCountAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemGenderCountAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: '_all'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true))
    ]);
const ItemGenderMaxAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemGenderMaxAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false))
    ]);
const ItemGenderMinAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemGenderMinAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false))
    ]);
const ItemGenderSumAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemGenderSumAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false))
    ]);
const ItemGender = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemGender'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ID'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Items_itemGender_items'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ItemWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name:
                            _i1.NameNode(value: 'ItemOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'ItemScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Item'), isNonNull: true),
              isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Person_itemGender_persons'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'PersonWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'PersonOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'PersonScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Person'), isNonNull: true),
              isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: '_count'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemGenderCount'), isNonNull: true))
    ]);
const MaterialCountAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'MaterialCountAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: '_all'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true))
    ]);
const MaterialCount = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'MaterialCount'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_material_cloths'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true))
    ]);
const MaterialMaxAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'MaterialMaxAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const MaterialMinAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'MaterialMinAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const Material = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'Material'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ID'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_material_cloths'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ClothWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'ClothOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ClothWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'ClothScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Cloth'), isNonNull: true),
              isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: '_count'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'MaterialCount'), isNonNull: true))
    ]);
const MoneyAvgAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'MoneyAvgAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'value'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Float'), isNonNull: false))
    ]);
const MoneyCountAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'MoneyCountAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'value'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Currency'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'historyId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'itemId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: '_all'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true))
    ]);
const MoneyMaxAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'MoneyMaxAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'value'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Float'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Currency'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Currency'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'historyId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'itemId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const MoneyMinAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'MoneyMinAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'value'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Float'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Currency'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Currency'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'historyId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'itemId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const MoneySumAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'MoneySumAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'value'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Float'), isNonNull: false))
    ]);
const Money = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'Money'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ID'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'value'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Float'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Currency'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Currency'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'History'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'historyId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Item_value_item'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Item'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'itemId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'SubscriptionPlan_money_subscriptionPlans'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SubscriptionPlan'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Subscription_money_subscription'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Subscription'), isNonNull: false))
    ]);
const OfferCountAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'OfferCountAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: '_all'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true))
    ]);
const OfferCount = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'OfferCount'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'TradePackages'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true))
    ]);
const OfferMaxAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'OfferMaxAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const OfferMinAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'OfferMinAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const Offer = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'Offer'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ID'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'TradePackages'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'TradePackageWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'TradePackageOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'TradePackageWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name:
                            _i1.NameNode(value: 'TradePackageScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'TradePackage'), isNonNull: true),
              isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Contract'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Contract'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: '_count'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'OfferCount'), isNonNull: true))
    ]);
const PersonCountAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PersonCountAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'email'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'birthday'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'firstName'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'lastName'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'genderId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'historyId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'telephoneId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'pictureId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'channelId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: '_all'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true))
    ]);
const PersonCount = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PersonCount'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Address'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'ClothStyles'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Event_who_events'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Item_owner_items'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_wantedBy_tradePackages'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_from_tradePackages'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Rating_person_ratings'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true))
    ]);
const PersonMaxAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PersonMaxAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'email'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'birthday'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'firstName'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'lastName'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'genderId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'historyId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'telephoneId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'pictureId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'channelId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const PersonMinAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PersonMinAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'email'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'birthday'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'firstName'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'lastName'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'genderId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'historyId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'telephoneId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'pictureId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'channelId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const Person = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'Person'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ID'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'email'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'birthday'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'firstName'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'lastName'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Gender'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Gender'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'genderId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ItemGenderWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'ItemGenderOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ItemGenderWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'ItemGenderScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemGender'), isNonNull: true),
              isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'History'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'historyId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Telephone'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Telephone'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'telephoneId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Address'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'AddressWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'AddressOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'AddressWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'AddressScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Address'), isNonNull: true),
              isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Picture'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Picture'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'pictureId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ClothSizeWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'ClothSizeOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ClothSizeWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'ClothSizeScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothSize'), isNonNull: true),
              isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'ClothStyles'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ClothStyleWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'ClothStyleOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ClothStyleWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'ClothStyleScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothStyle'), isNonNull: true),
              isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Event_who_events'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'EventWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'EventOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'EventWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'EventScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Event'), isNonNull: true),
              isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Item_owner_items'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ItemWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name:
                            _i1.NameNode(value: 'ItemOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'ItemScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Item'), isNonNull: true),
              isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Channel'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Channel'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'channelId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_wantedBy_tradePackages'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'TradePackageWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'TradePackageOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'TradePackageWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name:
                            _i1.NameNode(value: 'TradePackageScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'TradePackage'), isNonNull: true),
              isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_from_tradePackages'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'TradePackageWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'TradePackageOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'TradePackageWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name:
                            _i1.NameNode(value: 'TradePackageScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'TradePackage'), isNonNull: true),
              isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Rating_person_ratings'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'RatingWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'RatingOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'RatingWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'RatingScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Rating'), isNonNull: true),
              isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: '_count'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonCount'), isNonNull: true))
    ]);
const PictureAvgAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PictureAvgAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Float'), isNonNull: false))
    ]);
const PictureCountAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PictureCountAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'lQFileId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'mQFileId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'hQFileId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'itemId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: '_all'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true))
    ]);
const PictureMaxAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PictureMaxAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'lQFileId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'mQFileId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'hQFileId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'itemId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const PictureMinAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PictureMinAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'lQFileId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'mQFileId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'hQFileId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'itemId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const PictureSumAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PictureSumAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false))
    ]);
const Picture = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'Picture'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ID'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'LQ'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'File'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'lQFileId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'MQ'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'File'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'mQFileId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'HQ'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'File'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'hQFileId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Person'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Person'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Item_picture_item'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Item'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'itemId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const RatingAvgAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'RatingAvgAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'amount'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Float'), isNonNull: false))
    ]);
const RatingCountAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'RatingCountAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'amount'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'contractId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'personId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: '_all'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true))
    ]);
const RatingMaxAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'RatingMaxAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'amount'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'contractId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'personId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const RatingMinAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'RatingMinAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'amount'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'contractId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'personId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const RatingSumAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'RatingSumAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'amount'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false))
    ]);
const Rating = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'Rating'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ID'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'amount'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Contract'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Contract'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'contractId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'From'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Person'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'personId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const SubscriptionCountAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'SubscriptionCountAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'moneyId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'TimespanId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'subscriptionTypeId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: '_all'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true))
    ]);
const SubscriptionMaxAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'SubscriptionMaxAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'moneyId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'TimespanId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'subscriptionTypeId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const SubscriptionMinAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'SubscriptionMinAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'moneyId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'TimespanId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'subscriptionTypeId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const Subscription = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'Subscription'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ID'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Price'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Money'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'moneyId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Timespan'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Timespan'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'TimespanId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Type'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SubscriptionPlan'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'subscriptionTypeId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const SubscriptionPlanCountAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'SubscriptionPlanCountAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'DurationId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'moneyId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: '_all'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true))
    ]);
const SubscriptionPlanCount = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'SubscriptionPlanCount'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name:
              _i1.NameNode(value: 'Subscription_subscriptionType_subscription'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true))
    ]);
const SubscriptionPlanMaxAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'SubscriptionPlanMaxAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'DurationId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'moneyId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const SubscriptionPlanMinAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'SubscriptionPlanMinAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'DurationId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'moneyId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const SubscriptionPlan = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'SubscriptionPlan'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ID'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'StandardDuration'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Duration'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'DurationId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'StandardPrice'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Money'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'moneyId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name:
              _i1.NameNode(value: 'Subscription_subscriptionType_subscription'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'SubscriptionWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'SubscriptionOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'SubscriptionWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name:
                            _i1.NameNode(value: 'SubscriptionScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Subscription'), isNonNull: true),
              isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: '_count'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SubscriptionPlanCount'),
              isNonNull: true))
    ]);
const SubscriptionWhereUniqueInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'SubscriptionWhereUniqueInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null)
    ]);
const SubscriptionScalarFieldEnum = _i1.EnumTypeDefinitionNode(
    name: _i1.NameNode(value: 'SubscriptionScalarFieldEnum'),
    directives: [],
    values: [
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'id'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'moneyId'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'TimespanId'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'subscriptionTypeId'), directives: [])
    ]);
const TelephoneCountAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'TelephoneCountAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'telephoneNumber'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: '_all'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true))
    ]);
const TelephoneMaxAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'TelephoneMaxAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'telephoneNumber'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const TelephoneMinAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'TelephoneMinAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'telephoneNumber'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const Telephone = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'Telephone'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ID'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'telephoneNumber'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Person_telephone_person'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Person'), isNonNull: false))
    ]);
const TimespanCountAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'TimespanCountAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'start'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'end'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: '_all'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true))
    ]);
const TimespanMaxAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'TimespanMaxAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'start'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'end'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false))
    ]);
const TimespanMinAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'TimespanMinAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'start'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'end'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false))
    ]);
const Timespan = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'Timespan'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ID'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'start'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'end'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Booster_timespan_booster'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Booster'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Subscription_timespan_subscription'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Subscription'), isNonNull: false))
    ]);
const TradePackageCountAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'TradePackageCountAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'fromId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: '_all'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true))
    ]);
const TradePackageCount = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'TradePackageCount'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'WantedBy'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Items'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Offer_tradePackage_offers'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true))
    ]);
const TradePackageMaxAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'TradePackageMaxAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'fromId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const TradePackageMinAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'TradePackageMinAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'fromId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const TradePackage = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'TradePackage'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ID'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'WantedBy'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'PersonWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'PersonOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'PersonScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Person'), isNonNull: true),
              isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'From'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Person'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'fromId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Items'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ItemWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name:
                            _i1.NameNode(value: 'ItemOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'ItemScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Item'), isNonNull: true),
              isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Offer_tradePackage_offers'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'OfferWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'OfferOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'OfferWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'OfferScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Offer'), isNonNull: true),
              isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: '_count'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TradePackageCount'), isNonNull: true))
    ]);
const OfferWhereUniqueInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'OfferWhereUniqueInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null)
    ]);
const OfferScalarFieldEnum = _i1.EnumTypeDefinitionNode(
    name: _i1.NameNode(value: 'OfferScalarFieldEnum'),
    directives: [],
    values: [
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'id'), directives: [])
    ]);
const WardrobeCountAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'WardrobeCountAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'addressId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: '_all'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true))
    ]);
const WardrobeCount = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'WardrobeCount'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Cloths'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: true))
    ]);
const WardrobeMaxAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'WardrobeMaxAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'addressId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const WardrobeMinAggregate = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'WardrobeMinAggregate'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'addressId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false))
    ]);
const Wardrobe = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'Wardrobe'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ID'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Address'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Address'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'addressId'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'Cloths'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ClothWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'ClothOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ClothWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'ClothScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Cloth'), isNonNull: true),
              isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: '_count'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'WardrobeCount'), isNonNull: true))
    ]);
const Query = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'Query'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'clothStyles'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ClothStyleWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'ClothStyleOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ClothStyleWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'ClothStyleScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothStyle'), isNonNull: true),
              isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'clothStyle'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ClothStyleWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothStyle'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'itemGenders'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ItemGenderWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'ItemGenderOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ItemGenderWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'ItemGenderScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemGender'), isNonNull: true),
              isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'itemGender'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ItemGenderWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemGender'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'materials'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'MaterialWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'MaterialOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'MaterialWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'MaterialScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Material'), isNonNull: true),
              isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'material'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'MaterialWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Material'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'pictures'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'PictureWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'PictureOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'PictureWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'PictureScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Picture'), isNonNull: true),
              isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'picture'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'PictureWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Picture'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'files'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'FileWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name:
                            _i1.NameNode(value: 'FileOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'FileWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'FileScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'File'), isNonNull: true),
              isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'file'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'FileWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'File'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'ratings'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'RatingWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'RatingOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'RatingWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'RatingScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Rating'), isNonNull: true),
              isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'rating'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'RatingWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Rating'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'subscriptions'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'SubscriptionWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'SubscriptionOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'SubscriptionWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name:
                            _i1.NameNode(value: 'SubscriptionScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Subscription'), isNonNull: true),
              isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'subscription'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'SubscriptionWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Subscription'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'subscriptionPlans'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'SubscriptionPlanWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'SubscriptionPlanOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name:
                        _i1.NameNode(value: 'SubscriptionPlanWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'SubscriptionPlanScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'SubscriptionPlan'),
                  isNonNull: true),
              isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'subscriptionPlan'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name:
                        _i1.NameNode(value: 'SubscriptionPlanWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SubscriptionPlan'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'boosters'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'BoosterWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'BoosterOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'BoosterWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'BoosterScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Booster'), isNonNull: true),
              isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'booster'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'BoosterWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Booster'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'moneys'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'MoneyWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'MoneyOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'MoneyWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'MoneyScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Money'), isNonNull: true),
              isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'money'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'MoneyWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Money'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'contracts'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ContractWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'ContractOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ContractWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'ContractScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Contract'), isNonNull: true),
              isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'contract'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ContractWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Contract'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'offers'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'OfferWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'OfferOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'OfferWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'OfferScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Offer'), isNonNull: true),
              isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'offer'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'OfferWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Offer'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'tradePackages'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'TradePackageWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'TradePackageOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'TradePackageWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name:
                            _i1.NameNode(value: 'TradePackageScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'TradePackage'), isNonNull: true),
              isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'tradePackage'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'TradePackageWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TradePackage'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'wardrobes'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'WardrobeWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'WardrobeOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'WardrobeWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'WardrobeScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Wardrobe'), isNonNull: true),
              isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'wardrobe'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'WardrobeWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Wardrobe'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'persons'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'PersonWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'PersonOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'PersonScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Person'), isNonNull: true),
              isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'person'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Person'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'me'),
          directives: [],
          args: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Person'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'cloths'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ClothWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'ClothOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ClothWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'ClothScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Cloth'), isNonNull: true),
              isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'cloth'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ClothWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Cloth'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'conditions'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ConditionWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'ConditionOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ConditionWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'ConditionScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Condition'), isNonNull: true),
              isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'condition'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ConditionWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Condition'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'clothSizes'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ClothSizeWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'ClothSizeOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ClothSizeWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'ClothSizeScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothSize'), isNonNull: true),
              isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'clothSize'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ClothSizeWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothSize'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'colors'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ColorWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'ColorOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ColorWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'ColorScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Color'), isNonNull: true),
              isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'color'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ColorWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Color'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'items'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ItemWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name:
                            _i1.NameNode(value: 'ItemOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'ItemScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Item'), isNonNull: true),
              isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'item'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Item'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'brands'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'BrandWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'BrandOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'BrandWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'BrandScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Brand'), isNonNull: true),
              isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'brand'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'BrandWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Brand'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'categorys'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'CategoryWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'CategoryOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'CategoryWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'CategoryScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Category'), isNonNull: true),
              isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'category'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'CategoryWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Category'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'addresss'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'AddressWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'AddressOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'AddressWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'AddressScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Address'), isNonNull: true),
              isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'address'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'AddressWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Address'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'countrys'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'CountryWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'CountryOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'CountryWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'CountryScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Country'), isNonNull: true),
              isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'country'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'CountryWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Country'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'telephones'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'TelephoneWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'TelephoneOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'TelephoneWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'TelephoneScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Telephone'), isNonNull: true),
              isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'telephone'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'TelephoneWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Telephone'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'channels'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ChannelWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'ChannelOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ChannelWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'ChannelScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Channel'), isNonNull: true),
              isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'channel'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ChannelWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Channel'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'genders'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'GenderWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'GenderOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'GenderWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'GenderScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Gender'), isNonNull: true),
              isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'gender'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'GenderWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Gender'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'durations'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'DurationWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'DurationOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'DurationWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'DurationScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Duration'), isNonNull: true),
              isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'duration'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'DurationWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Duration'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'timespans'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'TimespanWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'TimespanOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'TimespanWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'TimespanScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Timespan'), isNonNull: true),
              isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'timespan'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'TimespanWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Timespan'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'historys'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'HistoryWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'HistoryOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'HistoryWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'HistoryScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'History'), isNonNull: true),
              isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'history'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'HistoryWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'History'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'events'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'EventWhereInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'orderBy'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(
                            value: 'EventOrderByWithRelationInput'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'cursor'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'EventWhereUniqueInput'),
                    isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'take'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'skip'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'Int'), isNonNull: false),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'distinct'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'EventScalarFieldEnum'),
                        isNonNull: true),
                    isNonNull: false),
                defaultValue: null)
          ],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'Event'), isNonNull: true),
              isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'event'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'EventWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Event'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'getToken'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'userId'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'String'), isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'getUserId'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'token'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'String'), isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: true))
    ]);
const MaterialWhereUniqueInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'MaterialWhereUniqueInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null)
    ]);
const MaterialScalarFieldEnum = _i1.EnumTypeDefinitionNode(
    name: _i1.NameNode(value: 'MaterialScalarFieldEnum'),
    directives: [],
    values: [
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'id'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'name'), directives: [])
    ]);
const FileWhereUniqueInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'FileWhereUniqueInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null)
    ]);
const FileScalarFieldEnum = _i1.EnumTypeDefinitionNode(
    name: _i1.NameNode(value: 'FileScalarFieldEnum'),
    directives: [],
    values: [
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'id'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'uri'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'bucket'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'extension'), directives: [])
    ]);
const SubscriptionPlanWhereUniqueInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'SubscriptionPlanWhereUniqueInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null)
    ]);
const SubscriptionPlanScalarFieldEnum = _i1.EnumTypeDefinitionNode(
    name: _i1.NameNode(value: 'SubscriptionPlanScalarFieldEnum'),
    directives: [],
    values: [
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'id'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'name'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'DurationId'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'moneyId'), directives: [])
    ]);
const MoneyWhereUniqueInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'MoneyWhereUniqueInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null)
    ]);
const MoneyScalarFieldEnum = _i1.EnumTypeDefinitionNode(
    name: _i1.NameNode(value: 'MoneyScalarFieldEnum'),
    directives: [],
    values: [
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'id'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'value'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'Currency'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'historyId'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'itemId'), directives: [])
    ]);
const ContractWhereUniqueInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ContractWhereUniqueInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null)
    ]);
const ContractScalarFieldEnum = _i1.EnumTypeDefinitionNode(
    name: _i1.NameNode(value: 'ContractScalarFieldEnum'),
    directives: [],
    values: [
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'id'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'offerId'), directives: [])
    ]);
const ConditionWhereUniqueInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ConditionWhereUniqueInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null)
    ]);
const ConditionScalarFieldEnum = _i1.EnumTypeDefinitionNode(
    name: _i1.NameNode(value: 'ConditionScalarFieldEnum'),
    directives: [],
    values: [
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'id'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'name'), directives: [])
    ]);
const CountryWhereUniqueInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'CountryWhereUniqueInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null)
    ]);
const CountryScalarFieldEnum = _i1.EnumTypeDefinitionNode(
    name: _i1.NameNode(value: 'CountryScalarFieldEnum'),
    directives: [],
    values: [
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'id'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'name'), directives: [])
    ]);
const TelephoneWhereUniqueInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'TelephoneWhereUniqueInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null)
    ]);
const TelephoneScalarFieldEnum = _i1.EnumTypeDefinitionNode(
    name: _i1.NameNode(value: 'TelephoneScalarFieldEnum'),
    directives: [],
    values: [
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'id'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'telephoneNumber'), directives: [])
    ]);
const ChannelWhereUniqueInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ChannelWhereUniqueInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null)
    ]);
const ChannelScalarFieldEnum = _i1.EnumTypeDefinitionNode(
    name: _i1.NameNode(value: 'ChannelScalarFieldEnum'),
    directives: [],
    values: [
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'id'), directives: [])
    ]);
const GenderWhereUniqueInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'GenderWhereUniqueInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null)
    ]);
const GenderScalarFieldEnum = _i1.EnumTypeDefinitionNode(
    name: _i1.NameNode(value: 'GenderScalarFieldEnum'),
    directives: [],
    values: [
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'id'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'name'), directives: [])
    ]);
const DurationWhereUniqueInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'DurationWhereUniqueInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null)
    ]);
const DurationScalarFieldEnum = _i1.EnumTypeDefinitionNode(
    name: _i1.NameNode(value: 'DurationScalarFieldEnum'),
    directives: [],
    values: [
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'id'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'seconds'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'minutes'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'hours'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'days'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'weeks'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'months'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'years'), directives: [])
    ]);
const TimespanWhereUniqueInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'TimespanWhereUniqueInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null)
    ]);
const TimespanScalarFieldEnum = _i1.EnumTypeDefinitionNode(
    name: _i1.NameNode(value: 'TimespanScalarFieldEnum'),
    directives: [],
    values: [
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'id'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'start'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'end'), directives: [])
    ]);
const HistoryWhereUniqueInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'HistoryWhereUniqueInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null)
    ]);
const HistoryScalarFieldEnum = _i1.EnumTypeDefinitionNode(
    name: _i1.NameNode(value: 'HistoryScalarFieldEnum'),
    directives: [],
    values: [
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'id'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'createdId'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'deletedId'), directives: []),
      _i1.EnumValueDefinitionNode(
          name: _i1.NameNode(value: 'userId'), directives: [])
    ]);
const Mutation = _i1.ObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'Mutation'),
    directives: [],
    interfaces: [],
    fields: [
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'createClothStyle'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'createClothStyleInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ClothStyleCreateInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothStyle'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'updateClothStyle'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'updateClothStyleInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ClothStyleUpdateInput'),
                    isNonNull: true),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ClothStyleWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothStyle'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'removeClothStyle'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ClothStyleWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothStyle'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'createItemGender'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'createItemGenderInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ItemGenderCreateInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemGender'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'updateItemGender'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'updateItemGenderInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ItemGenderUpdateInput'),
                    isNonNull: true),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ItemGenderWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemGender'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'removeItemGender'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ItemGenderWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemGender'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'createMaterial'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'createMaterialInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'MaterialCreateInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Material'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'updateMaterial'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'updateMaterialInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'MaterialUpdateInput'),
                    isNonNull: true),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'MaterialWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Material'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'removeMaterial'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'MaterialWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Material'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'createPicture'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'createPictureInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'PictureCreateInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Picture'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'updatePicture'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'updatePictureInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'PictureUpdateInput'),
                    isNonNull: true),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'PictureWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Picture'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'removePicture'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'PictureWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Picture'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'createFile'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'createFileInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'FileCreateInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'File'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'updateFile'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'updateFileInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'FileUpdateInput'),
                    isNonNull: true),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'FileWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'File'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'removeFile'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'FileWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'File'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'createRating'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'createRatingInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'RatingCreateInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Rating'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'updateRating'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'updateRatingInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'RatingUpdateInput'),
                    isNonNull: true),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'RatingWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Rating'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'removeRating'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'RatingWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Rating'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'createSubscription'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'createSubscriptionInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'SubscriptionCreateInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Subscription'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'updateSubscription'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'updateSubscriptionInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'SubscriptionUpdateInput'),
                    isNonNull: true),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'SubscriptionWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Subscription'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'removeSubscription'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'SubscriptionWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Subscription'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'createSubscriptionPlan'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'createSubscriptionPlanInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'SubscriptionPlanCreateInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SubscriptionPlan'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'updateSubscriptionPlan'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'updateSubscriptionPlanInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'SubscriptionPlanUpdateInput'),
                    isNonNull: true),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name:
                        _i1.NameNode(value: 'SubscriptionPlanWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SubscriptionPlan'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'removeSubscriptionPlan'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name:
                        _i1.NameNode(value: 'SubscriptionPlanWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SubscriptionPlan'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'createBooster'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'createBoosterInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'BoosterCreateInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Booster'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'updateBooster'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'updateBoosterInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'BoosterUpdateInput'),
                    isNonNull: true),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'BoosterWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Booster'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'removeBooster'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'BoosterWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Booster'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'createMoney'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'createMoneyInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'MoneyCreateInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Money'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'updateMoney'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'updateMoneyInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'MoneyUpdateInput'),
                    isNonNull: true),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'MoneyWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Money'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'removeMoney'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'MoneyWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Money'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'createContract'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'createContractInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ContractCreateInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Contract'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'updateContract'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'updateContractInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ContractUpdateInput'),
                    isNonNull: true),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ContractWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Contract'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'removeContract'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ContractWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Contract'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'createOffer'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'createOfferInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'OfferCreateInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Offer'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'updateOffer'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'updateOfferInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'OfferUpdateInput'),
                    isNonNull: true),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'OfferWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Offer'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'removeOffer'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'OfferWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Offer'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'createTradePackage'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'createTradePackageInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'TradePackageCreateInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TradePackage'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'updateTradePackage'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'updateTradePackageInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'TradePackageUpdateInput'),
                    isNonNull: true),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'TradePackageWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TradePackage'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'removeTradePackage'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'TradePackageWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TradePackage'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'createWardrobe'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'createWardrobeInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'WardrobeCreateInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Wardrobe'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'updateWardrobe'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'updateWardrobeInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'WardrobeUpdateInput'),
                    isNonNull: true),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'WardrobeWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Wardrobe'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'removeWardrobe'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'WardrobeWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Wardrobe'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'createPerson'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'createPersonInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'PersonCreateInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Person'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'updatePerson'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'updatePersonInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'PersonUpdateInput'),
                    isNonNull: true),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Person'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'removePerson'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Person'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'updateMyPerson'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'personUpdateInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'PersonUncheckedUpdateInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Person'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'updateMyPersonPicture'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'pictureBase64'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'PictureInput'), isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Person'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'updateMyPersonClothSizes'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'clothSizeIds'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'ClothSizeWhereUniqueInput'),
                        isNonNull: true),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Person'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'updateMyPersonClothStyles'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'clothStyleIds'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'ClothStyleWhereUniqueInput'),
                        isNonNull: true),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Person'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'updateMyPersonItemGenders'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'itemGenderIds'),
                directives: [],
                type: _i1.ListTypeNode(
                    type: _i1.NamedTypeNode(
                        name: _i1.NameNode(value: 'ItemGenderWhereUniqueInput'),
                        isNonNull: true),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Person'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'createCloth'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'createClothInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ClothCreateInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Cloth'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'updateCloth'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'updateClothInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ClothUpdateInput'),
                    isNonNull: true),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ClothWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Cloth'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'removeCloth'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ClothWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Cloth'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'createMyCloth'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'createMyClothInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'CreateMyClothInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Item'), isNonNull: false)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'createCondition'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'createConditionInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ConditionCreateInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Condition'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'updateCondition'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'updateConditionInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ConditionUpdateInput'),
                    isNonNull: true),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ConditionWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Condition'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'removeCondition'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ConditionWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Condition'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'createClothSize'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'createClothSizeInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ClothSizeCreateInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothSize'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'updateClothSize'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'updateClothSizeInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ClothSizeUpdateInput'),
                    isNonNull: true),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ClothSizeWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothSize'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'removeClothSize'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ClothSizeWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothSize'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'createColor'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'createColorInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ColorCreateInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Color'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'updateColor'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'updateColorInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ColorUpdateInput'),
                    isNonNull: true),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ColorWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Color'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'removeColor'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ColorWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Color'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'createItem'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'createItemInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ItemCreateInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Item'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'updateItem'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'updateItemInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ItemUpdateInput'),
                    isNonNull: true),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Item'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'removeItem'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Item'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'createBrand'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'createBrandInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'BrandCreateInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Brand'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'updateBrand'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'updateBrandInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'BrandUpdateInput'),
                    isNonNull: true),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'BrandWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Brand'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'removeBrand'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'BrandWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Brand'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'createCategory'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'createCategoryInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'CategoryCreateInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Category'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'updateCategory'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'updateCategoryInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'CategoryUpdateInput'),
                    isNonNull: true),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'CategoryWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Category'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'removeCategory'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'CategoryWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Category'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'createAddress'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'createAddressInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'AddressCreateInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Address'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'updateAddress'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'updateAddressInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'AddressUpdateInput'),
                    isNonNull: true),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'AddressWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Address'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'removeAddress'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'AddressWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Address'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'createCountry'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'createCountryInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'CountryCreateInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Country'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'updateCountry'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'updateCountryInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'CountryUpdateInput'),
                    isNonNull: true),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'CountryWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Country'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'removeCountry'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'CountryWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Country'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'createTelephone'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'createTelephoneInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'TelephoneCreateInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Telephone'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'updateTelephone'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'updateTelephoneInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'TelephoneUpdateInput'),
                    isNonNull: true),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'TelephoneWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Telephone'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'removeTelephone'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'TelephoneWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Telephone'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'createChannel'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'createChannelInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ChannelCreateInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Channel'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'updateChannel'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'updateChannelInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ChannelUpdateInput'),
                    isNonNull: true),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ChannelWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Channel'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'removeChannel'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'ChannelWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Channel'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'createGender'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'createGenderInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'GenderCreateInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Gender'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'updateGender'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'updateGenderInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'GenderUpdateInput'),
                    isNonNull: true),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'GenderWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Gender'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'removeGender'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'GenderWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Gender'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'createDuration'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'createDurationInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'DurationCreateInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Duration'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'updateDuration'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'updateDurationInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'DurationUpdateInput'),
                    isNonNull: true),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'DurationWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Duration'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'removeDuration'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'DurationWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Duration'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'createTimespan'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'createTimespanInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'TimespanCreateInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Timespan'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'updateTimespan'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'updateTimespanInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'TimespanUpdateInput'),
                    isNonNull: true),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'TimespanWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Timespan'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'removeTimespan'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'TimespanWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Timespan'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'createHistory'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'createHistoryInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'HistoryCreateInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'History'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'updateHistory'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'updateHistoryInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'HistoryUpdateInput'),
                    isNonNull: true),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'HistoryWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'History'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'removeHistory'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'HistoryWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'History'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'createEvent'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'createEventInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'EventCreateInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Event'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'updateEvent'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'updateEventInput'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'EventUpdateInput'),
                    isNonNull: true),
                defaultValue: null),
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'EventWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Event'), isNonNull: true)),
      _i1.FieldDefinitionNode(
          name: _i1.NameNode(value: 'removeEvent'),
          directives: [],
          args: [
            _i1.InputValueDefinitionNode(
                name: _i1.NameNode(value: 'where'),
                directives: [],
                type: _i1.NamedTypeNode(
                    name: _i1.NameNode(value: 'EventWhereUniqueInput'),
                    isNonNull: true),
                defaultValue: null)
          ],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Event'), isNonNull: true))
    ]);
const ClothStyleCreateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothStyleCreateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_clothStyle_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothCreateNestedManyWithoutClothStylesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Person_clothStyle_persons'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateNestedManyWithoutClothStylesInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothCreateNestedManyWithoutClothStylesInput =
    _i1.InputObjectTypeDefinitionNode(
        name:
            _i1.NameNode(value: 'ClothCreateNestedManyWithoutClothStylesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name:
                      _i1.NameNode(value: 'ClothCreateWithoutClothStylesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'ClothCreateOrConnectWithoutClothStylesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothCreateWithoutClothStylesInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothCreateWithoutClothStylesInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'code'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Material'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'MaterialCreateNestedOneWithoutCloth_material_clothsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ItemCreateNestedOneWithoutCloth_item_clothInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothSizeCreateNestedManyWithoutCloth_clothSize_clothInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'HistoryCreateNestedOneWithoutCloth_history_clothInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Wardrobe'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'WardrobeCreateNestedOneWithoutClothsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const MaterialCreateNestedOneWithoutCloth_material_clothsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'MaterialCreateNestedOneWithoutCloth_material_clothsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'MaterialCreateWithoutCloth_material_clothsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'MaterialCreateOrConnectWithoutCloth_material_clothsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'MaterialWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const MaterialCreateWithoutCloth_material_clothsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'MaterialCreateWithoutCloth_material_clothsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null)
    ]);
const MaterialCreateOrConnectWithoutCloth_material_clothsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'MaterialCreateOrConnectWithoutCloth_material_clothsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'MaterialWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'MaterialCreateWithoutCloth_material_clothsInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ItemCreateNestedOneWithoutCloth_item_clothInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ItemCreateNestedOneWithoutCloth_item_clothInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'ItemCreateWithoutCloth_item_clothInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ItemCreateOrConnectWithoutCloth_item_clothInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemCreateWithoutCloth_item_clothInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'ItemCreateWithoutCloth_item_clothInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'active'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'description'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Category'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'CategoryCreateNestedOneWithoutItem_category_itemsInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Value'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'MoneyCreateNestedOneWithoutItem_value_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Colors'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ColorCreateNestedManyWithoutItem_color_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemGenderCreateNestedManyWithoutItems_itemGender_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Pictures'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'PictureCreateNestedManyWithoutItem_picture_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Condition'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ConditionCreateNestedOneWithoutItem_condition_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Owner'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateNestedOneWithoutItem_owner_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Booster'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'BoosterCreateNestedManyWithoutItem_booster_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_item_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageCreateNestedManyWithoutItemsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const CategoryCreateNestedOneWithoutItem_category_itemsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'CategoryCreateNestedOneWithoutItem_category_itemsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryCreateWithoutItem_category_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'CategoryCreateOrConnectWithoutItem_category_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'CategoryWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const CategoryCreateWithoutItem_category_itemsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'CategoryCreateWithoutItem_category_itemsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothSizeCreateNestedManyWithoutCategoriesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Brand_category_brands'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'BrandCreateNestedManyWithoutCategoriesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ParentCategory'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryCreateNestedOneWithoutSubCategoriesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'SubCategories'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryCreateNestedManyWithoutParentCategoryInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothSizeCreateNestedManyWithoutCategoriesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ClothSizeCreateNestedManyWithoutCategoriesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'ClothSizeCreateWithoutCategoriesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'ClothSizeCreateOrConnectWithoutCategoriesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothSizeWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothSizeCreateWithoutCategoriesInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothSizeCreateWithoutCategoriesInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'SizeModel'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SizeModel'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_clothSize_cloth'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothCreateNestedManyWithoutClothSizesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Person_clothSize_persons'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateNestedManyWithoutClothSizesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ComparableTo'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothSizeCreateNestedManyWithoutClothSizeInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSize'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothSizeCreateNestedManyWithoutComparableToInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothCreateNestedManyWithoutClothSizesInput =
    _i1.InputObjectTypeDefinitionNode(
        name:
            _i1.NameNode(value: 'ClothCreateNestedManyWithoutClothSizesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name:
                      _i1.NameNode(value: 'ClothCreateWithoutClothSizesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'ClothCreateOrConnectWithoutClothSizesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothCreateWithoutClothSizesInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothCreateWithoutClothSizesInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'code'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Material'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'MaterialCreateNestedOneWithoutCloth_material_clothsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ItemCreateNestedOneWithoutCloth_item_clothInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothStyles'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothStyleCreateNestedManyWithoutItem_clothStyle_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'HistoryCreateNestedOneWithoutCloth_history_clothInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Wardrobe'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'WardrobeCreateNestedOneWithoutClothsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothStyleCreateNestedManyWithoutItem_clothStyle_itemsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'ClothStyleCreateNestedManyWithoutItem_clothStyle_itemsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ClothStyleCreateWithoutItem_clothStyle_itemsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ClothStyleCreateOrConnectWithoutItem_clothStyle_itemsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothStyleWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothStyleCreateWithoutItem_clothStyle_itemsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ClothStyleCreateWithoutItem_clothStyle_itemsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Person_clothStyle_persons'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateNestedManyWithoutClothStylesInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonCreateNestedManyWithoutClothStylesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'PersonCreateNestedManyWithoutClothStylesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'PersonCreateWithoutClothStylesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'PersonCreateOrConnectWithoutClothStylesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonCreateWithoutClothStylesInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PersonCreateWithoutClothStylesInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'email'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'birthday'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'firstName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lastName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Gender'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'GenderCreateNestedOneWithoutProfile_gender_profilesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemGenderCreateNestedManyWithoutPerson_itemGender_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryCreateNestedOneWithoutUser_history_userInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Telephone'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TelephoneCreateNestedOneWithoutPerson_telephone_personInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Address'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'AddressCreateNestedManyWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Picture'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PictureCreateNestedOneWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothSizeCreateNestedManyWithoutPerson_clothSize_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Event_who_events'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventCreateNestedManyWithoutWhoInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_owner_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'ItemCreateNestedManyWithoutOwnerInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Channel'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ChannelCreateNestedOneWithoutParticipantsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_wantedBy_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageCreateNestedManyWithoutWantedByInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_from_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageCreateNestedManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Rating_person_ratings'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'RatingCreateNestedManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const GenderCreateNestedOneWithoutProfile_gender_profilesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'GenderCreateNestedOneWithoutProfile_gender_profilesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'GenderCreateWithoutProfile_gender_profilesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'GenderCreateOrConnectWithoutProfile_gender_profilesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'GenderWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const GenderCreateWithoutProfile_gender_profilesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'GenderCreateWithoutProfile_gender_profilesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null)
    ]);
const GenderCreateOrConnectWithoutProfile_gender_profilesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'GenderCreateOrConnectWithoutProfile_gender_profilesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'GenderWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'GenderCreateWithoutProfile_gender_profilesInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ItemGenderCreateNestedManyWithoutPerson_itemGender_personsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'ItemGenderCreateNestedManyWithoutPerson_itemGender_personsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ItemGenderCreateWithoutPerson_itemGender_personsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ItemGenderCreateOrConnectWithoutPerson_itemGender_personsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemGenderWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemGenderCreateWithoutPerson_itemGender_personsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ItemGenderCreateWithoutPerson_itemGender_personsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Items_itemGender_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ItemCreateNestedManyWithoutItemGendersInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemCreateNestedManyWithoutItemGendersInput =
    _i1.InputObjectTypeDefinitionNode(
        name:
            _i1.NameNode(value: 'ItemCreateNestedManyWithoutItemGendersInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name:
                      _i1.NameNode(value: 'ItemCreateWithoutItemGendersInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'ItemCreateOrConnectWithoutItemGendersInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemCreateWithoutItemGendersInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemCreateWithoutItemGendersInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'active'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'description'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Category'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'CategoryCreateNestedOneWithoutItem_category_itemsInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Value'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'MoneyCreateNestedOneWithoutItem_value_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Colors'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ColorCreateNestedManyWithoutItem_color_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Pictures'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'PictureCreateNestedManyWithoutItem_picture_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Condition'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ConditionCreateNestedOneWithoutItem_condition_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Owner'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateNestedOneWithoutItem_owner_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Booster'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'BoosterCreateNestedManyWithoutItem_booster_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_item_cloth'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothCreateNestedOneWithoutItemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_item_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageCreateNestedManyWithoutItemsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const MoneyCreateNestedOneWithoutItem_value_itemInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'MoneyCreateNestedOneWithoutItem_value_itemInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'MoneyCreateWithoutItem_value_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'MoneyCreateOrConnectWithoutItem_value_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'MoneyWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const MoneyCreateWithoutItem_value_itemInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'MoneyCreateWithoutItem_value_itemInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'value'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Float'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Currency'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Currency'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'HistoryCreateNestedOneWithoutMoney_history_moneyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'SubscriptionPlan_money_subscriptionPlans'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'SubscriptionPlanCreateNestedOneWithoutStandardPriceInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Subscription_money_subscription'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'SubscriptionCreateNestedOneWithoutPriceInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const HistoryCreateNestedOneWithoutMoney_history_moneyInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'HistoryCreateNestedOneWithoutMoney_history_moneyInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryCreateWithoutMoney_history_moneyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'HistoryCreateOrConnectWithoutMoney_history_moneyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const HistoryCreateWithoutMoney_history_moneyInput =
    _i1.InputObjectTypeDefinitionNode(
        name:
            _i1.NameNode(value: 'HistoryCreateWithoutMoney_history_moneyInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Created'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'EventCreateNestedOneWithoutHistory_created_historyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Updated'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'EventCreateNestedManyWithoutHistory_updated_historyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Deleted'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'EventCreateNestedOneWithoutHistory_deleted_historyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'User_history_user'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateNestedOneWithoutHistoryInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_history_cloth'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothCreateNestedOneWithoutHistoryInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const EventCreateNestedOneWithoutHistory_created_historyInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'EventCreateNestedOneWithoutHistory_created_historyInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'EventCreateWithoutHistory_created_historyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'EventCreateOrConnectWithoutHistory_created_historyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const EventCreateWithoutHistory_created_historyInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'EventCreateWithoutHistory_created_historyInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'when'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'what'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'from'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'JSON'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'to'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'JSON'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Who'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateNestedOneWithoutEvent_who_eventsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History_updated_history'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryCreateNestedOneWithoutUpdatedInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History_deleted_history'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryCreateNestedOneWithoutDeletedInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonCreateNestedOneWithoutEvent_who_eventsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'PersonCreateNestedOneWithoutEvent_who_eventsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateWithoutEvent_who_eventsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateOrConnectWithoutEvent_who_eventsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonCreateWithoutEvent_who_eventsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'PersonCreateWithoutEvent_who_eventsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'email'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'birthday'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'firstName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lastName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Gender'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'GenderCreateNestedOneWithoutProfile_gender_profilesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemGenderCreateNestedManyWithoutPerson_itemGender_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryCreateNestedOneWithoutUser_history_userInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Telephone'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TelephoneCreateNestedOneWithoutPerson_telephone_personInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Address'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'AddressCreateNestedManyWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Picture'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PictureCreateNestedOneWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothSizeCreateNestedManyWithoutPerson_clothSize_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothStyles'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothStyleCreateNestedManyWithoutPerson_clothStyle_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_owner_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'ItemCreateNestedManyWithoutOwnerInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Channel'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ChannelCreateNestedOneWithoutParticipantsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_wantedBy_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageCreateNestedManyWithoutWantedByInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_from_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageCreateNestedManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Rating_person_ratings'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'RatingCreateNestedManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const HistoryCreateNestedOneWithoutUser_history_userInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'HistoryCreateNestedOneWithoutUser_history_userInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryCreateWithoutUser_history_userInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryCreateOrConnectWithoutUser_history_userInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const HistoryCreateWithoutUser_history_userInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'HistoryCreateWithoutUser_history_userInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Created'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'EventCreateNestedOneWithoutHistory_created_historyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Updated'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'EventCreateNestedManyWithoutHistory_updated_historyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Deleted'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'EventCreateNestedOneWithoutHistory_deleted_historyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Money_history_money'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'MoneyCreateNestedOneWithoutHistoryInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_history_cloth'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothCreateNestedOneWithoutHistoryInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const EventCreateNestedManyWithoutHistory_updated_historyInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'EventCreateNestedManyWithoutHistory_updated_historyInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'EventCreateWithoutHistory_updated_historyInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'EventCreateOrConnectWithoutHistory_updated_historyInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'createMany'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'EventCreateManyHistory_updated_historyInputEnvelope'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'EventWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const EventCreateWithoutHistory_updated_historyInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'EventCreateWithoutHistory_updated_historyInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'when'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'what'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'from'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'JSON'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'to'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'JSON'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Who'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateNestedOneWithoutEvent_who_eventsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History_created_history'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryCreateNestedOneWithoutCreatedInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History_deleted_history'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryCreateNestedOneWithoutDeletedInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const HistoryCreateNestedOneWithoutCreatedInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'HistoryCreateNestedOneWithoutCreatedInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryCreateWithoutCreatedInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryCreateOrConnectWithoutCreatedInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const HistoryCreateWithoutCreatedInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'HistoryCreateWithoutCreatedInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Updated'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'EventCreateNestedManyWithoutHistory_updated_historyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Deleted'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'EventCreateNestedOneWithoutHistory_deleted_historyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'User_history_user'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateNestedOneWithoutHistoryInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Money_history_money'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'MoneyCreateNestedOneWithoutHistoryInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_history_cloth'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothCreateNestedOneWithoutHistoryInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const EventCreateNestedOneWithoutHistory_deleted_historyInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'EventCreateNestedOneWithoutHistory_deleted_historyInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'EventCreateWithoutHistory_deleted_historyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'EventCreateOrConnectWithoutHistory_deleted_historyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const EventCreateWithoutHistory_deleted_historyInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'EventCreateWithoutHistory_deleted_historyInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'when'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'what'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'from'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'JSON'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'to'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'JSON'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Who'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateNestedOneWithoutEvent_who_eventsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History_created_history'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryCreateNestedOneWithoutCreatedInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History_updated_history'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryCreateNestedOneWithoutUpdatedInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const HistoryCreateNestedOneWithoutUpdatedInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'HistoryCreateNestedOneWithoutUpdatedInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryCreateWithoutUpdatedInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryCreateOrConnectWithoutUpdatedInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const HistoryCreateWithoutUpdatedInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'HistoryCreateWithoutUpdatedInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Created'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'EventCreateNestedOneWithoutHistory_created_historyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Deleted'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'EventCreateNestedOneWithoutHistory_deleted_historyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'User_history_user'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateNestedOneWithoutHistoryInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Money_history_money'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'MoneyCreateNestedOneWithoutHistoryInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_history_cloth'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothCreateNestedOneWithoutHistoryInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonCreateNestedOneWithoutHistoryInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'PersonCreateNestedOneWithoutHistoryInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonCreateWithoutHistoryInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateOrConnectWithoutHistoryInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonCreateWithoutHistoryInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PersonCreateWithoutHistoryInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'email'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'birthday'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'firstName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lastName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Gender'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'GenderCreateNestedOneWithoutProfile_gender_profilesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemGenderCreateNestedManyWithoutPerson_itemGender_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Telephone'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TelephoneCreateNestedOneWithoutPerson_telephone_personInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Address'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'AddressCreateNestedManyWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Picture'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PictureCreateNestedOneWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothSizeCreateNestedManyWithoutPerson_clothSize_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothStyles'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothStyleCreateNestedManyWithoutPerson_clothStyle_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Event_who_events'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventCreateNestedManyWithoutWhoInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_owner_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'ItemCreateNestedManyWithoutOwnerInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Channel'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ChannelCreateNestedOneWithoutParticipantsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_wantedBy_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageCreateNestedManyWithoutWantedByInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_from_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageCreateNestedManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Rating_person_ratings'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'RatingCreateNestedManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const TelephoneCreateNestedOneWithoutPerson_telephone_personInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'TelephoneCreateNestedOneWithoutPerson_telephone_personInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TelephoneCreateWithoutPerson_telephone_personInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TelephoneCreateOrConnectWithoutPerson_telephone_personInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TelephoneWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const TelephoneCreateWithoutPerson_telephone_personInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'TelephoneCreateWithoutPerson_telephone_personInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'telephoneNumber'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null)
    ]);
const TelephoneCreateOrConnectWithoutPerson_telephone_personInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'TelephoneCreateOrConnectWithoutPerson_telephone_personInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TelephoneWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TelephoneCreateWithoutPerson_telephone_personInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const AddressCreateNestedManyWithoutPersonInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'AddressCreateNestedManyWithoutPersonInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'AddressCreateWithoutPersonInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'AddressCreateOrConnectWithoutPersonInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'createMany'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressCreateManyPersonInputEnvelope'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'AddressWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const AddressCreateWithoutPersonInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'AddressCreateWithoutPersonInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'line1'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'line2'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'city'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'province'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'zip'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Country'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'CountryCreateNestedOneWithoutAddress_county_addressesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Wardrobes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'WardrobeCreateNestedManyWithoutAddressInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const CountryCreateNestedOneWithoutAddress_county_addressesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'CountryCreateNestedOneWithoutAddress_county_addressesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CountryCreateWithoutAddress_county_addressesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'CountryCreateOrConnectWithoutAddress_county_addressesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'CountryWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const CountryCreateWithoutAddress_county_addressesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'CountryCreateWithoutAddress_county_addressesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: true),
          defaultValue: null)
    ]);
const CountryCreateOrConnectWithoutAddress_county_addressesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'CountryCreateOrConnectWithoutAddress_county_addressesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'CountryWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CountryCreateWithoutAddress_county_addressesInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const WardrobeCreateNestedManyWithoutAddressInput =
    _i1.InputObjectTypeDefinitionNode(
        name:
            _i1.NameNode(value: 'WardrobeCreateNestedManyWithoutAddressInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name:
                      _i1.NameNode(value: 'WardrobeCreateWithoutAddressInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'WardrobeCreateOrConnectWithoutAddressInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'createMany'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'WardrobeCreateManyAddressInputEnvelope'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'WardrobeWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const WardrobeCreateWithoutAddressInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'WardrobeCreateWithoutAddressInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloths'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothCreateNestedManyWithoutWardrobeInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothCreateNestedManyWithoutWardrobeInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'ClothCreateNestedManyWithoutWardrobeInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothCreateWithoutWardrobeInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'ClothCreateOrConnectWithoutWardrobeInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'createMany'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothCreateManyWardrobeInputEnvelope'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothCreateWithoutWardrobeInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothCreateWithoutWardrobeInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'code'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Material'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'MaterialCreateNestedOneWithoutCloth_material_clothsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ItemCreateNestedOneWithoutCloth_item_clothInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothSizeCreateNestedManyWithoutCloth_clothSize_clothInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothStyles'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothStyleCreateNestedManyWithoutItem_clothStyle_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'HistoryCreateNestedOneWithoutCloth_history_clothInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothSizeCreateNestedManyWithoutCloth_clothSize_clothInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'ClothSizeCreateNestedManyWithoutCloth_clothSize_clothInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ClothSizeCreateWithoutCloth_clothSize_clothInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ClothSizeCreateOrConnectWithoutCloth_clothSize_clothInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothSizeWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothSizeCreateWithoutCloth_clothSize_clothInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ClothSizeCreateWithoutCloth_clothSize_clothInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'SizeModel'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SizeModel'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Categories'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryCreateNestedManyWithoutClothSizesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Person_clothSize_persons'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateNestedManyWithoutClothSizesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ComparableTo'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothSizeCreateNestedManyWithoutClothSizeInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSize'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothSizeCreateNestedManyWithoutComparableToInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const CategoryCreateNestedManyWithoutClothSizesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'CategoryCreateNestedManyWithoutClothSizesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'CategoryCreateWithoutClothSizesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'CategoryCreateOrConnectWithoutClothSizesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'CategoryWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const CategoryCreateWithoutClothSizesInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'CategoryCreateWithoutClothSizesInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Brand_category_brands'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'BrandCreateNestedManyWithoutCategoriesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_category_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ItemCreateNestedManyWithoutCategoryInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ParentCategory'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryCreateNestedOneWithoutSubCategoriesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'SubCategories'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryCreateNestedManyWithoutParentCategoryInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const BrandCreateNestedManyWithoutCategoriesInput =
    _i1.InputObjectTypeDefinitionNode(
        name:
            _i1.NameNode(value: 'BrandCreateNestedManyWithoutCategoriesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name:
                      _i1.NameNode(value: 'BrandCreateWithoutCategoriesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'BrandCreateOrConnectWithoutCategoriesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'BrandWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const BrandCreateWithoutCategoriesInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'BrandCreateWithoutCategoriesInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null)
    ]);
const BrandCreateOrConnectWithoutCategoriesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'BrandCreateOrConnectWithoutCategoriesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'BrandWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'BrandCreateWithoutCategoriesInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ItemCreateNestedManyWithoutCategoryInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'ItemCreateNestedManyWithoutCategoryInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemCreateWithoutCategoryInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'ItemCreateOrConnectWithoutCategoryInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'createMany'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemCreateManyCategoryInputEnvelope'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemCreateWithoutCategoryInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemCreateWithoutCategoryInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'active'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'description'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Value'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'MoneyCreateNestedOneWithoutItem_value_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Colors'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ColorCreateNestedManyWithoutItem_color_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemGenderCreateNestedManyWithoutItems_itemGender_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Pictures'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'PictureCreateNestedManyWithoutItem_picture_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Condition'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ConditionCreateNestedOneWithoutItem_condition_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Owner'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateNestedOneWithoutItem_owner_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Booster'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'BoosterCreateNestedManyWithoutItem_booster_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_item_cloth'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothCreateNestedOneWithoutItemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_item_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageCreateNestedManyWithoutItemsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ColorCreateNestedManyWithoutItem_color_itemsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ColorCreateNestedManyWithoutItem_color_itemsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'ColorCreateWithoutItem_color_itemsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ColorCreateOrConnectWithoutItem_color_itemsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ColorWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const ColorCreateWithoutItem_color_itemsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'ColorCreateWithoutItem_color_itemsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Type'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ColorType'), isNonNull: false),
          defaultValue: null)
    ]);
const ColorCreateOrConnectWithoutItem_color_itemsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ColorCreateOrConnectWithoutItem_color_itemsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ColorWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ColorCreateWithoutItem_color_itemsInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ItemGenderCreateNestedManyWithoutItems_itemGender_itemsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'ItemGenderCreateNestedManyWithoutItems_itemGender_itemsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ItemGenderCreateWithoutItems_itemGender_itemsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ItemGenderCreateOrConnectWithoutItems_itemGender_itemsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemGenderWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemGenderCreateWithoutItems_itemGender_itemsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ItemGenderCreateWithoutItems_itemGender_itemsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Person_itemGender_persons'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateNestedManyWithoutItemGendersInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonCreateNestedManyWithoutItemGendersInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'PersonCreateNestedManyWithoutItemGendersInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'PersonCreateWithoutItemGendersInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'PersonCreateOrConnectWithoutItemGendersInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonCreateWithoutItemGendersInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PersonCreateWithoutItemGendersInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'email'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'birthday'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'firstName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lastName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Gender'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'GenderCreateNestedOneWithoutProfile_gender_profilesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryCreateNestedOneWithoutUser_history_userInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Telephone'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TelephoneCreateNestedOneWithoutPerson_telephone_personInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Address'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'AddressCreateNestedManyWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Picture'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PictureCreateNestedOneWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothSizeCreateNestedManyWithoutPerson_clothSize_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothStyles'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothStyleCreateNestedManyWithoutPerson_clothStyle_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Event_who_events'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventCreateNestedManyWithoutWhoInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_owner_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'ItemCreateNestedManyWithoutOwnerInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Channel'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ChannelCreateNestedOneWithoutParticipantsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_wantedBy_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageCreateNestedManyWithoutWantedByInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_from_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageCreateNestedManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Rating_person_ratings'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'RatingCreateNestedManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PictureCreateNestedOneWithoutPersonInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'PictureCreateNestedOneWithoutPersonInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureCreateWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PictureCreateOrConnectWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PictureCreateWithoutPersonInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PictureCreateWithoutPersonInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'LQ'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'FileCreateNestedOneWithoutFile_lqPictureFile_fileInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'MQ'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'FileCreateNestedOneWithoutFile_mqPictureFile_fileInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'HQ'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'FileCreateNestedOneWithoutFile_hqPictureFile_fileInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_picture_item'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ItemCreateNestedOneWithoutPicturesInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const FileCreateNestedOneWithoutFile_lqPictureFile_fileInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'FileCreateNestedOneWithoutFile_lqPictureFile_fileInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'FileCreateWithoutFile_lqPictureFile_fileInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'FileCreateOrConnectWithoutFile_lqPictureFile_fileInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'FileWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const FileCreateWithoutFile_lqPictureFile_fileInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'FileCreateWithoutFile_lqPictureFile_fileInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'extension'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'File_mqPictureFile_file'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureCreateNestedOneWithoutMQInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'File_hqPictureFile_file'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureCreateNestedOneWithoutHQInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PictureCreateNestedOneWithoutMQInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PictureCreateNestedOneWithoutMQInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureCreateWithoutMQInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureCreateOrConnectWithoutMQInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PictureCreateWithoutMQInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PictureCreateWithoutMQInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'LQ'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'FileCreateNestedOneWithoutFile_lqPictureFile_fileInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'HQ'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'FileCreateNestedOneWithoutFile_hqPictureFile_fileInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Person'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateNestedOneWithoutPictureInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_picture_item'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ItemCreateNestedOneWithoutPicturesInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const FileCreateNestedOneWithoutFile_hqPictureFile_fileInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'FileCreateNestedOneWithoutFile_hqPictureFile_fileInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'FileCreateWithoutFile_hqPictureFile_fileInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'FileCreateOrConnectWithoutFile_hqPictureFile_fileInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'FileWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const FileCreateWithoutFile_hqPictureFile_fileInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'FileCreateWithoutFile_hqPictureFile_fileInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'extension'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'File_lqPictureFile_file'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureCreateNestedOneWithoutLQInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'File_mqPictureFile_file'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureCreateNestedOneWithoutMQInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PictureCreateNestedOneWithoutLQInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PictureCreateNestedOneWithoutLQInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureCreateWithoutLQInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureCreateOrConnectWithoutLQInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PictureCreateWithoutLQInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PictureCreateWithoutLQInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'MQ'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'FileCreateNestedOneWithoutFile_mqPictureFile_fileInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'HQ'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'FileCreateNestedOneWithoutFile_hqPictureFile_fileInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Person'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateNestedOneWithoutPictureInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_picture_item'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ItemCreateNestedOneWithoutPicturesInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const FileCreateNestedOneWithoutFile_mqPictureFile_fileInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'FileCreateNestedOneWithoutFile_mqPictureFile_fileInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'FileCreateWithoutFile_mqPictureFile_fileInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'FileCreateOrConnectWithoutFile_mqPictureFile_fileInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'FileWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const FileCreateWithoutFile_mqPictureFile_fileInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'FileCreateWithoutFile_mqPictureFile_fileInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'extension'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'File_lqPictureFile_file'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureCreateNestedOneWithoutLQInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'File_hqPictureFile_file'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureCreateNestedOneWithoutHQInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PictureCreateNestedOneWithoutHQInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PictureCreateNestedOneWithoutHQInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureCreateWithoutHQInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureCreateOrConnectWithoutHQInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PictureCreateWithoutHQInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PictureCreateWithoutHQInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'LQ'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'FileCreateNestedOneWithoutFile_lqPictureFile_fileInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'MQ'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'FileCreateNestedOneWithoutFile_mqPictureFile_fileInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Person'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateNestedOneWithoutPictureInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_picture_item'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ItemCreateNestedOneWithoutPicturesInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonCreateNestedOneWithoutPictureInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'PersonCreateNestedOneWithoutPictureInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonCreateWithoutPictureInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateOrConnectWithoutPictureInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonCreateWithoutPictureInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PersonCreateWithoutPictureInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'email'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'birthday'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'firstName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lastName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Gender'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'GenderCreateNestedOneWithoutProfile_gender_profilesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemGenderCreateNestedManyWithoutPerson_itemGender_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryCreateNestedOneWithoutUser_history_userInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Telephone'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TelephoneCreateNestedOneWithoutPerson_telephone_personInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Address'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'AddressCreateNestedManyWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothSizeCreateNestedManyWithoutPerson_clothSize_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothStyles'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothStyleCreateNestedManyWithoutPerson_clothStyle_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Event_who_events'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventCreateNestedManyWithoutWhoInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_owner_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'ItemCreateNestedManyWithoutOwnerInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Channel'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ChannelCreateNestedOneWithoutParticipantsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_wantedBy_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageCreateNestedManyWithoutWantedByInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_from_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageCreateNestedManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Rating_person_ratings'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'RatingCreateNestedManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothSizeCreateNestedManyWithoutPerson_clothSize_personsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'ClothSizeCreateNestedManyWithoutPerson_clothSize_personsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ClothSizeCreateWithoutPerson_clothSize_personsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ClothSizeCreateOrConnectWithoutPerson_clothSize_personsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothSizeWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothSizeCreateWithoutPerson_clothSize_personsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ClothSizeCreateWithoutPerson_clothSize_personsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'SizeModel'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SizeModel'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Categories'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryCreateNestedManyWithoutClothSizesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_clothSize_cloth'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothCreateNestedManyWithoutClothSizesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ComparableTo'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothSizeCreateNestedManyWithoutClothSizeInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSize'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothSizeCreateNestedManyWithoutComparableToInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothSizeCreateNestedManyWithoutClothSizeInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ClothSizeCreateNestedManyWithoutClothSizeInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'ClothSizeCreateWithoutClothSizeInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'ClothSizeCreateOrConnectWithoutClothSizeInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothSizeWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothSizeCreateWithoutClothSizeInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothSizeCreateWithoutClothSizeInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'SizeModel'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SizeModel'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Categories'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryCreateNestedManyWithoutClothSizesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_clothSize_cloth'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothCreateNestedManyWithoutClothSizesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Person_clothSize_persons'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateNestedManyWithoutClothSizesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ComparableTo'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothSizeCreateNestedManyWithoutClothSizeInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonCreateNestedManyWithoutClothSizesInput =
    _i1.InputObjectTypeDefinitionNode(
        name:
            _i1.NameNode(value: 'PersonCreateNestedManyWithoutClothSizesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name:
                      _i1.NameNode(value: 'PersonCreateWithoutClothSizesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'PersonCreateOrConnectWithoutClothSizesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonCreateWithoutClothSizesInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PersonCreateWithoutClothSizesInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'email'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'birthday'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'firstName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lastName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Gender'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'GenderCreateNestedOneWithoutProfile_gender_profilesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemGenderCreateNestedManyWithoutPerson_itemGender_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryCreateNestedOneWithoutUser_history_userInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Telephone'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TelephoneCreateNestedOneWithoutPerson_telephone_personInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Address'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'AddressCreateNestedManyWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Picture'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PictureCreateNestedOneWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothStyles'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothStyleCreateNestedManyWithoutPerson_clothStyle_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Event_who_events'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventCreateNestedManyWithoutWhoInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_owner_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'ItemCreateNestedManyWithoutOwnerInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Channel'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ChannelCreateNestedOneWithoutParticipantsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_wantedBy_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageCreateNestedManyWithoutWantedByInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_from_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageCreateNestedManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Rating_person_ratings'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'RatingCreateNestedManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothStyleCreateNestedManyWithoutPerson_clothStyle_personsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'ClothStyleCreateNestedManyWithoutPerson_clothStyle_personsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ClothStyleCreateWithoutPerson_clothStyle_personsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ClothStyleCreateOrConnectWithoutPerson_clothStyle_personsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothStyleWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothStyleCreateWithoutPerson_clothStyle_personsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ClothStyleCreateWithoutPerson_clothStyle_personsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_clothStyle_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothCreateNestedManyWithoutClothStylesInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothStyleCreateOrConnectWithoutPerson_clothStyle_personsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'ClothStyleCreateOrConnectWithoutPerson_clothStyle_personsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothStyleWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothStyleCreateWithoutPerson_clothStyle_personsInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const EventCreateNestedManyWithoutWhoInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'EventCreateNestedManyWithoutWhoInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'EventCreateWithoutWhoInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'EventCreateOrConnectWithoutWhoInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'createMany'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventCreateManyWhoInputEnvelope'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'EventWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const EventCreateWithoutWhoInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'EventCreateWithoutWhoInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'when'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'what'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'from'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'JSON'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'to'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'JSON'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History_created_history'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryCreateNestedOneWithoutCreatedInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History_updated_history'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryCreateNestedOneWithoutUpdatedInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History_deleted_history'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryCreateNestedOneWithoutDeletedInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const HistoryCreateNestedOneWithoutDeletedInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'HistoryCreateNestedOneWithoutDeletedInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryCreateWithoutDeletedInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryCreateOrConnectWithoutDeletedInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const HistoryCreateWithoutDeletedInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'HistoryCreateWithoutDeletedInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Created'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'EventCreateNestedOneWithoutHistory_created_historyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Updated'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'EventCreateNestedManyWithoutHistory_updated_historyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'User_history_user'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateNestedOneWithoutHistoryInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Money_history_money'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'MoneyCreateNestedOneWithoutHistoryInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_history_cloth'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothCreateNestedOneWithoutHistoryInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const MoneyCreateNestedOneWithoutHistoryInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'MoneyCreateNestedOneWithoutHistoryInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'MoneyCreateWithoutHistoryInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'MoneyCreateOrConnectWithoutHistoryInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'MoneyWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const MoneyCreateWithoutHistoryInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'MoneyCreateWithoutHistoryInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'value'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Float'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Currency'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Currency'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_value_item'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemCreateNestedOneWithoutValueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'SubscriptionPlan_money_subscriptionPlans'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'SubscriptionPlanCreateNestedOneWithoutStandardPriceInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Subscription_money_subscription'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'SubscriptionCreateNestedOneWithoutPriceInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemCreateNestedOneWithoutValueInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemCreateNestedOneWithoutValueInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemCreateWithoutValueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemCreateOrConnectWithoutValueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemCreateWithoutValueInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemCreateWithoutValueInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'active'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'description'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Category'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'CategoryCreateNestedOneWithoutItem_category_itemsInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Colors'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ColorCreateNestedManyWithoutItem_color_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemGenderCreateNestedManyWithoutItems_itemGender_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Pictures'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'PictureCreateNestedManyWithoutItem_picture_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Condition'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ConditionCreateNestedOneWithoutItem_condition_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Owner'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateNestedOneWithoutItem_owner_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Booster'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'BoosterCreateNestedManyWithoutItem_booster_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_item_cloth'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothCreateNestedOneWithoutItemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_item_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageCreateNestedManyWithoutItemsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PictureCreateNestedManyWithoutItem_picture_itemInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'PictureCreateNestedManyWithoutItem_picture_itemInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'PictureCreateWithoutItem_picture_itemInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'PictureCreateOrConnectWithoutItem_picture_itemInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'createMany'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PictureCreateManyItem_picture_itemInputEnvelope'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PictureWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const PictureCreateWithoutItem_picture_itemInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'PictureCreateWithoutItem_picture_itemInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'LQ'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'FileCreateNestedOneWithoutFile_lqPictureFile_fileInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'MQ'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'FileCreateNestedOneWithoutFile_mqPictureFile_fileInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'HQ'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'FileCreateNestedOneWithoutFile_hqPictureFile_fileInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Person'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateNestedOneWithoutPictureInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PictureCreateOrConnectWithoutItem_picture_itemInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'PictureCreateOrConnectWithoutItem_picture_itemInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PictureCreateWithoutItem_picture_itemInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const PictureCreateManyItem_picture_itemInputEnvelope =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'PictureCreateManyItem_picture_itemInputEnvelope'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'PictureCreateManyItem_picture_itemInput'),
                  isNonNull: true),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'skipDuplicates'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null)
    ]);
const PictureCreateManyItem_picture_itemInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'PictureCreateManyItem_picture_itemInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false),
          defaultValue: null)
    ]);
const ConditionCreateNestedOneWithoutItem_condition_itemsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ConditionCreateNestedOneWithoutItem_condition_itemsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ConditionCreateWithoutItem_condition_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ConditionCreateOrConnectWithoutItem_condition_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ConditionWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ConditionCreateWithoutItem_condition_itemsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ConditionCreateWithoutItem_condition_itemsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: true),
          defaultValue: null)
    ]);
const ConditionCreateOrConnectWithoutItem_condition_itemsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ConditionCreateOrConnectWithoutItem_condition_itemsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ConditionWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ConditionCreateWithoutItem_condition_itemsInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const PersonCreateNestedOneWithoutItem_owner_itemsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'PersonCreateNestedOneWithoutItem_owner_itemsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateWithoutItem_owner_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateOrConnectWithoutItem_owner_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonCreateWithoutItem_owner_itemsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'PersonCreateWithoutItem_owner_itemsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'email'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'birthday'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'firstName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lastName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Gender'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'GenderCreateNestedOneWithoutProfile_gender_profilesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemGenderCreateNestedManyWithoutPerson_itemGender_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryCreateNestedOneWithoutUser_history_userInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Telephone'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TelephoneCreateNestedOneWithoutPerson_telephone_personInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Address'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'AddressCreateNestedManyWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Picture'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PictureCreateNestedOneWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothSizeCreateNestedManyWithoutPerson_clothSize_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothStyles'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothStyleCreateNestedManyWithoutPerson_clothStyle_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Event_who_events'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventCreateNestedManyWithoutWhoInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Channel'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ChannelCreateNestedOneWithoutParticipantsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_wantedBy_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageCreateNestedManyWithoutWantedByInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_from_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageCreateNestedManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Rating_person_ratings'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'RatingCreateNestedManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ChannelCreateNestedOneWithoutParticipantsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ChannelCreateNestedOneWithoutParticipantsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'ChannelCreateWithoutParticipantsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ChannelCreateOrConnectWithoutParticipantsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ChannelWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ChannelCreateWithoutParticipantsInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ChannelCreateWithoutParticipantsInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null)
    ]);
const ChannelCreateOrConnectWithoutParticipantsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ChannelCreateOrConnectWithoutParticipantsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ChannelWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'ChannelCreateWithoutParticipantsInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const TradePackageCreateNestedManyWithoutWantedByInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'TradePackageCreateNestedManyWithoutWantedByInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'TradePackageCreateWithoutWantedByInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'TradePackageCreateOrConnectWithoutWantedByInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'TradePackageWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const TradePackageCreateWithoutWantedByInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'TradePackageCreateWithoutWantedByInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'From'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'PersonCreateNestedOneWithoutTradePackage_from_tradePackagesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemCreateNestedManyWithoutTradePackage_item_tradePackagesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Offer_tradePackage_offers'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'OfferCreateNestedManyWithoutTradePackagesInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonCreateNestedOneWithoutTradePackage_from_tradePackagesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'PersonCreateNestedOneWithoutTradePackage_from_tradePackagesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'PersonCreateWithoutTradePackage_from_tradePackagesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'PersonCreateOrConnectWithoutTradePackage_from_tradePackagesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonCreateWithoutTradePackage_from_tradePackagesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'PersonCreateWithoutTradePackage_from_tradePackagesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'email'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'birthday'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'firstName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lastName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Gender'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'GenderCreateNestedOneWithoutProfile_gender_profilesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemGenderCreateNestedManyWithoutPerson_itemGender_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryCreateNestedOneWithoutUser_history_userInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Telephone'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TelephoneCreateNestedOneWithoutPerson_telephone_personInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Address'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'AddressCreateNestedManyWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Picture'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PictureCreateNestedOneWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothSizeCreateNestedManyWithoutPerson_clothSize_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothStyles'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothStyleCreateNestedManyWithoutPerson_clothStyle_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Event_who_events'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventCreateNestedManyWithoutWhoInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_owner_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'ItemCreateNestedManyWithoutOwnerInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Channel'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ChannelCreateNestedOneWithoutParticipantsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_wantedBy_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageCreateNestedManyWithoutWantedByInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Rating_person_ratings'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'RatingCreateNestedManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemCreateNestedManyWithoutOwnerInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemCreateNestedManyWithoutOwnerInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemCreateWithoutOwnerInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'ItemCreateOrConnectWithoutOwnerInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'createMany'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemCreateManyOwnerInputEnvelope'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemCreateWithoutOwnerInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemCreateWithoutOwnerInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'active'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'description'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Category'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'CategoryCreateNestedOneWithoutItem_category_itemsInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Value'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'MoneyCreateNestedOneWithoutItem_value_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Colors'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ColorCreateNestedManyWithoutItem_color_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemGenderCreateNestedManyWithoutItems_itemGender_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Pictures'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'PictureCreateNestedManyWithoutItem_picture_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Condition'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ConditionCreateNestedOneWithoutItem_condition_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Booster'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'BoosterCreateNestedManyWithoutItem_booster_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_item_cloth'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothCreateNestedOneWithoutItemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_item_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageCreateNestedManyWithoutItemsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const BoosterCreateNestedManyWithoutItem_booster_itemInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'BoosterCreateNestedManyWithoutItem_booster_itemInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'BoosterCreateWithoutItem_booster_itemInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'BoosterCreateOrConnectWithoutItem_booster_itemInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'createMany'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'BoosterCreateManyItem_booster_itemInputEnvelope'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'BoosterWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const BoosterCreateWithoutItem_booster_itemInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'BoosterCreateWithoutItem_booster_itemInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Timespan'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TimespanCreateNestedOneWithoutBooster_timespan_boosterInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const TimespanCreateNestedOneWithoutBooster_timespan_boosterInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'TimespanCreateNestedOneWithoutBooster_timespan_boosterInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TimespanCreateWithoutBooster_timespan_boosterInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TimespanCreateOrConnectWithoutBooster_timespan_boosterInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TimespanWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const TimespanCreateWithoutBooster_timespan_boosterInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'TimespanCreateWithoutBooster_timespan_boosterInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'start'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'end'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Subscription_timespan_subscription'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'SubscriptionCreateNestedOneWithoutTimespanInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const SubscriptionCreateNestedOneWithoutTimespanInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'SubscriptionCreateNestedOneWithoutTimespanInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'SubscriptionCreateWithoutTimespanInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'SubscriptionCreateOrConnectWithoutTimespanInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SubscriptionWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const SubscriptionCreateWithoutTimespanInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'SubscriptionCreateWithoutTimespanInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Price'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'MoneyCreateNestedOneWithoutSubscription_money_subscriptionInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Type'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'SubscriptionPlanCreateNestedOneWithoutSubscription_subscriptionType_subscriptionInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const MoneyCreateNestedOneWithoutSubscription_money_subscriptionInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'MoneyCreateNestedOneWithoutSubscription_money_subscriptionInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'MoneyCreateWithoutSubscription_money_subscriptionInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'MoneyCreateOrConnectWithoutSubscription_money_subscriptionInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'MoneyWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const MoneyCreateWithoutSubscription_money_subscriptionInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'MoneyCreateWithoutSubscription_money_subscriptionInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'value'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Float'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Currency'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Currency'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'HistoryCreateNestedOneWithoutMoney_history_moneyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_value_item'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemCreateNestedOneWithoutValueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'SubscriptionPlan_money_subscriptionPlans'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'SubscriptionPlanCreateNestedOneWithoutStandardPriceInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const SubscriptionPlanCreateNestedOneWithoutStandardPriceInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'SubscriptionPlanCreateNestedOneWithoutStandardPriceInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'SubscriptionPlanCreateWithoutStandardPriceInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'SubscriptionPlanCreateOrConnectWithoutStandardPriceInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SubscriptionPlanWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const SubscriptionPlanCreateWithoutStandardPriceInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'SubscriptionPlanCreateWithoutStandardPriceInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'StandardDuration'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'DurationCreateNestedOneWithoutSubscriptionPlan_duration_subscriptionPlanInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name:
              _i1.NameNode(value: 'Subscription_subscriptionType_subscription'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'SubscriptionCreateNestedManyWithoutTypeInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const DurationCreateNestedOneWithoutSubscriptionPlan_duration_subscriptionPlanInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'DurationCreateNestedOneWithoutSubscriptionPlan_duration_subscriptionPlanInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'DurationCreateWithoutSubscriptionPlan_duration_subscriptionPlanInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'DurationCreateOrConnectWithoutSubscriptionPlan_duration_subscriptionPlanInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DurationWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const DurationCreateWithoutSubscriptionPlan_duration_subscriptionPlanInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'DurationCreateWithoutSubscriptionPlan_duration_subscriptionPlanInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'seconds'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'minutes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'hours'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'days'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'weeks'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'months'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'years'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false),
          defaultValue: null)
    ]);
const DurationCreateOrConnectWithoutSubscriptionPlan_duration_subscriptionPlanInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'DurationCreateOrConnectWithoutSubscriptionPlan_duration_subscriptionPlanInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DurationWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'DurationCreateWithoutSubscriptionPlan_duration_subscriptionPlanInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const SubscriptionCreateNestedManyWithoutTypeInput =
    _i1.InputObjectTypeDefinitionNode(
        name:
            _i1.NameNode(value: 'SubscriptionCreateNestedManyWithoutTypeInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name:
                      _i1.NameNode(value: 'SubscriptionCreateWithoutTypeInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'SubscriptionCreateOrConnectWithoutTypeInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'createMany'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'SubscriptionCreateManyTypeInputEnvelope'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'SubscriptionWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const SubscriptionCreateWithoutTypeInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'SubscriptionCreateWithoutTypeInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Price'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'MoneyCreateNestedOneWithoutSubscription_money_subscriptionInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Timespan'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TimespanCreateNestedOneWithoutSubscription_timespan_subscriptionInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const TimespanCreateNestedOneWithoutSubscription_timespan_subscriptionInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'TimespanCreateNestedOneWithoutSubscription_timespan_subscriptionInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TimespanCreateWithoutSubscription_timespan_subscriptionInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TimespanCreateOrConnectWithoutSubscription_timespan_subscriptionInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TimespanWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const TimespanCreateWithoutSubscription_timespan_subscriptionInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'TimespanCreateWithoutSubscription_timespan_subscriptionInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'start'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'end'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Booster_timespan_booster'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'BoosterCreateNestedOneWithoutTimespanInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const BoosterCreateNestedOneWithoutTimespanInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'BoosterCreateNestedOneWithoutTimespanInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'BoosterCreateWithoutTimespanInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'BoosterCreateOrConnectWithoutTimespanInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'BoosterWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const BoosterCreateWithoutTimespanInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'BoosterCreateWithoutTimespanInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_booster_item'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'ItemCreateNestedOneWithoutBoosterInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemCreateNestedOneWithoutBoosterInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'ItemCreateNestedOneWithoutBoosterInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemCreateWithoutBoosterInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'ItemCreateOrConnectWithoutBoosterInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemCreateWithoutBoosterInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemCreateWithoutBoosterInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'active'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'description'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Category'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'CategoryCreateNestedOneWithoutItem_category_itemsInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Value'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'MoneyCreateNestedOneWithoutItem_value_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Colors'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ColorCreateNestedManyWithoutItem_color_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemGenderCreateNestedManyWithoutItems_itemGender_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Pictures'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'PictureCreateNestedManyWithoutItem_picture_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Condition'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ConditionCreateNestedOneWithoutItem_condition_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Owner'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateNestedOneWithoutItem_owner_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_item_cloth'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothCreateNestedOneWithoutItemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_item_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageCreateNestedManyWithoutItemsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothCreateNestedOneWithoutItemInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothCreateNestedOneWithoutItemInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothCreateWithoutItemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothCreateOrConnectWithoutItemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothCreateWithoutItemInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothCreateWithoutItemInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'code'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Material'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'MaterialCreateNestedOneWithoutCloth_material_clothsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothSizeCreateNestedManyWithoutCloth_clothSize_clothInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothStyles'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothStyleCreateNestedManyWithoutItem_clothStyle_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'HistoryCreateNestedOneWithoutCloth_history_clothInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Wardrobe'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'WardrobeCreateNestedOneWithoutClothsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const HistoryCreateNestedOneWithoutCloth_history_clothInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'HistoryCreateNestedOneWithoutCloth_history_clothInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryCreateWithoutCloth_history_clothInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'HistoryCreateOrConnectWithoutCloth_history_clothInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const HistoryCreateWithoutCloth_history_clothInput =
    _i1.InputObjectTypeDefinitionNode(
        name:
            _i1.NameNode(value: 'HistoryCreateWithoutCloth_history_clothInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Created'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'EventCreateNestedOneWithoutHistory_created_historyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Updated'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'EventCreateNestedManyWithoutHistory_updated_historyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Deleted'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'EventCreateNestedOneWithoutHistory_deleted_historyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'User_history_user'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateNestedOneWithoutHistoryInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Money_history_money'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'MoneyCreateNestedOneWithoutHistoryInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const HistoryCreateOrConnectWithoutCloth_history_clothInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'HistoryCreateOrConnectWithoutCloth_history_clothInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryCreateWithoutCloth_history_clothInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const WardrobeCreateNestedOneWithoutClothsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'WardrobeCreateNestedOneWithoutClothsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'WardrobeCreateWithoutClothsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'WardrobeCreateOrConnectWithoutClothsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'WardrobeWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const WardrobeCreateWithoutClothsInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'WardrobeCreateWithoutClothsInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Address'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'AddressCreateNestedOneWithoutWardrobesInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const AddressCreateNestedOneWithoutWardrobesInput =
    _i1.InputObjectTypeDefinitionNode(
        name:
            _i1.NameNode(value: 'AddressCreateNestedOneWithoutWardrobesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressCreateWithoutWardrobesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'AddressCreateOrConnectWithoutWardrobesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const AddressCreateWithoutWardrobesInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'AddressCreateWithoutWardrobesInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'line1'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'line2'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'city'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'province'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'zip'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Country'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'CountryCreateNestedOneWithoutAddress_county_addressesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Person'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateNestedOneWithoutAddressInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonCreateNestedOneWithoutAddressInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'PersonCreateNestedOneWithoutAddressInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonCreateWithoutAddressInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateOrConnectWithoutAddressInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonCreateWithoutAddressInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PersonCreateWithoutAddressInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'email'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'birthday'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'firstName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lastName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Gender'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'GenderCreateNestedOneWithoutProfile_gender_profilesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemGenderCreateNestedManyWithoutPerson_itemGender_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryCreateNestedOneWithoutUser_history_userInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Telephone'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TelephoneCreateNestedOneWithoutPerson_telephone_personInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Picture'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PictureCreateNestedOneWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothSizeCreateNestedManyWithoutPerson_clothSize_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothStyles'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothStyleCreateNestedManyWithoutPerson_clothStyle_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Event_who_events'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventCreateNestedManyWithoutWhoInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_owner_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'ItemCreateNestedManyWithoutOwnerInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Channel'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ChannelCreateNestedOneWithoutParticipantsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_wantedBy_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageCreateNestedManyWithoutWantedByInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_from_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageCreateNestedManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Rating_person_ratings'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'RatingCreateNestedManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const TradePackageCreateNestedManyWithoutFromInput =
    _i1.InputObjectTypeDefinitionNode(
        name:
            _i1.NameNode(value: 'TradePackageCreateNestedManyWithoutFromInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name:
                      _i1.NameNode(value: 'TradePackageCreateWithoutFromInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'TradePackageCreateOrConnectWithoutFromInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'createMany'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageCreateManyFromInputEnvelope'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'TradePackageWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const TradePackageCreateWithoutFromInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'TradePackageCreateWithoutFromInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'WantedBy'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'PersonCreateNestedManyWithoutTradePackage_wantedBy_tradePackagesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemCreateNestedManyWithoutTradePackage_item_tradePackagesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Offer_tradePackage_offers'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'OfferCreateNestedManyWithoutTradePackagesInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonCreateNestedManyWithoutTradePackage_wantedBy_tradePackagesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'PersonCreateNestedManyWithoutTradePackage_wantedBy_tradePackagesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'PersonCreateWithoutTradePackage_wantedBy_tradePackagesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'PersonCreateOrConnectWithoutTradePackage_wantedBy_tradePackagesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonCreateWithoutTradePackage_wantedBy_tradePackagesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'PersonCreateWithoutTradePackage_wantedBy_tradePackagesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'email'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'birthday'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'firstName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lastName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Gender'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'GenderCreateNestedOneWithoutProfile_gender_profilesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemGenderCreateNestedManyWithoutPerson_itemGender_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryCreateNestedOneWithoutUser_history_userInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Telephone'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TelephoneCreateNestedOneWithoutPerson_telephone_personInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Address'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'AddressCreateNestedManyWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Picture'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PictureCreateNestedOneWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothSizeCreateNestedManyWithoutPerson_clothSize_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothStyles'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothStyleCreateNestedManyWithoutPerson_clothStyle_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Event_who_events'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventCreateNestedManyWithoutWhoInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_owner_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'ItemCreateNestedManyWithoutOwnerInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Channel'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ChannelCreateNestedOneWithoutParticipantsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_from_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageCreateNestedManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Rating_person_ratings'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'RatingCreateNestedManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const RatingCreateNestedManyWithoutFromInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'RatingCreateNestedManyWithoutFromInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'RatingCreateWithoutFromInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'RatingCreateOrConnectWithoutFromInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'createMany'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'RatingCreateManyFromInputEnvelope'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'RatingWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const RatingCreateWithoutFromInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'RatingCreateWithoutFromInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'amount'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Contract'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ContractCreateNestedOneWithoutRatingInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ContractCreateNestedOneWithoutRatingInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'ContractCreateNestedOneWithoutRatingInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ContractCreateWithoutRatingInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ContractCreateOrConnectWithoutRatingInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ContractWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ContractCreateWithoutRatingInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ContractCreateWithoutRatingInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Offer'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'OfferCreateNestedOneWithoutContractInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const OfferCreateNestedOneWithoutContractInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'OfferCreateNestedOneWithoutContractInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'OfferCreateWithoutContractInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'OfferCreateOrConnectWithoutContractInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'OfferWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const OfferCreateWithoutContractInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'OfferCreateWithoutContractInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TradePackageCreateNestedManyWithoutOffer_tradePackage_offersInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const TradePackageCreateNestedManyWithoutOffer_tradePackage_offersInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'TradePackageCreateNestedManyWithoutOffer_tradePackage_offersInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'TradePackageCreateWithoutOffer_tradePackage_offersInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'TradePackageCreateOrConnectWithoutOffer_tradePackage_offersInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'TradePackageWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const TradePackageCreateWithoutOffer_tradePackage_offersInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'TradePackageCreateWithoutOffer_tradePackage_offersInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'WantedBy'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'PersonCreateNestedManyWithoutTradePackage_wantedBy_tradePackagesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'From'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'PersonCreateNestedOneWithoutTradePackage_from_tradePackagesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemCreateNestedManyWithoutTradePackage_item_tradePackagesInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemCreateNestedManyWithoutTradePackage_item_tradePackagesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'ItemCreateNestedManyWithoutTradePackage_item_tradePackagesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ItemCreateWithoutTradePackage_item_tradePackagesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ItemCreateOrConnectWithoutTradePackage_item_tradePackagesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemCreateWithoutTradePackage_item_tradePackagesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ItemCreateWithoutTradePackage_item_tradePackagesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'active'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'description'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Category'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'CategoryCreateNestedOneWithoutItem_category_itemsInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Value'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'MoneyCreateNestedOneWithoutItem_value_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Colors'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ColorCreateNestedManyWithoutItem_color_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemGenderCreateNestedManyWithoutItems_itemGender_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Pictures'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'PictureCreateNestedManyWithoutItem_picture_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Condition'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ConditionCreateNestedOneWithoutItem_condition_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Owner'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateNestedOneWithoutItem_owner_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Booster'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'BoosterCreateNestedManyWithoutItem_booster_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_item_cloth'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothCreateNestedOneWithoutItemInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemCreateOrConnectWithoutTradePackage_item_tradePackagesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'ItemCreateOrConnectWithoutTradePackage_item_tradePackagesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemCreateWithoutTradePackage_item_tradePackagesInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const TradePackageCreateOrConnectWithoutOffer_tradePackage_offersInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'TradePackageCreateOrConnectWithoutOffer_tradePackage_offersInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TradePackageWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TradePackageCreateWithoutOffer_tradePackage_offersInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const OfferCreateOrConnectWithoutContractInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'OfferCreateOrConnectWithoutContractInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'OfferWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'OfferCreateWithoutContractInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ContractCreateOrConnectWithoutRatingInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'ContractCreateOrConnectWithoutRatingInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ContractWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ContractCreateWithoutRatingInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const RatingCreateOrConnectWithoutFromInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'RatingCreateOrConnectWithoutFromInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'RatingWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'RatingCreateWithoutFromInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const RatingCreateManyFromInputEnvelope = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'RatingCreateManyFromInputEnvelope'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'RatingCreateManyFromInput'),
                  isNonNull: true),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'skipDuplicates'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null)
    ]);
const RatingCreateManyFromInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'RatingCreateManyFromInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'amount'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false),
          defaultValue: null)
    ]);
const PersonCreateOrConnectWithoutTradePackage_wantedBy_tradePackagesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'PersonCreateOrConnectWithoutTradePackage_wantedBy_tradePackagesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'PersonCreateWithoutTradePackage_wantedBy_tradePackagesInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const OfferCreateNestedManyWithoutTradePackagesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'OfferCreateNestedManyWithoutTradePackagesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'OfferCreateWithoutTradePackagesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'OfferCreateOrConnectWithoutTradePackagesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'OfferWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const OfferCreateWithoutTradePackagesInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'OfferCreateWithoutTradePackagesInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Contract'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ContractCreateNestedOneWithoutOfferInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ContractCreateNestedOneWithoutOfferInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'ContractCreateNestedOneWithoutOfferInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ContractCreateWithoutOfferInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ContractCreateOrConnectWithoutOfferInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ContractWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ContractCreateWithoutOfferInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ContractCreateWithoutOfferInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Rating'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'RatingCreateNestedManyWithoutContractInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const RatingCreateNestedManyWithoutContractInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'RatingCreateNestedManyWithoutContractInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'RatingCreateWithoutContractInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'RatingCreateOrConnectWithoutContractInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'createMany'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'RatingCreateManyContractInputEnvelope'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'RatingWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const RatingCreateWithoutContractInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'RatingCreateWithoutContractInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'amount'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'From'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'PersonCreateNestedOneWithoutRating_person_ratingsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonCreateNestedOneWithoutRating_person_ratingsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'PersonCreateNestedOneWithoutRating_person_ratingsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateWithoutRating_person_ratingsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'PersonCreateOrConnectWithoutRating_person_ratingsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonCreateWithoutRating_person_ratingsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'PersonCreateWithoutRating_person_ratingsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'email'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'birthday'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'firstName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lastName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Gender'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'GenderCreateNestedOneWithoutProfile_gender_profilesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemGenderCreateNestedManyWithoutPerson_itemGender_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryCreateNestedOneWithoutUser_history_userInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Telephone'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TelephoneCreateNestedOneWithoutPerson_telephone_personInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Address'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'AddressCreateNestedManyWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Picture'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PictureCreateNestedOneWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothSizeCreateNestedManyWithoutPerson_clothSize_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothStyles'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothStyleCreateNestedManyWithoutPerson_clothStyle_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Event_who_events'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventCreateNestedManyWithoutWhoInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_owner_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'ItemCreateNestedManyWithoutOwnerInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Channel'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ChannelCreateNestedOneWithoutParticipantsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_wantedBy_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageCreateNestedManyWithoutWantedByInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_from_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageCreateNestedManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonCreateOrConnectWithoutRating_person_ratingsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'PersonCreateOrConnectWithoutRating_person_ratingsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateWithoutRating_person_ratingsInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const RatingCreateOrConnectWithoutContractInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'RatingCreateOrConnectWithoutContractInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'RatingWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'RatingCreateWithoutContractInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const RatingCreateManyContractInputEnvelope = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'RatingCreateManyContractInputEnvelope'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'RatingCreateManyContractInput'),
                  isNonNull: true),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'skipDuplicates'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null)
    ]);
const RatingCreateManyContractInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'RatingCreateManyContractInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'amount'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false),
          defaultValue: null)
    ]);
const ContractCreateOrConnectWithoutOfferInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'ContractCreateOrConnectWithoutOfferInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ContractWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ContractCreateWithoutOfferInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const OfferCreateOrConnectWithoutTradePackagesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'OfferCreateOrConnectWithoutTradePackagesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'OfferWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'OfferCreateWithoutTradePackagesInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const TradePackageCreateOrConnectWithoutFromInput =
    _i1.InputObjectTypeDefinitionNode(
        name:
            _i1.NameNode(value: 'TradePackageCreateOrConnectWithoutFromInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TradePackageWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TradePackageCreateWithoutFromInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const TradePackageCreateManyFromInputEnvelope =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'TradePackageCreateManyFromInputEnvelope'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'TradePackageCreateManyFromInput'),
                  isNonNull: true),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'skipDuplicates'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null)
    ]);
const TradePackageCreateManyFromInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'TradePackageCreateManyFromInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null)
    ]);
const PersonCreateOrConnectWithoutAddressInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'PersonCreateOrConnectWithoutAddressInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonCreateWithoutAddressInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const AddressCreateOrConnectWithoutWardrobesInput =
    _i1.InputObjectTypeDefinitionNode(
        name:
            _i1.NameNode(value: 'AddressCreateOrConnectWithoutWardrobesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressCreateWithoutWardrobesInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const WardrobeCreateOrConnectWithoutClothsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'WardrobeCreateOrConnectWithoutClothsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'WardrobeWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'WardrobeCreateWithoutClothsInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ClothCreateOrConnectWithoutItemInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothCreateOrConnectWithoutItemInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothCreateWithoutItemInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const TradePackageCreateNestedManyWithoutItemsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'TradePackageCreateNestedManyWithoutItemsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'TradePackageCreateWithoutItemsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'TradePackageCreateOrConnectWithoutItemsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'TradePackageWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const TradePackageCreateWithoutItemsInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'TradePackageCreateWithoutItemsInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'WantedBy'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'PersonCreateNestedManyWithoutTradePackage_wantedBy_tradePackagesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'From'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'PersonCreateNestedOneWithoutTradePackage_from_tradePackagesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Offer_tradePackage_offers'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'OfferCreateNestedManyWithoutTradePackagesInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const TradePackageCreateOrConnectWithoutItemsInput =
    _i1.InputObjectTypeDefinitionNode(
        name:
            _i1.NameNode(value: 'TradePackageCreateOrConnectWithoutItemsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TradePackageWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TradePackageCreateWithoutItemsInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ItemCreateOrConnectWithoutBoosterInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'ItemCreateOrConnectWithoutBoosterInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemCreateWithoutBoosterInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const BoosterCreateOrConnectWithoutTimespanInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'BoosterCreateOrConnectWithoutTimespanInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'BoosterWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'BoosterCreateWithoutTimespanInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const TimespanCreateOrConnectWithoutSubscription_timespan_subscriptionInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'TimespanCreateOrConnectWithoutSubscription_timespan_subscriptionInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TimespanWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TimespanCreateWithoutSubscription_timespan_subscriptionInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const SubscriptionCreateOrConnectWithoutTypeInput =
    _i1.InputObjectTypeDefinitionNode(
        name:
            _i1.NameNode(value: 'SubscriptionCreateOrConnectWithoutTypeInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SubscriptionWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SubscriptionCreateWithoutTypeInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const SubscriptionCreateManyTypeInputEnvelope =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'SubscriptionCreateManyTypeInputEnvelope'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'SubscriptionCreateManyTypeInput'),
                  isNonNull: true),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'skipDuplicates'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null)
    ]);
const SubscriptionCreateManyTypeInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'SubscriptionCreateManyTypeInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null)
    ]);
const SubscriptionPlanCreateOrConnectWithoutStandardPriceInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'SubscriptionPlanCreateOrConnectWithoutStandardPriceInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SubscriptionPlanWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'SubscriptionPlanCreateWithoutStandardPriceInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const MoneyCreateOrConnectWithoutSubscription_money_subscriptionInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'MoneyCreateOrConnectWithoutSubscription_money_subscriptionInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'MoneyWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'MoneyCreateWithoutSubscription_money_subscriptionInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const SubscriptionPlanCreateNestedOneWithoutSubscription_subscriptionType_subscriptionInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'SubscriptionPlanCreateNestedOneWithoutSubscription_subscriptionType_subscriptionInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'SubscriptionPlanCreateWithoutSubscription_subscriptionType_subscriptionInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'SubscriptionPlanCreateOrConnectWithoutSubscription_subscriptionType_subscriptionInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SubscriptionPlanWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const SubscriptionPlanCreateWithoutSubscription_subscriptionType_subscriptionInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'SubscriptionPlanCreateWithoutSubscription_subscriptionType_subscriptionInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'StandardDuration'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'DurationCreateNestedOneWithoutSubscriptionPlan_duration_subscriptionPlanInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'StandardPrice'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'MoneyCreateNestedOneWithoutSubscriptionPlan_money_subscriptionPlansInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const MoneyCreateNestedOneWithoutSubscriptionPlan_money_subscriptionPlansInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'MoneyCreateNestedOneWithoutSubscriptionPlan_money_subscriptionPlansInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'MoneyCreateWithoutSubscriptionPlan_money_subscriptionPlansInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'MoneyCreateOrConnectWithoutSubscriptionPlan_money_subscriptionPlansInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'MoneyWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const MoneyCreateWithoutSubscriptionPlan_money_subscriptionPlansInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'MoneyCreateWithoutSubscriptionPlan_money_subscriptionPlansInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'value'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Float'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Currency'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Currency'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'HistoryCreateNestedOneWithoutMoney_history_moneyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_value_item'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemCreateNestedOneWithoutValueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Subscription_money_subscription'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'SubscriptionCreateNestedOneWithoutPriceInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const SubscriptionCreateNestedOneWithoutPriceInput =
    _i1.InputObjectTypeDefinitionNode(
        name:
            _i1.NameNode(value: 'SubscriptionCreateNestedOneWithoutPriceInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SubscriptionCreateWithoutPriceInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'SubscriptionCreateOrConnectWithoutPriceInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SubscriptionWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const SubscriptionCreateWithoutPriceInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'SubscriptionCreateWithoutPriceInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Timespan'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TimespanCreateNestedOneWithoutSubscription_timespan_subscriptionInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Type'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'SubscriptionPlanCreateNestedOneWithoutSubscription_subscriptionType_subscriptionInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const SubscriptionCreateOrConnectWithoutPriceInput =
    _i1.InputObjectTypeDefinitionNode(
        name:
            _i1.NameNode(value: 'SubscriptionCreateOrConnectWithoutPriceInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SubscriptionWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SubscriptionCreateWithoutPriceInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const MoneyCreateOrConnectWithoutSubscriptionPlan_money_subscriptionPlansInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'MoneyCreateOrConnectWithoutSubscriptionPlan_money_subscriptionPlansInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'MoneyWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'MoneyCreateWithoutSubscriptionPlan_money_subscriptionPlansInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const SubscriptionPlanCreateOrConnectWithoutSubscription_subscriptionType_subscriptionInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'SubscriptionPlanCreateOrConnectWithoutSubscription_subscriptionType_subscriptionInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SubscriptionPlanWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'SubscriptionPlanCreateWithoutSubscription_subscriptionType_subscriptionInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const SubscriptionCreateOrConnectWithoutTimespanInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'SubscriptionCreateOrConnectWithoutTimespanInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SubscriptionWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'SubscriptionCreateWithoutTimespanInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const TimespanCreateOrConnectWithoutBooster_timespan_boosterInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'TimespanCreateOrConnectWithoutBooster_timespan_boosterInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TimespanWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TimespanCreateWithoutBooster_timespan_boosterInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const BoosterCreateOrConnectWithoutItem_booster_itemInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'BoosterCreateOrConnectWithoutItem_booster_itemInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'BoosterWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'BoosterCreateWithoutItem_booster_itemInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const BoosterCreateManyItem_booster_itemInputEnvelope =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'BoosterCreateManyItem_booster_itemInputEnvelope'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'BoosterCreateManyItem_booster_itemInput'),
                  isNonNull: true),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'skipDuplicates'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null)
    ]);
const BoosterCreateManyItem_booster_itemInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'BoosterCreateManyItem_booster_itemInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TimespanId'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null)
    ]);
const ItemCreateOrConnectWithoutOwnerInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemCreateOrConnectWithoutOwnerInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemCreateWithoutOwnerInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ItemCreateManyOwnerInputEnvelope = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemCreateManyOwnerInputEnvelope'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemCreateManyOwnerInput'),
                  isNonNull: true),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'skipDuplicates'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null)
    ]);
const ItemCreateManyOwnerInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemCreateManyOwnerInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'active'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'description'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null)
    ]);
const PersonCreateOrConnectWithoutTradePackage_from_tradePackagesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'PersonCreateOrConnectWithoutTradePackage_from_tradePackagesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'PersonCreateWithoutTradePackage_from_tradePackagesInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const TradePackageCreateOrConnectWithoutWantedByInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'TradePackageCreateOrConnectWithoutWantedByInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TradePackageWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'TradePackageCreateWithoutWantedByInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const PersonCreateOrConnectWithoutItem_owner_itemsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'PersonCreateOrConnectWithoutItem_owner_itemsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateWithoutItem_owner_itemsInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ItemCreateOrConnectWithoutValueInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemCreateOrConnectWithoutValueInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemCreateWithoutValueInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const MoneyCreateOrConnectWithoutHistoryInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'MoneyCreateOrConnectWithoutHistoryInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'MoneyWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'MoneyCreateWithoutHistoryInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ClothCreateNestedOneWithoutHistoryInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'ClothCreateNestedOneWithoutHistoryInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothCreateWithoutHistoryInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothCreateOrConnectWithoutHistoryInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothCreateWithoutHistoryInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothCreateWithoutHistoryInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'code'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Material'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'MaterialCreateNestedOneWithoutCloth_material_clothsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ItemCreateNestedOneWithoutCloth_item_clothInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothSizeCreateNestedManyWithoutCloth_clothSize_clothInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothStyles'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothStyleCreateNestedManyWithoutItem_clothStyle_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Wardrobe'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'WardrobeCreateNestedOneWithoutClothsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothCreateOrConnectWithoutHistoryInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'ClothCreateOrConnectWithoutHistoryInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothCreateWithoutHistoryInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const HistoryCreateOrConnectWithoutDeletedInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'HistoryCreateOrConnectWithoutDeletedInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryCreateWithoutDeletedInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const EventCreateOrConnectWithoutWhoInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'EventCreateOrConnectWithoutWhoInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventCreateWithoutWhoInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const EventCreateManyWhoInputEnvelope = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'EventCreateManyWhoInputEnvelope'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'EventCreateManyWhoInput'),
                  isNonNull: true),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'skipDuplicates'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null)
    ]);
const EventCreateManyWhoInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'EventCreateManyWhoInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'when'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'what'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'from'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'JSON'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'to'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'JSON'), isNonNull: false),
          defaultValue: null)
    ]);
const PersonCreateOrConnectWithoutClothSizesInput =
    _i1.InputObjectTypeDefinitionNode(
        name:
            _i1.NameNode(value: 'PersonCreateOrConnectWithoutClothSizesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonCreateWithoutClothSizesInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ClothSizeCreateOrConnectWithoutClothSizeInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ClothSizeCreateOrConnectWithoutClothSizeInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothSizeWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothSizeCreateWithoutClothSizeInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ClothSizeCreateNestedManyWithoutComparableToInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ClothSizeCreateNestedManyWithoutComparableToInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'ClothSizeCreateWithoutComparableToInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ClothSizeCreateOrConnectWithoutComparableToInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothSizeWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothSizeCreateWithoutComparableToInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'ClothSizeCreateWithoutComparableToInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'SizeModel'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SizeModel'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Categories'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryCreateNestedManyWithoutClothSizesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_clothSize_cloth'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothCreateNestedManyWithoutClothSizesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Person_clothSize_persons'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateNestedManyWithoutClothSizesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSize'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothSizeCreateNestedManyWithoutComparableToInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothSizeCreateOrConnectWithoutComparableToInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ClothSizeCreateOrConnectWithoutComparableToInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothSizeWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothSizeCreateWithoutComparableToInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ClothSizeCreateOrConnectWithoutPerson_clothSize_personsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'ClothSizeCreateOrConnectWithoutPerson_clothSize_personsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothSizeWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothSizeCreateWithoutPerson_clothSize_personsInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const PersonCreateOrConnectWithoutPictureInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'PersonCreateOrConnectWithoutPictureInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonCreateWithoutPictureInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ItemCreateNestedOneWithoutPicturesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'ItemCreateNestedOneWithoutPicturesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemCreateWithoutPicturesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ItemCreateOrConnectWithoutPicturesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemCreateWithoutPicturesInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemCreateWithoutPicturesInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'active'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'description'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Category'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'CategoryCreateNestedOneWithoutItem_category_itemsInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Value'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'MoneyCreateNestedOneWithoutItem_value_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Colors'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ColorCreateNestedManyWithoutItem_color_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemGenderCreateNestedManyWithoutItems_itemGender_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Condition'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ConditionCreateNestedOneWithoutItem_condition_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Owner'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateNestedOneWithoutItem_owner_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Booster'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'BoosterCreateNestedManyWithoutItem_booster_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_item_cloth'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothCreateNestedOneWithoutItemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_item_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageCreateNestedManyWithoutItemsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemCreateOrConnectWithoutPicturesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'ItemCreateOrConnectWithoutPicturesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemCreateWithoutPicturesInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const PictureCreateOrConnectWithoutHQInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PictureCreateOrConnectWithoutHQInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureCreateWithoutHQInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const FileCreateOrConnectWithoutFile_mqPictureFile_fileInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'FileCreateOrConnectWithoutFile_mqPictureFile_fileInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'FileWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'FileCreateWithoutFile_mqPictureFile_fileInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const PictureCreateOrConnectWithoutLQInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PictureCreateOrConnectWithoutLQInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureCreateWithoutLQInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const FileCreateOrConnectWithoutFile_hqPictureFile_fileInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'FileCreateOrConnectWithoutFile_hqPictureFile_fileInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'FileWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'FileCreateWithoutFile_hqPictureFile_fileInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const PictureCreateOrConnectWithoutMQInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PictureCreateOrConnectWithoutMQInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureCreateWithoutMQInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const FileCreateOrConnectWithoutFile_lqPictureFile_fileInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'FileCreateOrConnectWithoutFile_lqPictureFile_fileInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'FileWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'FileCreateWithoutFile_lqPictureFile_fileInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const PictureCreateOrConnectWithoutPersonInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'PictureCreateOrConnectWithoutPersonInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureCreateWithoutPersonInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const PersonCreateOrConnectWithoutItemGendersInput =
    _i1.InputObjectTypeDefinitionNode(
        name:
            _i1.NameNode(value: 'PersonCreateOrConnectWithoutItemGendersInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonCreateWithoutItemGendersInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ItemGenderCreateOrConnectWithoutItems_itemGender_itemsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'ItemGenderCreateOrConnectWithoutItems_itemGender_itemsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemGenderWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ItemGenderCreateWithoutItems_itemGender_itemsInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ItemCreateOrConnectWithoutCategoryInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'ItemCreateOrConnectWithoutCategoryInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemCreateWithoutCategoryInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ItemCreateManyCategoryInputEnvelope = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemCreateManyCategoryInputEnvelope'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemCreateManyCategoryInput'),
                  isNonNull: true),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'skipDuplicates'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null)
    ]);
const ItemCreateManyCategoryInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemCreateManyCategoryInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'active'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'description'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null)
    ]);
const CategoryCreateNestedOneWithoutSubCategoriesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'CategoryCreateNestedOneWithoutSubCategoriesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryCreateWithoutSubCategoriesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryCreateOrConnectWithoutSubCategoriesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'CategoryWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const CategoryCreateWithoutSubCategoriesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'CategoryCreateWithoutSubCategoriesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothSizeCreateNestedManyWithoutCategoriesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Brand_category_brands'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'BrandCreateNestedManyWithoutCategoriesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_category_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ItemCreateNestedManyWithoutCategoryInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ParentCategory'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryCreateNestedOneWithoutSubCategoriesInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const CategoryCreateOrConnectWithoutSubCategoriesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'CategoryCreateOrConnectWithoutSubCategoriesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'CategoryWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryCreateWithoutSubCategoriesInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const CategoryCreateNestedManyWithoutParentCategoryInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'CategoryCreateNestedManyWithoutParentCategoryInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'CategoryCreateWithoutParentCategoryInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'CategoryCreateOrConnectWithoutParentCategoryInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'createMany'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryCreateManyParentCategoryInputEnvelope'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'CategoryWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const CategoryCreateWithoutParentCategoryInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'CategoryCreateWithoutParentCategoryInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothSizeCreateNestedManyWithoutCategoriesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Brand_category_brands'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'BrandCreateNestedManyWithoutCategoriesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_category_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ItemCreateNestedManyWithoutCategoryInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'SubCategories'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryCreateNestedManyWithoutParentCategoryInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const CategoryCreateOrConnectWithoutParentCategoryInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'CategoryCreateOrConnectWithoutParentCategoryInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'CategoryWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryCreateWithoutParentCategoryInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const CategoryCreateManyParentCategoryInputEnvelope =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'CategoryCreateManyParentCategoryInputEnvelope'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'CategoryCreateManyParentCategoryInput'),
                  isNonNull: true),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'skipDuplicates'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null)
    ]);
const CategoryCreateManyParentCategoryInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'CategoryCreateManyParentCategoryInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null)
    ]);
const CategoryCreateOrConnectWithoutClothSizesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'CategoryCreateOrConnectWithoutClothSizesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'CategoryWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'CategoryCreateWithoutClothSizesInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ClothSizeCreateOrConnectWithoutCloth_clothSize_clothInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ClothSizeCreateOrConnectWithoutCloth_clothSize_clothInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothSizeWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothSizeCreateWithoutCloth_clothSize_clothInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ClothCreateOrConnectWithoutWardrobeInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'ClothCreateOrConnectWithoutWardrobeInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothCreateWithoutWardrobeInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ClothCreateManyWardrobeInputEnvelope = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothCreateManyWardrobeInputEnvelope'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothCreateManyWardrobeInput'),
                  isNonNull: true),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'skipDuplicates'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null)
    ]);
const ClothCreateManyWardrobeInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothCreateManyWardrobeInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'code'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null)
    ]);
const WardrobeCreateOrConnectWithoutAddressInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'WardrobeCreateOrConnectWithoutAddressInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'WardrobeWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'WardrobeCreateWithoutAddressInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const WardrobeCreateManyAddressInputEnvelope =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'WardrobeCreateManyAddressInputEnvelope'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'WardrobeCreateManyAddressInput'),
                  isNonNull: true),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'skipDuplicates'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null)
    ]);
const WardrobeCreateManyAddressInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'WardrobeCreateManyAddressInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null)
    ]);
const AddressCreateOrConnectWithoutPersonInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'AddressCreateOrConnectWithoutPersonInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressCreateWithoutPersonInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const AddressCreateManyPersonInputEnvelope = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'AddressCreateManyPersonInputEnvelope'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'AddressCreateManyPersonInput'),
                  isNonNull: true),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'skipDuplicates'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null)
    ]);
const AddressCreateManyPersonInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'AddressCreateManyPersonInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'line1'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'line2'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'city'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'province'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'zip'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null)
    ]);
const PersonCreateOrConnectWithoutHistoryInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'PersonCreateOrConnectWithoutHistoryInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonCreateWithoutHistoryInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const HistoryCreateOrConnectWithoutUpdatedInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'HistoryCreateOrConnectWithoutUpdatedInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryCreateWithoutUpdatedInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const EventCreateOrConnectWithoutHistory_deleted_historyInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'EventCreateOrConnectWithoutHistory_deleted_historyInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'EventCreateWithoutHistory_deleted_historyInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const HistoryCreateOrConnectWithoutCreatedInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'HistoryCreateOrConnectWithoutCreatedInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryCreateWithoutCreatedInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const EventCreateOrConnectWithoutHistory_updated_historyInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'EventCreateOrConnectWithoutHistory_updated_historyInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'EventCreateWithoutHistory_updated_historyInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const EventCreateManyHistory_updated_historyInputEnvelope =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'EventCreateManyHistory_updated_historyInputEnvelope'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'EventCreateManyHistory_updated_historyInput'),
                  isNonNull: true),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'skipDuplicates'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null)
    ]);
const EventCreateManyHistory_updated_historyInput =
    _i1.InputObjectTypeDefinitionNode(
        name:
            _i1.NameNode(value: 'EventCreateManyHistory_updated_historyInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'when'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'what'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'from'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'JSON'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'to'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'JSON'), isNonNull: false),
          defaultValue: null)
    ]);
const HistoryCreateOrConnectWithoutUser_history_userInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'HistoryCreateOrConnectWithoutUser_history_userInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryCreateWithoutUser_history_userInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const PersonCreateOrConnectWithoutEvent_who_eventsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'PersonCreateOrConnectWithoutEvent_who_eventsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateWithoutEvent_who_eventsInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const EventCreateOrConnectWithoutHistory_created_historyInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'EventCreateOrConnectWithoutHistory_created_historyInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'EventCreateWithoutHistory_created_historyInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const HistoryCreateOrConnectWithoutMoney_history_moneyInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'HistoryCreateOrConnectWithoutMoney_history_moneyInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryCreateWithoutMoney_history_moneyInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const MoneyCreateOrConnectWithoutItem_value_itemInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'MoneyCreateOrConnectWithoutItem_value_itemInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'MoneyWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'MoneyCreateWithoutItem_value_itemInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ItemCreateOrConnectWithoutItemGendersInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'ItemCreateOrConnectWithoutItemGendersInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemCreateWithoutItemGendersInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ItemGenderCreateOrConnectWithoutPerson_itemGender_personsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'ItemGenderCreateOrConnectWithoutPerson_itemGender_personsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemGenderWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemGenderCreateWithoutPerson_itemGender_personsInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const PersonCreateOrConnectWithoutClothStylesInput =
    _i1.InputObjectTypeDefinitionNode(
        name:
            _i1.NameNode(value: 'PersonCreateOrConnectWithoutClothStylesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonCreateWithoutClothStylesInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ClothStyleCreateOrConnectWithoutItem_clothStyle_itemsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'ClothStyleCreateOrConnectWithoutItem_clothStyle_itemsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothStyleWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothStyleCreateWithoutItem_clothStyle_itemsInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ClothCreateOrConnectWithoutClothSizesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'ClothCreateOrConnectWithoutClothSizesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothCreateWithoutClothSizesInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ClothSizeCreateOrConnectWithoutCategoriesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ClothSizeCreateOrConnectWithoutCategoriesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothSizeWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'ClothSizeCreateWithoutCategoriesInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const CategoryCreateOrConnectWithoutItem_category_itemsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'CategoryCreateOrConnectWithoutItem_category_itemsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'CategoryWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryCreateWithoutItem_category_itemsInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ItemCreateOrConnectWithoutCloth_item_clothInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ItemCreateOrConnectWithoutCloth_item_clothInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'ItemCreateWithoutCloth_item_clothInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ClothCreateOrConnectWithoutClothStylesInput =
    _i1.InputObjectTypeDefinitionNode(
        name:
            _i1.NameNode(value: 'ClothCreateOrConnectWithoutClothStylesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothCreateWithoutClothStylesInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ClothStyleUpdateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothStyleUpdateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_clothStyle_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'ClothUpdateManyWithoutClothStylesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Person_clothStyle_persons'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonUpdateManyWithoutClothStylesInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const StringFieldUpdateOperationsInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'set'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null)
    ]);
const NullableStringFieldUpdateOperationsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'NullableStringFieldUpdateOperationsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'set'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null)
    ]);
const ClothUpdateManyWithoutClothStylesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'ClothUpdateManyWithoutClothStylesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name:
                      _i1.NameNode(value: 'ClothCreateWithoutClothStylesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'ClothCreateOrConnectWithoutClothStylesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ClothUpsertWithWhereUniqueWithoutClothStylesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'set'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ClothUpdateWithWhereUniqueWithoutClothStylesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'updateMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'ClothUpdateManyWithWhereWithoutClothStylesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'deleteMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothUpsertWithWhereUniqueWithoutClothStylesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ClothUpsertWithWhereUniqueWithoutClothStylesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothUpdateWithoutClothStylesInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothCreateWithoutClothStylesInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ClothUpdateWithoutClothStylesInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothUpdateWithoutClothStylesInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'code'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Material'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'MaterialUpdateOneWithoutCloth_material_clothsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ItemUpdateOneRequiredWithoutCloth_item_clothInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothSizeUpdateManyWithoutCloth_clothSize_clothInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryUpdateOneWithoutCloth_history_clothInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Wardrobe'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'WardrobeUpdateOneWithoutClothsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const MaterialUpdateOneWithoutCloth_material_clothsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'MaterialUpdateOneWithoutCloth_material_clothsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'MaterialCreateWithoutCloth_material_clothsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'MaterialCreateOrConnectWithoutCloth_material_clothsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'MaterialUpsertWithoutCloth_material_clothsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'MaterialWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'MaterialUpdateWithoutCloth_material_clothsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const MaterialUpsertWithoutCloth_material_clothsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'MaterialUpsertWithoutCloth_material_clothsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'MaterialUpdateWithoutCloth_material_clothsInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'MaterialCreateWithoutCloth_material_clothsInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const MaterialUpdateWithoutCloth_material_clothsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'MaterialUpdateWithoutCloth_material_clothsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemUpdateOneRequiredWithoutCloth_item_clothInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ItemUpdateOneRequiredWithoutCloth_item_clothInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'ItemCreateWithoutCloth_item_clothInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ItemCreateOrConnectWithoutCloth_item_clothInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'ItemUpsertWithoutCloth_item_clothInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'ItemUpdateWithoutCloth_item_clothInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemUpsertWithoutCloth_item_clothInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'ItemUpsertWithoutCloth_item_clothInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'ItemUpdateWithoutCloth_item_clothInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'ItemCreateWithoutCloth_item_clothInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ItemUpdateWithoutCloth_item_clothInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'ItemUpdateWithoutCloth_item_clothInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'active'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'NullableBoolFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'description'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Category'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'CategoryUpdateOneRequiredWithoutItem_category_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Value'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'MoneyUpdateOneWithoutItem_value_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Colors'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ColorUpdateManyWithoutItem_color_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemGenderUpdateManyWithoutItems_itemGender_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Pictures'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PictureUpdateManyWithoutItem_picture_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Condition'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ConditionUpdateOneWithoutItem_condition_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Owner'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonUpdateOneWithoutItem_owner_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Booster'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'BoosterUpdateManyWithoutItem_booster_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_item_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageUpdateManyWithoutItemsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const NullableBoolFieldUpdateOperationsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'NullableBoolFieldUpdateOperationsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'set'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null)
    ]);
const CategoryUpdateOneRequiredWithoutItem_category_itemsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'CategoryUpdateOneRequiredWithoutItem_category_itemsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryCreateWithoutItem_category_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'CategoryCreateOrConnectWithoutItem_category_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryUpsertWithoutItem_category_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'CategoryWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryUpdateWithoutItem_category_itemsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const CategoryUpsertWithoutItem_category_itemsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'CategoryUpsertWithoutItem_category_itemsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryUpdateWithoutItem_category_itemsInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryCreateWithoutItem_category_itemsInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const CategoryUpdateWithoutItem_category_itemsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'CategoryUpdateWithoutItem_category_itemsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothSizeUpdateManyWithoutCategoriesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Brand_category_brands'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'BrandUpdateManyWithoutCategoriesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ParentCategory'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryUpdateOneWithoutSubCategoriesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'SubCategories'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryUpdateManyWithoutParentCategoryInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothSizeUpdateManyWithoutCategoriesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'ClothSizeUpdateManyWithoutCategoriesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'ClothSizeCreateWithoutCategoriesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'ClothSizeCreateOrConnectWithoutCategoriesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ClothSizeUpsertWithWhereUniqueWithoutCategoriesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'set'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothSizeWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothSizeWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothSizeWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothSizeWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ClothSizeUpdateWithWhereUniqueWithoutCategoriesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'updateMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ClothSizeUpdateManyWithWhereWithoutCategoriesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'deleteMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothSizeScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothSizeUpsertWithWhereUniqueWithoutCategoriesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ClothSizeUpsertWithWhereUniqueWithoutCategoriesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothSizeWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'ClothSizeUpdateWithoutCategoriesInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'ClothSizeCreateWithoutCategoriesInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ClothSizeUpdateWithoutCategoriesInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothSizeUpdateWithoutCategoriesInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'NullableIntFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'SizeModel'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableEnumSizeModelFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_clothSize_cloth'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'ClothUpdateManyWithoutClothSizesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Person_clothSize_persons'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'PersonUpdateManyWithoutClothSizesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ComparableTo'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothSizeUpdateManyWithoutClothSizeInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSize'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothSizeUpdateManyWithoutComparableToInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const NullableIntFieldUpdateOperationsInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'NullableIntFieldUpdateOperationsInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'set'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'increment'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'decrement'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'multiply'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'divide'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false),
          defaultValue: null)
    ]);
const NullableEnumSizeModelFieldUpdateOperationsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'NullableEnumSizeModelFieldUpdateOperationsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'set'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SizeModel'), isNonNull: false),
          defaultValue: null)
    ]);
const ClothUpdateManyWithoutClothSizesInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothUpdateManyWithoutClothSizesInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name:
                      _i1.NameNode(value: 'ClothCreateWithoutClothSizesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'ClothCreateOrConnectWithoutClothSizesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ClothUpsertWithWhereUniqueWithoutClothSizesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'set'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ClothUpdateWithWhereUniqueWithoutClothSizesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'updateMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'ClothUpdateManyWithWhereWithoutClothSizesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'deleteMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothUpsertWithWhereUniqueWithoutClothSizesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ClothUpsertWithWhereUniqueWithoutClothSizesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothUpdateWithoutClothSizesInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothCreateWithoutClothSizesInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ClothUpdateWithoutClothSizesInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothUpdateWithoutClothSizesInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'code'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Material'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'MaterialUpdateOneWithoutCloth_material_clothsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ItemUpdateOneRequiredWithoutCloth_item_clothInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothStyles'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothStyleUpdateManyWithoutItem_clothStyle_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryUpdateOneWithoutCloth_history_clothInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Wardrobe'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'WardrobeUpdateOneWithoutClothsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothStyleUpdateManyWithoutItem_clothStyle_itemsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ClothStyleUpdateManyWithoutItem_clothStyle_itemsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ClothStyleCreateWithoutItem_clothStyle_itemsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ClothStyleCreateOrConnectWithoutItem_clothStyle_itemsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ClothStyleUpsertWithWhereUniqueWithoutItem_clothStyle_itemsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'set'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothStyleWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothStyleWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothStyleWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothStyleWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ClothStyleUpdateWithWhereUniqueWithoutItem_clothStyle_itemsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'updateMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ClothStyleUpdateManyWithWhereWithoutItem_clothStyle_itemsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'deleteMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothStyleScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothStyleUpsertWithWhereUniqueWithoutItem_clothStyle_itemsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'ClothStyleUpsertWithWhereUniqueWithoutItem_clothStyle_itemsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothStyleWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothStyleUpdateWithoutItem_clothStyle_itemsInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothStyleCreateWithoutItem_clothStyle_itemsInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ClothStyleUpdateWithoutItem_clothStyle_itemsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ClothStyleUpdateWithoutItem_clothStyle_itemsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Person_clothStyle_persons'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonUpdateManyWithoutClothStylesInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonUpdateManyWithoutClothStylesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'PersonUpdateManyWithoutClothStylesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'PersonCreateWithoutClothStylesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'PersonCreateOrConnectWithoutClothStylesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'PersonUpsertWithWhereUniqueWithoutClothStylesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'set'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'PersonUpdateWithWhereUniqueWithoutClothStylesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'updateMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'PersonUpdateManyWithWhereWithoutClothStylesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'deleteMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PersonScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonUpsertWithWhereUniqueWithoutClothStylesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'PersonUpsertWithWhereUniqueWithoutClothStylesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonUpdateWithoutClothStylesInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonCreateWithoutClothStylesInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const PersonUpdateWithoutClothStylesInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PersonUpdateWithoutClothStylesInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'email'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'birthday'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableDateTimeFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'firstName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lastName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Gender'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'GenderUpdateOneWithoutProfile_gender_profilesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemGenderUpdateManyWithoutPerson_itemGender_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryUpdateOneWithoutUser_history_userInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Telephone'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TelephoneUpdateOneWithoutPerson_telephone_personInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Address'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressUpdateManyWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Picture'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureUpdateOneWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothSizeUpdateManyWithoutPerson_clothSize_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Event_who_events'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventUpdateManyWithoutWhoInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_owner_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpdateManyWithoutOwnerInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Channel'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ChannelUpdateOneWithoutParticipantsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_wantedBy_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageUpdateManyWithoutWantedByInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_from_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'TradePackageUpdateManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Rating_person_ratings'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'RatingUpdateManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const NullableDateTimeFieldUpdateOperationsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'NullableDateTimeFieldUpdateOperationsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'set'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false),
          defaultValue: null)
    ]);
const GenderUpdateOneWithoutProfile_gender_profilesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'GenderUpdateOneWithoutProfile_gender_profilesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'GenderCreateWithoutProfile_gender_profilesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'GenderCreateOrConnectWithoutProfile_gender_profilesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'GenderUpsertWithoutProfile_gender_profilesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'GenderWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'GenderUpdateWithoutProfile_gender_profilesInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const GenderUpsertWithoutProfile_gender_profilesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'GenderUpsertWithoutProfile_gender_profilesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'GenderUpdateWithoutProfile_gender_profilesInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'GenderCreateWithoutProfile_gender_profilesInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const GenderUpdateWithoutProfile_gender_profilesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'GenderUpdateWithoutProfile_gender_profilesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemGenderUpdateManyWithoutPerson_itemGender_personsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ItemGenderUpdateManyWithoutPerson_itemGender_personsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ItemGenderCreateWithoutPerson_itemGender_personsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ItemGenderCreateOrConnectWithoutPerson_itemGender_personsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ItemGenderUpsertWithWhereUniqueWithoutPerson_itemGender_personsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'set'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemGenderWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemGenderWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemGenderWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemGenderWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ItemGenderUpdateWithWhereUniqueWithoutPerson_itemGender_personsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'updateMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ItemGenderUpdateManyWithWhereWithoutPerson_itemGender_personsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'deleteMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemGenderScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemGenderUpsertWithWhereUniqueWithoutPerson_itemGender_personsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'ItemGenderUpsertWithWhereUniqueWithoutPerson_itemGender_personsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemGenderWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemGenderUpdateWithoutPerson_itemGender_personsInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemGenderCreateWithoutPerson_itemGender_personsInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ItemGenderUpdateWithoutPerson_itemGender_personsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ItemGenderUpdateWithoutPerson_itemGender_personsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'NullableIntFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Items_itemGender_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'ItemUpdateManyWithoutItemGendersInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemUpdateManyWithoutItemGendersInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemUpdateManyWithoutItemGendersInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name:
                      _i1.NameNode(value: 'ItemCreateWithoutItemGendersInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'ItemCreateOrConnectWithoutItemGendersInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ItemUpsertWithWhereUniqueWithoutItemGendersInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'set'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ItemUpdateWithWhereUniqueWithoutItemGendersInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'updateMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'ItemUpdateManyWithWhereWithoutItemGendersInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'deleteMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemUpsertWithWhereUniqueWithoutItemGendersInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ItemUpsertWithWhereUniqueWithoutItemGendersInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpdateWithoutItemGendersInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemCreateWithoutItemGendersInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ItemUpdateWithoutItemGendersInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemUpdateWithoutItemGendersInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'active'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'NullableBoolFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'description'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Category'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'CategoryUpdateOneRequiredWithoutItem_category_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Value'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'MoneyUpdateOneWithoutItem_value_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Colors'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ColorUpdateManyWithoutItem_color_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Pictures'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PictureUpdateManyWithoutItem_picture_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Condition'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ConditionUpdateOneWithoutItem_condition_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Owner'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonUpdateOneWithoutItem_owner_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Booster'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'BoosterUpdateManyWithoutItem_booster_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_item_cloth'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothUpdateOneWithoutItemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_item_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageUpdateManyWithoutItemsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const MoneyUpdateOneWithoutItem_value_itemInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'MoneyUpdateOneWithoutItem_value_itemInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'MoneyCreateWithoutItem_value_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'MoneyCreateOrConnectWithoutItem_value_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'MoneyUpsertWithoutItem_value_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'MoneyWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'MoneyUpdateWithoutItem_value_itemInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const MoneyUpsertWithoutItem_value_itemInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'MoneyUpsertWithoutItem_value_itemInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'MoneyUpdateWithoutItem_value_itemInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'MoneyCreateWithoutItem_value_itemInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const MoneyUpdateWithoutItem_value_itemInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'MoneyUpdateWithoutItem_value_itemInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'value'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableFloatFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Currency'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableEnumCurrencyFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryUpdateOneWithoutMoney_history_moneyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'SubscriptionPlan_money_subscriptionPlans'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'SubscriptionPlanUpdateOneWithoutStandardPriceInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Subscription_money_subscription'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'SubscriptionUpdateOneWithoutPriceInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const NullableFloatFieldUpdateOperationsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'NullableFloatFieldUpdateOperationsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'set'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Float'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'increment'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Float'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'decrement'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Float'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'multiply'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Float'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'divide'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Float'), isNonNull: false),
          defaultValue: null)
    ]);
const NullableEnumCurrencyFieldUpdateOperationsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'NullableEnumCurrencyFieldUpdateOperationsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'set'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Currency'), isNonNull: false),
          defaultValue: null)
    ]);
const HistoryUpdateOneWithoutMoney_history_moneyInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'HistoryUpdateOneWithoutMoney_history_moneyInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryCreateWithoutMoney_history_moneyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'HistoryCreateOrConnectWithoutMoney_history_moneyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryUpsertWithoutMoney_history_moneyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryUpdateWithoutMoney_history_moneyInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const HistoryUpsertWithoutMoney_history_moneyInput =
    _i1.InputObjectTypeDefinitionNode(
        name:
            _i1.NameNode(value: 'HistoryUpsertWithoutMoney_history_moneyInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryUpdateWithoutMoney_history_moneyInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryCreateWithoutMoney_history_moneyInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const HistoryUpdateWithoutMoney_history_moneyInput =
    _i1.InputObjectTypeDefinitionNode(
        name:
            _i1.NameNode(value: 'HistoryUpdateWithoutMoney_history_moneyInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Created'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'EventUpdateOneWithoutHistory_created_historyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Updated'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'EventUpdateManyWithoutHistory_updated_historyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Deleted'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'EventUpdateOneWithoutHistory_deleted_historyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'User_history_user'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonUpdateOneWithoutHistoryInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_history_cloth'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothUpdateOneWithoutHistoryInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const EventUpdateOneWithoutHistory_created_historyInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'EventUpdateOneWithoutHistory_created_historyInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'EventCreateWithoutHistory_created_historyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'EventCreateOrConnectWithoutHistory_created_historyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'EventUpsertWithoutHistory_created_historyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'EventUpdateWithoutHistory_created_historyInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const EventUpsertWithoutHistory_created_historyInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'EventUpsertWithoutHistory_created_historyInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'EventUpdateWithoutHistory_created_historyInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'EventCreateWithoutHistory_created_historyInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const EventUpdateWithoutHistory_created_historyInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'EventUpdateWithoutHistory_created_historyInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'when'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTimeFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'what'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'from'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'JSON'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'to'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'JSON'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Who'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonUpdateOneWithoutEvent_who_eventsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History_updated_history'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryUpdateOneWithoutUpdatedInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History_deleted_history'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryUpdateOneWithoutDeletedInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const DateTimeFieldUpdateOperationsInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'DateTimeFieldUpdateOperationsInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'set'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false),
          defaultValue: null)
    ]);
const PersonUpdateOneWithoutEvent_who_eventsInput =
    _i1.InputObjectTypeDefinitionNode(
        name:
            _i1.NameNode(value: 'PersonUpdateOneWithoutEvent_who_eventsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateWithoutEvent_who_eventsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateOrConnectWithoutEvent_who_eventsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonUpsertWithoutEvent_who_eventsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonUpdateWithoutEvent_who_eventsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonUpsertWithoutEvent_who_eventsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'PersonUpsertWithoutEvent_who_eventsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonUpdateWithoutEvent_who_eventsInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateWithoutEvent_who_eventsInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const PersonUpdateWithoutEvent_who_eventsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'PersonUpdateWithoutEvent_who_eventsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'email'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'birthday'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableDateTimeFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'firstName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lastName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Gender'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'GenderUpdateOneWithoutProfile_gender_profilesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemGenderUpdateManyWithoutPerson_itemGender_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryUpdateOneWithoutUser_history_userInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Telephone'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TelephoneUpdateOneWithoutPerson_telephone_personInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Address'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressUpdateManyWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Picture'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureUpdateOneWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothSizeUpdateManyWithoutPerson_clothSize_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothStyles'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothStyleUpdateManyWithoutPerson_clothStyle_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_owner_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpdateManyWithoutOwnerInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Channel'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ChannelUpdateOneWithoutParticipantsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_wantedBy_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageUpdateManyWithoutWantedByInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_from_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'TradePackageUpdateManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Rating_person_ratings'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'RatingUpdateManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const HistoryUpdateOneWithoutUser_history_userInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'HistoryUpdateOneWithoutUser_history_userInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryCreateWithoutUser_history_userInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryCreateOrConnectWithoutUser_history_userInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryUpsertWithoutUser_history_userInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryUpdateWithoutUser_history_userInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const HistoryUpsertWithoutUser_history_userInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'HistoryUpsertWithoutUser_history_userInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryUpdateWithoutUser_history_userInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryCreateWithoutUser_history_userInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const HistoryUpdateWithoutUser_history_userInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'HistoryUpdateWithoutUser_history_userInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Created'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'EventUpdateOneWithoutHistory_created_historyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Updated'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'EventUpdateManyWithoutHistory_updated_historyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Deleted'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'EventUpdateOneWithoutHistory_deleted_historyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Money_history_money'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'MoneyUpdateOneWithoutHistoryInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_history_cloth'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothUpdateOneWithoutHistoryInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const EventUpdateManyWithoutHistory_updated_historyInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'EventUpdateManyWithoutHistory_updated_historyInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'EventCreateWithoutHistory_updated_historyInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'EventCreateOrConnectWithoutHistory_updated_historyInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'EventUpsertWithWhereUniqueWithoutHistory_updated_historyInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'createMany'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'EventCreateManyHistory_updated_historyInputEnvelope'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'set'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'EventWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'EventWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'EventWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'EventWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'EventUpdateWithWhereUniqueWithoutHistory_updated_historyInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'updateMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'EventUpdateManyWithWhereWithoutHistory_updated_historyInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'deleteMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'EventScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const EventUpsertWithWhereUniqueWithoutHistory_updated_historyInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'EventUpsertWithWhereUniqueWithoutHistory_updated_historyInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'EventUpdateWithoutHistory_updated_historyInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'EventCreateWithoutHistory_updated_historyInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const EventUpdateWithoutHistory_updated_historyInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'EventUpdateWithoutHistory_updated_historyInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'when'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTimeFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'what'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'from'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'JSON'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'to'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'JSON'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Who'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonUpdateOneWithoutEvent_who_eventsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History_created_history'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryUpdateOneWithoutCreatedInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History_deleted_history'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryUpdateOneWithoutDeletedInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const HistoryUpdateOneWithoutCreatedInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'HistoryUpdateOneWithoutCreatedInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryCreateWithoutCreatedInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryCreateOrConnectWithoutCreatedInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryUpsertWithoutCreatedInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryUpdateWithoutCreatedInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const HistoryUpsertWithoutCreatedInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'HistoryUpsertWithoutCreatedInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryUpdateWithoutCreatedInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryCreateWithoutCreatedInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const HistoryUpdateWithoutCreatedInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'HistoryUpdateWithoutCreatedInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Updated'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'EventUpdateManyWithoutHistory_updated_historyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Deleted'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'EventUpdateOneWithoutHistory_deleted_historyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'User_history_user'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonUpdateOneWithoutHistoryInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Money_history_money'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'MoneyUpdateOneWithoutHistoryInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_history_cloth'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothUpdateOneWithoutHistoryInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const EventUpdateOneWithoutHistory_deleted_historyInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'EventUpdateOneWithoutHistory_deleted_historyInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'EventCreateWithoutHistory_deleted_historyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'EventCreateOrConnectWithoutHistory_deleted_historyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'EventUpsertWithoutHistory_deleted_historyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'EventUpdateWithoutHistory_deleted_historyInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const EventUpsertWithoutHistory_deleted_historyInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'EventUpsertWithoutHistory_deleted_historyInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'EventUpdateWithoutHistory_deleted_historyInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'EventCreateWithoutHistory_deleted_historyInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const EventUpdateWithoutHistory_deleted_historyInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'EventUpdateWithoutHistory_deleted_historyInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'when'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTimeFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'what'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'from'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'JSON'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'to'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'JSON'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Who'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonUpdateOneWithoutEvent_who_eventsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History_created_history'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryUpdateOneWithoutCreatedInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History_updated_history'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryUpdateOneWithoutUpdatedInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const HistoryUpdateOneWithoutUpdatedInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'HistoryUpdateOneWithoutUpdatedInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryCreateWithoutUpdatedInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryCreateOrConnectWithoutUpdatedInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryUpsertWithoutUpdatedInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryUpdateWithoutUpdatedInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const HistoryUpsertWithoutUpdatedInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'HistoryUpsertWithoutUpdatedInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryUpdateWithoutUpdatedInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryCreateWithoutUpdatedInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const HistoryUpdateWithoutUpdatedInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'HistoryUpdateWithoutUpdatedInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Created'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'EventUpdateOneWithoutHistory_created_historyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Deleted'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'EventUpdateOneWithoutHistory_deleted_historyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'User_history_user'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonUpdateOneWithoutHistoryInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Money_history_money'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'MoneyUpdateOneWithoutHistoryInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_history_cloth'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothUpdateOneWithoutHistoryInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonUpdateOneWithoutHistoryInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PersonUpdateOneWithoutHistoryInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonCreateWithoutHistoryInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateOrConnectWithoutHistoryInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonUpsertWithoutHistoryInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonUpdateWithoutHistoryInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonUpsertWithoutHistoryInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PersonUpsertWithoutHistoryInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonUpdateWithoutHistoryInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonCreateWithoutHistoryInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const PersonUpdateWithoutHistoryInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PersonUpdateWithoutHistoryInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'email'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'birthday'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableDateTimeFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'firstName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lastName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Gender'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'GenderUpdateOneWithoutProfile_gender_profilesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemGenderUpdateManyWithoutPerson_itemGender_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Telephone'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TelephoneUpdateOneWithoutPerson_telephone_personInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Address'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressUpdateManyWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Picture'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureUpdateOneWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothSizeUpdateManyWithoutPerson_clothSize_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothStyles'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothStyleUpdateManyWithoutPerson_clothStyle_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Event_who_events'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventUpdateManyWithoutWhoInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_owner_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpdateManyWithoutOwnerInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Channel'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ChannelUpdateOneWithoutParticipantsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_wantedBy_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageUpdateManyWithoutWantedByInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_from_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'TradePackageUpdateManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Rating_person_ratings'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'RatingUpdateManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const TelephoneUpdateOneWithoutPerson_telephone_personInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'TelephoneUpdateOneWithoutPerson_telephone_personInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TelephoneCreateWithoutPerson_telephone_personInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TelephoneCreateOrConnectWithoutPerson_telephone_personInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TelephoneUpsertWithoutPerson_telephone_personInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TelephoneWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TelephoneUpdateWithoutPerson_telephone_personInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const TelephoneUpsertWithoutPerson_telephone_personInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'TelephoneUpsertWithoutPerson_telephone_personInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TelephoneUpdateWithoutPerson_telephone_personInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TelephoneCreateWithoutPerson_telephone_personInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const TelephoneUpdateWithoutPerson_telephone_personInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'TelephoneUpdateWithoutPerson_telephone_personInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'telephoneNumber'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const AddressUpdateManyWithoutPersonInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'AddressUpdateManyWithoutPersonInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'AddressCreateWithoutPersonInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'AddressCreateOrConnectWithoutPersonInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'AddressUpsertWithWhereUniqueWithoutPersonInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'createMany'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressCreateManyPersonInputEnvelope'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'set'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'AddressWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'AddressWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'AddressWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'AddressWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'AddressUpdateWithWhereUniqueWithoutPersonInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'updateMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'AddressUpdateManyWithWhereWithoutPersonInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'deleteMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'AddressScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const AddressUpsertWithWhereUniqueWithoutPersonInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'AddressUpsertWithWhereUniqueWithoutPersonInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressUpdateWithoutPersonInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressCreateWithoutPersonInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const AddressUpdateWithoutPersonInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'AddressUpdateWithoutPersonInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'line1'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'line2'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'city'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'province'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'zip'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Country'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'CountryUpdateOneWithoutAddress_county_addressesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Wardrobes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'WardrobeUpdateManyWithoutAddressInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const CountryUpdateOneWithoutAddress_county_addressesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'CountryUpdateOneWithoutAddress_county_addressesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CountryCreateWithoutAddress_county_addressesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'CountryCreateOrConnectWithoutAddress_county_addressesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CountryUpsertWithoutAddress_county_addressesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'CountryWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CountryUpdateWithoutAddress_county_addressesInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const CountryUpsertWithoutAddress_county_addressesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'CountryUpsertWithoutAddress_county_addressesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CountryUpdateWithoutAddress_county_addressesInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CountryCreateWithoutAddress_county_addressesInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const CountryUpdateWithoutAddress_county_addressesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'CountryUpdateWithoutAddress_county_addressesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const WardrobeUpdateManyWithoutAddressInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'WardrobeUpdateManyWithoutAddressInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name:
                      _i1.NameNode(value: 'WardrobeCreateWithoutAddressInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'WardrobeCreateOrConnectWithoutAddressInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'WardrobeUpsertWithWhereUniqueWithoutAddressInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'createMany'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'WardrobeCreateManyAddressInputEnvelope'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'set'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'WardrobeWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'WardrobeWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'WardrobeWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'WardrobeWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'WardrobeUpdateWithWhereUniqueWithoutAddressInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'updateMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'WardrobeUpdateManyWithWhereWithoutAddressInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'deleteMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'WardrobeScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const WardrobeUpsertWithWhereUniqueWithoutAddressInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'WardrobeUpsertWithWhereUniqueWithoutAddressInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'WardrobeWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'WardrobeUpdateWithoutAddressInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'WardrobeCreateWithoutAddressInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const WardrobeUpdateWithoutAddressInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'WardrobeUpdateWithoutAddressInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloths'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothUpdateManyWithoutWardrobeInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothUpdateManyWithoutWardrobeInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothUpdateManyWithoutWardrobeInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothCreateWithoutWardrobeInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'ClothCreateOrConnectWithoutWardrobeInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'ClothUpsertWithWhereUniqueWithoutWardrobeInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'createMany'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothCreateManyWardrobeInputEnvelope'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'set'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'ClothUpdateWithWhereUniqueWithoutWardrobeInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'updateMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'ClothUpdateManyWithWhereWithoutWardrobeInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'deleteMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothUpsertWithWhereUniqueWithoutWardrobeInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ClothUpsertWithWhereUniqueWithoutWardrobeInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothUpdateWithoutWardrobeInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothCreateWithoutWardrobeInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ClothUpdateWithoutWardrobeInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothUpdateWithoutWardrobeInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'code'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Material'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'MaterialUpdateOneWithoutCloth_material_clothsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ItemUpdateOneRequiredWithoutCloth_item_clothInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothSizeUpdateManyWithoutCloth_clothSize_clothInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothStyles'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothStyleUpdateManyWithoutItem_clothStyle_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryUpdateOneWithoutCloth_history_clothInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothSizeUpdateManyWithoutCloth_clothSize_clothInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ClothSizeUpdateManyWithoutCloth_clothSize_clothInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ClothSizeCreateWithoutCloth_clothSize_clothInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ClothSizeCreateOrConnectWithoutCloth_clothSize_clothInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ClothSizeUpsertWithWhereUniqueWithoutCloth_clothSize_clothInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'set'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothSizeWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothSizeWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothSizeWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothSizeWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ClothSizeUpdateWithWhereUniqueWithoutCloth_clothSize_clothInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'updateMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ClothSizeUpdateManyWithWhereWithoutCloth_clothSize_clothInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'deleteMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothSizeScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothSizeUpsertWithWhereUniqueWithoutCloth_clothSize_clothInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'ClothSizeUpsertWithWhereUniqueWithoutCloth_clothSize_clothInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothSizeWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothSizeUpdateWithoutCloth_clothSize_clothInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothSizeCreateWithoutCloth_clothSize_clothInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ClothSizeUpdateWithoutCloth_clothSize_clothInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ClothSizeUpdateWithoutCloth_clothSize_clothInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'NullableIntFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'SizeModel'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableEnumSizeModelFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Categories'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryUpdateManyWithoutClothSizesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Person_clothSize_persons'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'PersonUpdateManyWithoutClothSizesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ComparableTo'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothSizeUpdateManyWithoutClothSizeInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSize'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothSizeUpdateManyWithoutComparableToInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const CategoryUpdateManyWithoutClothSizesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'CategoryUpdateManyWithoutClothSizesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'CategoryCreateWithoutClothSizesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'CategoryCreateOrConnectWithoutClothSizesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'CategoryUpsertWithWhereUniqueWithoutClothSizesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'set'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'CategoryWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'CategoryWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'CategoryWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'CategoryWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'CategoryUpdateWithWhereUniqueWithoutClothSizesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'updateMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'CategoryUpdateManyWithWhereWithoutClothSizesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'deleteMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'CategoryScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const CategoryUpsertWithWhereUniqueWithoutClothSizesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'CategoryUpsertWithWhereUniqueWithoutClothSizesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'CategoryWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'CategoryUpdateWithoutClothSizesInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'CategoryCreateWithoutClothSizesInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const CategoryUpdateWithoutClothSizesInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'CategoryUpdateWithoutClothSizesInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Brand_category_brands'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'BrandUpdateManyWithoutCategoriesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_category_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpdateManyWithoutCategoryInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ParentCategory'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryUpdateOneWithoutSubCategoriesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'SubCategories'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryUpdateManyWithoutParentCategoryInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const BrandUpdateManyWithoutCategoriesInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'BrandUpdateManyWithoutCategoriesInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name:
                      _i1.NameNode(value: 'BrandCreateWithoutCategoriesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'BrandCreateOrConnectWithoutCategoriesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'BrandUpsertWithWhereUniqueWithoutCategoriesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'set'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'BrandWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'BrandWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'BrandWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'BrandWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'BrandUpdateWithWhereUniqueWithoutCategoriesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'updateMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'BrandUpdateManyWithWhereWithoutCategoriesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'deleteMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'BrandScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const BrandUpsertWithWhereUniqueWithoutCategoriesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'BrandUpsertWithWhereUniqueWithoutCategoriesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'BrandWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'BrandUpdateWithoutCategoriesInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'BrandCreateWithoutCategoriesInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const BrandUpdateWithoutCategoriesInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'BrandUpdateWithoutCategoriesInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const BrandUpdateWithWhereUniqueWithoutCategoriesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'BrandUpdateWithWhereUniqueWithoutCategoriesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'BrandWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'BrandUpdateWithoutCategoriesInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const BrandUpdateManyWithWhereWithoutCategoriesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'BrandUpdateManyWithWhereWithoutCategoriesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'BrandScalarWhereInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'BrandUpdateManyMutationInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const BrandScalarWhereInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'BrandScalarWhereInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'AND'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'BrandScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'OR'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'BrandScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'NOT'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'BrandScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringNullableFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const BrandUpdateManyMutationInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'BrandUpdateManyMutationInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemUpdateManyWithoutCategoryInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemUpdateManyWithoutCategoryInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemCreateWithoutCategoryInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'ItemCreateOrConnectWithoutCategoryInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'ItemUpsertWithWhereUniqueWithoutCategoryInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'createMany'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemCreateManyCategoryInputEnvelope'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'set'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'ItemUpdateWithWhereUniqueWithoutCategoryInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'updateMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'ItemUpdateManyWithWhereWithoutCategoryInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'deleteMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemUpsertWithWhereUniqueWithoutCategoryInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ItemUpsertWithWhereUniqueWithoutCategoryInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpdateWithoutCategoryInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemCreateWithoutCategoryInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ItemUpdateWithoutCategoryInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemUpdateWithoutCategoryInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'active'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'NullableBoolFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'description'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Value'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'MoneyUpdateOneWithoutItem_value_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Colors'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ColorUpdateManyWithoutItem_color_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemGenderUpdateManyWithoutItems_itemGender_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Pictures'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PictureUpdateManyWithoutItem_picture_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Condition'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ConditionUpdateOneWithoutItem_condition_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Owner'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonUpdateOneWithoutItem_owner_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Booster'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'BoosterUpdateManyWithoutItem_booster_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_item_cloth'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothUpdateOneWithoutItemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_item_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageUpdateManyWithoutItemsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ColorUpdateManyWithoutItem_color_itemsInput =
    _i1.InputObjectTypeDefinitionNode(
        name:
            _i1.NameNode(value: 'ColorUpdateManyWithoutItem_color_itemsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'ColorCreateWithoutItem_color_itemsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ColorCreateOrConnectWithoutItem_color_itemsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ColorUpsertWithWhereUniqueWithoutItem_color_itemsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'set'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ColorWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ColorWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ColorWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ColorWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ColorUpdateWithWhereUniqueWithoutItem_color_itemsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'updateMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ColorUpdateManyWithWhereWithoutItem_color_itemsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'deleteMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ColorScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const ColorUpsertWithWhereUniqueWithoutItem_color_itemsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ColorUpsertWithWhereUniqueWithoutItem_color_itemsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ColorWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ColorUpdateWithoutItem_color_itemsInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ColorCreateWithoutItem_color_itemsInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ColorUpdateWithoutItem_color_itemsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'ColorUpdateWithoutItem_color_itemsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Type'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableEnumColorTypeFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const NullableEnumColorTypeFieldUpdateOperationsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'NullableEnumColorTypeFieldUpdateOperationsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'set'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ColorType'), isNonNull: false),
          defaultValue: null)
    ]);
const ColorUpdateWithWhereUniqueWithoutItem_color_itemsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ColorUpdateWithWhereUniqueWithoutItem_color_itemsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ColorWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ColorUpdateWithoutItem_color_itemsInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ColorUpdateManyWithWhereWithoutItem_color_itemsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ColorUpdateManyWithWhereWithoutItem_color_itemsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ColorScalarWhereInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ColorUpdateManyMutationInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ColorScalarWhereInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ColorScalarWhereInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'AND'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ColorScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'OR'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ColorScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'NOT'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ColorScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringNullableFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Type'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EnumColorTypeNullableFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ColorUpdateManyMutationInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ColorUpdateManyMutationInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Type'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableEnumColorTypeFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemGenderUpdateManyWithoutItems_itemGender_itemsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ItemGenderUpdateManyWithoutItems_itemGender_itemsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ItemGenderCreateWithoutItems_itemGender_itemsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ItemGenderCreateOrConnectWithoutItems_itemGender_itemsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ItemGenderUpsertWithWhereUniqueWithoutItems_itemGender_itemsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'set'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemGenderWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemGenderWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemGenderWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemGenderWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ItemGenderUpdateWithWhereUniqueWithoutItems_itemGender_itemsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'updateMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ItemGenderUpdateManyWithWhereWithoutItems_itemGender_itemsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'deleteMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemGenderScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemGenderUpsertWithWhereUniqueWithoutItems_itemGender_itemsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'ItemGenderUpsertWithWhereUniqueWithoutItems_itemGender_itemsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemGenderWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ItemGenderUpdateWithoutItems_itemGender_itemsInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ItemGenderCreateWithoutItems_itemGender_itemsInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ItemGenderUpdateWithoutItems_itemGender_itemsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ItemGenderUpdateWithoutItems_itemGender_itemsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'NullableIntFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Person_itemGender_persons'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonUpdateManyWithoutItemGendersInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonUpdateManyWithoutItemGendersInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'PersonUpdateManyWithoutItemGendersInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'PersonCreateWithoutItemGendersInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'PersonCreateOrConnectWithoutItemGendersInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'PersonUpsertWithWhereUniqueWithoutItemGendersInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'set'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'PersonUpdateWithWhereUniqueWithoutItemGendersInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'updateMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'PersonUpdateManyWithWhereWithoutItemGendersInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'deleteMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PersonScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonUpsertWithWhereUniqueWithoutItemGendersInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'PersonUpsertWithWhereUniqueWithoutItemGendersInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonUpdateWithoutItemGendersInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonCreateWithoutItemGendersInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const PersonUpdateWithoutItemGendersInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PersonUpdateWithoutItemGendersInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'email'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'birthday'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableDateTimeFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'firstName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lastName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Gender'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'GenderUpdateOneWithoutProfile_gender_profilesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryUpdateOneWithoutUser_history_userInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Telephone'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TelephoneUpdateOneWithoutPerson_telephone_personInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Address'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressUpdateManyWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Picture'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureUpdateOneWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothSizeUpdateManyWithoutPerson_clothSize_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothStyles'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothStyleUpdateManyWithoutPerson_clothStyle_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Event_who_events'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventUpdateManyWithoutWhoInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_owner_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpdateManyWithoutOwnerInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Channel'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ChannelUpdateOneWithoutParticipantsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_wantedBy_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageUpdateManyWithoutWantedByInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_from_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'TradePackageUpdateManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Rating_person_ratings'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'RatingUpdateManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PictureUpdateOneWithoutPersonInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PictureUpdateOneWithoutPersonInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureCreateWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PictureCreateOrConnectWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureUpsertWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureUpdateWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PictureUpsertWithoutPersonInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PictureUpsertWithoutPersonInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureUpdateWithoutPersonInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureCreateWithoutPersonInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const PictureUpdateWithoutPersonInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PictureUpdateWithoutPersonInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'NullableIntFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'LQ'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'FileUpdateOneWithoutFile_lqPictureFile_fileInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'MQ'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'FileUpdateOneWithoutFile_mqPictureFile_fileInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'HQ'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'FileUpdateOneWithoutFile_hqPictureFile_fileInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_picture_item'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpdateOneWithoutPicturesInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const FileUpdateOneWithoutFile_lqPictureFile_fileInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'FileUpdateOneWithoutFile_lqPictureFile_fileInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'FileCreateWithoutFile_lqPictureFile_fileInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'FileCreateOrConnectWithoutFile_lqPictureFile_fileInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'FileUpsertWithoutFile_lqPictureFile_fileInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'FileWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'FileUpdateWithoutFile_lqPictureFile_fileInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const FileUpsertWithoutFile_lqPictureFile_fileInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'FileUpsertWithoutFile_lqPictureFile_fileInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'FileUpdateWithoutFile_lqPictureFile_fileInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'FileCreateWithoutFile_lqPictureFile_fileInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const FileUpdateWithoutFile_lqPictureFile_fileInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'FileUpdateWithoutFile_lqPictureFile_fileInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'extension'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'File_mqPictureFile_file'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureUpdateOneWithoutMQInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'File_hqPictureFile_file'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureUpdateOneWithoutHQInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PictureUpdateOneWithoutMQInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PictureUpdateOneWithoutMQInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureCreateWithoutMQInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureCreateOrConnectWithoutMQInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureUpsertWithoutMQInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureUpdateWithoutMQInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PictureUpsertWithoutMQInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PictureUpsertWithoutMQInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureUpdateWithoutMQInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureCreateWithoutMQInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const PictureUpdateWithoutMQInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PictureUpdateWithoutMQInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'NullableIntFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'LQ'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'FileUpdateOneWithoutFile_lqPictureFile_fileInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'HQ'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'FileUpdateOneWithoutFile_hqPictureFile_fileInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Person'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonUpdateOneWithoutPictureInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_picture_item'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpdateOneWithoutPicturesInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const FileUpdateOneWithoutFile_hqPictureFile_fileInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'FileUpdateOneWithoutFile_hqPictureFile_fileInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'FileCreateWithoutFile_hqPictureFile_fileInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'FileCreateOrConnectWithoutFile_hqPictureFile_fileInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'FileUpsertWithoutFile_hqPictureFile_fileInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'FileWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'FileUpdateWithoutFile_hqPictureFile_fileInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const FileUpsertWithoutFile_hqPictureFile_fileInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'FileUpsertWithoutFile_hqPictureFile_fileInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'FileUpdateWithoutFile_hqPictureFile_fileInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'FileCreateWithoutFile_hqPictureFile_fileInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const FileUpdateWithoutFile_hqPictureFile_fileInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'FileUpdateWithoutFile_hqPictureFile_fileInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'extension'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'File_lqPictureFile_file'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureUpdateOneWithoutLQInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'File_mqPictureFile_file'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureUpdateOneWithoutMQInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PictureUpdateOneWithoutLQInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PictureUpdateOneWithoutLQInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureCreateWithoutLQInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureCreateOrConnectWithoutLQInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureUpsertWithoutLQInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureUpdateWithoutLQInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PictureUpsertWithoutLQInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PictureUpsertWithoutLQInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureUpdateWithoutLQInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureCreateWithoutLQInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const PictureUpdateWithoutLQInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PictureUpdateWithoutLQInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'NullableIntFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'MQ'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'FileUpdateOneWithoutFile_mqPictureFile_fileInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'HQ'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'FileUpdateOneWithoutFile_hqPictureFile_fileInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Person'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonUpdateOneWithoutPictureInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_picture_item'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpdateOneWithoutPicturesInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const FileUpdateOneWithoutFile_mqPictureFile_fileInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'FileUpdateOneWithoutFile_mqPictureFile_fileInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'FileCreateWithoutFile_mqPictureFile_fileInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'FileCreateOrConnectWithoutFile_mqPictureFile_fileInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'FileUpsertWithoutFile_mqPictureFile_fileInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'FileWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'FileUpdateWithoutFile_mqPictureFile_fileInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const FileUpsertWithoutFile_mqPictureFile_fileInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'FileUpsertWithoutFile_mqPictureFile_fileInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'FileUpdateWithoutFile_mqPictureFile_fileInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'FileCreateWithoutFile_mqPictureFile_fileInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const FileUpdateWithoutFile_mqPictureFile_fileInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'FileUpdateWithoutFile_mqPictureFile_fileInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'extension'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'File_lqPictureFile_file'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureUpdateOneWithoutLQInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'File_hqPictureFile_file'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureUpdateOneWithoutHQInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PictureUpdateOneWithoutHQInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PictureUpdateOneWithoutHQInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureCreateWithoutHQInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureCreateOrConnectWithoutHQInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureUpsertWithoutHQInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureUpdateWithoutHQInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PictureUpsertWithoutHQInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PictureUpsertWithoutHQInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureUpdateWithoutHQInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureCreateWithoutHQInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const PictureUpdateWithoutHQInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PictureUpdateWithoutHQInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'NullableIntFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'LQ'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'FileUpdateOneWithoutFile_lqPictureFile_fileInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'MQ'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'FileUpdateOneWithoutFile_mqPictureFile_fileInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Person'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonUpdateOneWithoutPictureInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_picture_item'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpdateOneWithoutPicturesInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonUpdateOneWithoutPictureInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PersonUpdateOneWithoutPictureInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonCreateWithoutPictureInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateOrConnectWithoutPictureInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonUpsertWithoutPictureInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonUpdateWithoutPictureInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonUpsertWithoutPictureInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PersonUpsertWithoutPictureInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonUpdateWithoutPictureInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonCreateWithoutPictureInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const PersonUpdateWithoutPictureInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PersonUpdateWithoutPictureInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'email'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'birthday'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableDateTimeFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'firstName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lastName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Gender'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'GenderUpdateOneWithoutProfile_gender_profilesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemGenderUpdateManyWithoutPerson_itemGender_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryUpdateOneWithoutUser_history_userInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Telephone'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TelephoneUpdateOneWithoutPerson_telephone_personInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Address'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressUpdateManyWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothSizeUpdateManyWithoutPerson_clothSize_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothStyles'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothStyleUpdateManyWithoutPerson_clothStyle_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Event_who_events'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventUpdateManyWithoutWhoInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_owner_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpdateManyWithoutOwnerInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Channel'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ChannelUpdateOneWithoutParticipantsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_wantedBy_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageUpdateManyWithoutWantedByInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_from_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'TradePackageUpdateManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Rating_person_ratings'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'RatingUpdateManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothSizeUpdateManyWithoutPerson_clothSize_personsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ClothSizeUpdateManyWithoutPerson_clothSize_personsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ClothSizeCreateWithoutPerson_clothSize_personsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ClothSizeCreateOrConnectWithoutPerson_clothSize_personsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ClothSizeUpsertWithWhereUniqueWithoutPerson_clothSize_personsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'set'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothSizeWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothSizeWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothSizeWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothSizeWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ClothSizeUpdateWithWhereUniqueWithoutPerson_clothSize_personsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'updateMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ClothSizeUpdateManyWithWhereWithoutPerson_clothSize_personsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'deleteMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothSizeScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothSizeUpsertWithWhereUniqueWithoutPerson_clothSize_personsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'ClothSizeUpsertWithWhereUniqueWithoutPerson_clothSize_personsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothSizeWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothSizeUpdateWithoutPerson_clothSize_personsInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothSizeCreateWithoutPerson_clothSize_personsInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ClothSizeUpdateWithoutPerson_clothSize_personsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ClothSizeUpdateWithoutPerson_clothSize_personsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'NullableIntFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'SizeModel'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableEnumSizeModelFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Categories'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryUpdateManyWithoutClothSizesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_clothSize_cloth'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'ClothUpdateManyWithoutClothSizesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ComparableTo'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothSizeUpdateManyWithoutClothSizeInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSize'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothSizeUpdateManyWithoutComparableToInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothSizeUpdateManyWithoutClothSizeInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'ClothSizeUpdateManyWithoutClothSizeInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'ClothSizeCreateWithoutClothSizeInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'ClothSizeCreateOrConnectWithoutClothSizeInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ClothSizeUpsertWithWhereUniqueWithoutClothSizeInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'set'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothSizeWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothSizeWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothSizeWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothSizeWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ClothSizeUpdateWithWhereUniqueWithoutClothSizeInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'updateMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ClothSizeUpdateManyWithWhereWithoutClothSizeInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'deleteMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothSizeScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothSizeUpsertWithWhereUniqueWithoutClothSizeInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ClothSizeUpsertWithWhereUniqueWithoutClothSizeInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothSizeWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothSizeUpdateWithoutClothSizeInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothSizeCreateWithoutClothSizeInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ClothSizeUpdateWithoutClothSizeInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothSizeUpdateWithoutClothSizeInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'NullableIntFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'SizeModel'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableEnumSizeModelFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Categories'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryUpdateManyWithoutClothSizesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_clothSize_cloth'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'ClothUpdateManyWithoutClothSizesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Person_clothSize_persons'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'PersonUpdateManyWithoutClothSizesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ComparableTo'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothSizeUpdateManyWithoutClothSizeInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonUpdateManyWithoutClothSizesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'PersonUpdateManyWithoutClothSizesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name:
                      _i1.NameNode(value: 'PersonCreateWithoutClothSizesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'PersonCreateOrConnectWithoutClothSizesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'PersonUpsertWithWhereUniqueWithoutClothSizesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'set'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'PersonUpdateWithWhereUniqueWithoutClothSizesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'updateMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'PersonUpdateManyWithWhereWithoutClothSizesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'deleteMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PersonScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonUpsertWithWhereUniqueWithoutClothSizesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'PersonUpsertWithWhereUniqueWithoutClothSizesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonUpdateWithoutClothSizesInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonCreateWithoutClothSizesInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const PersonUpdateWithoutClothSizesInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PersonUpdateWithoutClothSizesInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'email'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'birthday'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableDateTimeFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'firstName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lastName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Gender'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'GenderUpdateOneWithoutProfile_gender_profilesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemGenderUpdateManyWithoutPerson_itemGender_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryUpdateOneWithoutUser_history_userInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Telephone'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TelephoneUpdateOneWithoutPerson_telephone_personInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Address'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressUpdateManyWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Picture'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureUpdateOneWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothStyles'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothStyleUpdateManyWithoutPerson_clothStyle_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Event_who_events'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventUpdateManyWithoutWhoInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_owner_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpdateManyWithoutOwnerInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Channel'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ChannelUpdateOneWithoutParticipantsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_wantedBy_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageUpdateManyWithoutWantedByInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_from_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'TradePackageUpdateManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Rating_person_ratings'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'RatingUpdateManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothStyleUpdateManyWithoutPerson_clothStyle_personsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ClothStyleUpdateManyWithoutPerson_clothStyle_personsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ClothStyleCreateWithoutPerson_clothStyle_personsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ClothStyleCreateOrConnectWithoutPerson_clothStyle_personsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ClothStyleUpsertWithWhereUniqueWithoutPerson_clothStyle_personsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'set'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothStyleWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothStyleWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothStyleWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothStyleWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ClothStyleUpdateWithWhereUniqueWithoutPerson_clothStyle_personsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'updateMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ClothStyleUpdateManyWithWhereWithoutPerson_clothStyle_personsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'deleteMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothStyleScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothStyleUpsertWithWhereUniqueWithoutPerson_clothStyle_personsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'ClothStyleUpsertWithWhereUniqueWithoutPerson_clothStyle_personsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothStyleWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothStyleUpdateWithoutPerson_clothStyle_personsInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothStyleCreateWithoutPerson_clothStyle_personsInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ClothStyleUpdateWithoutPerson_clothStyle_personsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ClothStyleUpdateWithoutPerson_clothStyle_personsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_clothStyle_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'ClothUpdateManyWithoutClothStylesInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothStyleUpdateWithWhereUniqueWithoutPerson_clothStyle_personsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'ClothStyleUpdateWithWhereUniqueWithoutPerson_clothStyle_personsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothStyleWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothStyleUpdateWithoutPerson_clothStyle_personsInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ClothStyleUpdateManyWithWhereWithoutPerson_clothStyle_personsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'ClothStyleUpdateManyWithWhereWithoutPerson_clothStyle_personsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothStyleScalarWhereInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothStyleUpdateManyMutationInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ClothStyleScalarWhereInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothStyleScalarWhereInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'AND'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothStyleScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'OR'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothStyleScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'NOT'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothStyleScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringNullableFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothStyleUpdateManyMutationInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothStyleUpdateManyMutationInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const EventUpdateManyWithoutWhoInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'EventUpdateManyWithoutWhoInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'EventCreateWithoutWhoInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'EventCreateOrConnectWithoutWhoInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'EventUpsertWithWhereUniqueWithoutWhoInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'createMany'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventCreateManyWhoInputEnvelope'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'set'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'EventWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'EventWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'EventWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'EventWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'EventUpdateWithWhereUniqueWithoutWhoInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'updateMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'EventUpdateManyWithWhereWithoutWhoInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'deleteMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'EventScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const EventUpsertWithWhereUniqueWithoutWhoInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'EventUpsertWithWhereUniqueWithoutWhoInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventUpdateWithoutWhoInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventCreateWithoutWhoInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const EventUpdateWithoutWhoInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'EventUpdateWithoutWhoInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'when'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTimeFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'what'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'from'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'JSON'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'to'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'JSON'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History_created_history'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryUpdateOneWithoutCreatedInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History_updated_history'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryUpdateOneWithoutUpdatedInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History_deleted_history'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryUpdateOneWithoutDeletedInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const HistoryUpdateOneWithoutDeletedInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'HistoryUpdateOneWithoutDeletedInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryCreateWithoutDeletedInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryCreateOrConnectWithoutDeletedInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryUpsertWithoutDeletedInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryUpdateWithoutDeletedInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const HistoryUpsertWithoutDeletedInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'HistoryUpsertWithoutDeletedInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryUpdateWithoutDeletedInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryCreateWithoutDeletedInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const HistoryUpdateWithoutDeletedInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'HistoryUpdateWithoutDeletedInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Created'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'EventUpdateOneWithoutHistory_created_historyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Updated'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'EventUpdateManyWithoutHistory_updated_historyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'User_history_user'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonUpdateOneWithoutHistoryInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Money_history_money'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'MoneyUpdateOneWithoutHistoryInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_history_cloth'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothUpdateOneWithoutHistoryInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const MoneyUpdateOneWithoutHistoryInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'MoneyUpdateOneWithoutHistoryInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'MoneyCreateWithoutHistoryInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'MoneyCreateOrConnectWithoutHistoryInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'MoneyUpsertWithoutHistoryInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'MoneyWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'MoneyUpdateWithoutHistoryInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const MoneyUpsertWithoutHistoryInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'MoneyUpsertWithoutHistoryInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'MoneyUpdateWithoutHistoryInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'MoneyCreateWithoutHistoryInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const MoneyUpdateWithoutHistoryInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'MoneyUpdateWithoutHistoryInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'value'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableFloatFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Currency'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableEnumCurrencyFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_value_item'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpdateOneWithoutValueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'SubscriptionPlan_money_subscriptionPlans'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'SubscriptionPlanUpdateOneWithoutStandardPriceInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Subscription_money_subscription'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'SubscriptionUpdateOneWithoutPriceInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemUpdateOneWithoutValueInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemUpdateOneWithoutValueInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemCreateWithoutValueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemCreateOrConnectWithoutValueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpsertWithoutValueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpdateWithoutValueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemUpsertWithoutValueInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemUpsertWithoutValueInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpdateWithoutValueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemCreateWithoutValueInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ItemUpdateWithoutValueInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemUpdateWithoutValueInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'active'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'NullableBoolFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'description'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Category'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'CategoryUpdateOneRequiredWithoutItem_category_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Colors'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ColorUpdateManyWithoutItem_color_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemGenderUpdateManyWithoutItems_itemGender_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Pictures'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PictureUpdateManyWithoutItem_picture_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Condition'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ConditionUpdateOneWithoutItem_condition_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Owner'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonUpdateOneWithoutItem_owner_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Booster'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'BoosterUpdateManyWithoutItem_booster_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_item_cloth'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothUpdateOneWithoutItemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_item_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageUpdateManyWithoutItemsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PictureUpdateManyWithoutItem_picture_itemInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'PictureUpdateManyWithoutItem_picture_itemInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'PictureCreateWithoutItem_picture_itemInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'PictureCreateOrConnectWithoutItem_picture_itemInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'PictureUpsertWithWhereUniqueWithoutItem_picture_itemInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'createMany'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PictureCreateManyItem_picture_itemInputEnvelope'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'set'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PictureWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PictureWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PictureWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PictureWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'PictureUpdateWithWhereUniqueWithoutItem_picture_itemInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'updateMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'PictureUpdateManyWithWhereWithoutItem_picture_itemInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'deleteMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PictureScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const PictureUpsertWithWhereUniqueWithoutItem_picture_itemInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'PictureUpsertWithWhereUniqueWithoutItem_picture_itemInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PictureUpdateWithoutItem_picture_itemInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PictureCreateWithoutItem_picture_itemInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const PictureUpdateWithoutItem_picture_itemInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'PictureUpdateWithoutItem_picture_itemInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'NullableIntFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'LQ'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'FileUpdateOneWithoutFile_lqPictureFile_fileInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'MQ'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'FileUpdateOneWithoutFile_mqPictureFile_fileInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'HQ'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'FileUpdateOneWithoutFile_hqPictureFile_fileInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Person'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonUpdateOneWithoutPictureInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PictureUpdateWithWhereUniqueWithoutItem_picture_itemInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'PictureUpdateWithWhereUniqueWithoutItem_picture_itemInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PictureUpdateWithoutItem_picture_itemInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const PictureUpdateManyWithWhereWithoutItem_picture_itemInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'PictureUpdateManyWithWhereWithoutItem_picture_itemInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureScalarWhereInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureUpdateManyMutationInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const PictureScalarWhereInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PictureScalarWhereInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'AND'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PictureScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'OR'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PictureScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'NOT'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PictureScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'IntNullableFilter'), isNonNull: false),
          defaultValue: null)
    ]);
const PictureUpdateManyMutationInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PictureUpdateManyMutationInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'NullableIntFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ConditionUpdateOneWithoutItem_condition_itemsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ConditionUpdateOneWithoutItem_condition_itemsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ConditionCreateWithoutItem_condition_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ConditionCreateOrConnectWithoutItem_condition_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ConditionUpsertWithoutItem_condition_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ConditionWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ConditionUpdateWithoutItem_condition_itemsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ConditionUpsertWithoutItem_condition_itemsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ConditionUpsertWithoutItem_condition_itemsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ConditionUpdateWithoutItem_condition_itemsInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ConditionCreateWithoutItem_condition_itemsInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ConditionUpdateWithoutItem_condition_itemsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ConditionUpdateWithoutItem_condition_itemsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonUpdateOneWithoutItem_owner_itemsInput =
    _i1.InputObjectTypeDefinitionNode(
        name:
            _i1.NameNode(value: 'PersonUpdateOneWithoutItem_owner_itemsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateWithoutItem_owner_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateOrConnectWithoutItem_owner_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonUpsertWithoutItem_owner_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonUpdateWithoutItem_owner_itemsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonUpsertWithoutItem_owner_itemsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'PersonUpsertWithoutItem_owner_itemsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonUpdateWithoutItem_owner_itemsInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateWithoutItem_owner_itemsInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const PersonUpdateWithoutItem_owner_itemsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'PersonUpdateWithoutItem_owner_itemsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'email'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'birthday'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableDateTimeFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'firstName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lastName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Gender'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'GenderUpdateOneWithoutProfile_gender_profilesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemGenderUpdateManyWithoutPerson_itemGender_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryUpdateOneWithoutUser_history_userInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Telephone'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TelephoneUpdateOneWithoutPerson_telephone_personInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Address'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressUpdateManyWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Picture'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureUpdateOneWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothSizeUpdateManyWithoutPerson_clothSize_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothStyles'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothStyleUpdateManyWithoutPerson_clothStyle_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Event_who_events'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventUpdateManyWithoutWhoInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Channel'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ChannelUpdateOneWithoutParticipantsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_wantedBy_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageUpdateManyWithoutWantedByInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_from_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'TradePackageUpdateManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Rating_person_ratings'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'RatingUpdateManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ChannelUpdateOneWithoutParticipantsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'ChannelUpdateOneWithoutParticipantsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'ChannelCreateWithoutParticipantsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ChannelCreateOrConnectWithoutParticipantsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'ChannelUpsertWithoutParticipantsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ChannelWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'ChannelUpdateWithoutParticipantsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ChannelUpsertWithoutParticipantsInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ChannelUpsertWithoutParticipantsInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'ChannelUpdateWithoutParticipantsInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'ChannelCreateWithoutParticipantsInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ChannelUpdateWithoutParticipantsInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ChannelUpdateWithoutParticipantsInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const TradePackageUpdateManyWithoutWantedByInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'TradePackageUpdateManyWithoutWantedByInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'TradePackageCreateWithoutWantedByInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'TradePackageCreateOrConnectWithoutWantedByInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'TradePackageUpsertWithWhereUniqueWithoutWantedByInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'set'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'TradePackageWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'TradePackageWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'TradePackageWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'TradePackageWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'TradePackageUpdateWithWhereUniqueWithoutWantedByInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'updateMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'TradePackageUpdateManyWithWhereWithoutWantedByInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'deleteMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'TradePackageScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const TradePackageUpsertWithWhereUniqueWithoutWantedByInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'TradePackageUpsertWithWhereUniqueWithoutWantedByInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TradePackageWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'TradePackageUpdateWithoutWantedByInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'TradePackageCreateWithoutWantedByInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const TradePackageUpdateWithoutWantedByInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'TradePackageUpdateWithoutWantedByInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'From'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'PersonUpdateOneWithoutTradePackage_from_tradePackagesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemUpdateManyWithoutTradePackage_item_tradePackagesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Offer_tradePackage_offers'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'OfferUpdateManyWithoutTradePackagesInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonUpdateOneWithoutTradePackage_from_tradePackagesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'PersonUpdateOneWithoutTradePackage_from_tradePackagesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'PersonCreateWithoutTradePackage_from_tradePackagesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'PersonCreateOrConnectWithoutTradePackage_from_tradePackagesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'PersonUpsertWithoutTradePackage_from_tradePackagesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'PersonUpdateWithoutTradePackage_from_tradePackagesInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonUpsertWithoutTradePackage_from_tradePackagesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'PersonUpsertWithoutTradePackage_from_tradePackagesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'PersonUpdateWithoutTradePackage_from_tradePackagesInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'PersonCreateWithoutTradePackage_from_tradePackagesInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const PersonUpdateWithoutTradePackage_from_tradePackagesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'PersonUpdateWithoutTradePackage_from_tradePackagesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'email'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'birthday'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableDateTimeFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'firstName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lastName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Gender'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'GenderUpdateOneWithoutProfile_gender_profilesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemGenderUpdateManyWithoutPerson_itemGender_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryUpdateOneWithoutUser_history_userInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Telephone'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TelephoneUpdateOneWithoutPerson_telephone_personInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Address'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressUpdateManyWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Picture'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureUpdateOneWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothSizeUpdateManyWithoutPerson_clothSize_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothStyles'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothStyleUpdateManyWithoutPerson_clothStyle_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Event_who_events'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventUpdateManyWithoutWhoInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_owner_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpdateManyWithoutOwnerInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Channel'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ChannelUpdateOneWithoutParticipantsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_wantedBy_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageUpdateManyWithoutWantedByInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Rating_person_ratings'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'RatingUpdateManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemUpdateManyWithoutOwnerInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemUpdateManyWithoutOwnerInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemCreateWithoutOwnerInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'ItemCreateOrConnectWithoutOwnerInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'ItemUpsertWithWhereUniqueWithoutOwnerInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'createMany'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemCreateManyOwnerInputEnvelope'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'set'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'ItemUpdateWithWhereUniqueWithoutOwnerInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'updateMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'ItemUpdateManyWithWhereWithoutOwnerInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'deleteMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemUpsertWithWhereUniqueWithoutOwnerInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'ItemUpsertWithWhereUniqueWithoutOwnerInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpdateWithoutOwnerInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemCreateWithoutOwnerInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ItemUpdateWithoutOwnerInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemUpdateWithoutOwnerInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'active'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'NullableBoolFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'description'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Category'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'CategoryUpdateOneRequiredWithoutItem_category_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Value'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'MoneyUpdateOneWithoutItem_value_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Colors'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ColorUpdateManyWithoutItem_color_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemGenderUpdateManyWithoutItems_itemGender_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Pictures'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PictureUpdateManyWithoutItem_picture_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Condition'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ConditionUpdateOneWithoutItem_condition_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Booster'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'BoosterUpdateManyWithoutItem_booster_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_item_cloth'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothUpdateOneWithoutItemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_item_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageUpdateManyWithoutItemsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const BoosterUpdateManyWithoutItem_booster_itemInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'BoosterUpdateManyWithoutItem_booster_itemInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'BoosterCreateWithoutItem_booster_itemInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'BoosterCreateOrConnectWithoutItem_booster_itemInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'BoosterUpsertWithWhereUniqueWithoutItem_booster_itemInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'createMany'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'BoosterCreateManyItem_booster_itemInputEnvelope'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'set'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'BoosterWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'BoosterWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'BoosterWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'BoosterWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'BoosterUpdateWithWhereUniqueWithoutItem_booster_itemInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'updateMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'BoosterUpdateManyWithWhereWithoutItem_booster_itemInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'deleteMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'BoosterScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const BoosterUpsertWithWhereUniqueWithoutItem_booster_itemInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'BoosterUpsertWithWhereUniqueWithoutItem_booster_itemInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'BoosterWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'BoosterUpdateWithoutItem_booster_itemInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'BoosterCreateWithoutItem_booster_itemInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const BoosterUpdateWithoutItem_booster_itemInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'BoosterUpdateWithoutItem_booster_itemInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Timespan'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TimespanUpdateOneWithoutBooster_timespan_boosterInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const TimespanUpdateOneWithoutBooster_timespan_boosterInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'TimespanUpdateOneWithoutBooster_timespan_boosterInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TimespanCreateWithoutBooster_timespan_boosterInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TimespanCreateOrConnectWithoutBooster_timespan_boosterInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TimespanUpsertWithoutBooster_timespan_boosterInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TimespanWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TimespanUpdateWithoutBooster_timespan_boosterInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const TimespanUpsertWithoutBooster_timespan_boosterInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'TimespanUpsertWithoutBooster_timespan_boosterInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TimespanUpdateWithoutBooster_timespan_boosterInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TimespanCreateWithoutBooster_timespan_boosterInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const TimespanUpdateWithoutBooster_timespan_boosterInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'TimespanUpdateWithoutBooster_timespan_boosterInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'start'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableDateTimeFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'end'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableDateTimeFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Subscription_timespan_subscription'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'SubscriptionUpdateOneWithoutTimespanInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const SubscriptionUpdateOneWithoutTimespanInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'SubscriptionUpdateOneWithoutTimespanInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'SubscriptionCreateWithoutTimespanInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'SubscriptionCreateOrConnectWithoutTimespanInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'SubscriptionUpsertWithoutTimespanInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SubscriptionWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'SubscriptionUpdateWithoutTimespanInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const SubscriptionUpsertWithoutTimespanInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'SubscriptionUpsertWithoutTimespanInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'SubscriptionUpdateWithoutTimespanInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'SubscriptionCreateWithoutTimespanInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const SubscriptionUpdateWithoutTimespanInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'SubscriptionUpdateWithoutTimespanInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Price'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'MoneyUpdateOneRequiredWithoutSubscription_money_subscriptionInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Type'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'SubscriptionPlanUpdateOneWithoutSubscription_subscriptionType_subscriptionInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const MoneyUpdateOneRequiredWithoutSubscription_money_subscriptionInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'MoneyUpdateOneRequiredWithoutSubscription_money_subscriptionInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'MoneyCreateWithoutSubscription_money_subscriptionInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'MoneyCreateOrConnectWithoutSubscription_money_subscriptionInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'MoneyUpsertWithoutSubscription_money_subscriptionInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'MoneyWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'MoneyUpdateWithoutSubscription_money_subscriptionInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const MoneyUpsertWithoutSubscription_money_subscriptionInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'MoneyUpsertWithoutSubscription_money_subscriptionInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'MoneyUpdateWithoutSubscription_money_subscriptionInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'MoneyCreateWithoutSubscription_money_subscriptionInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const MoneyUpdateWithoutSubscription_money_subscriptionInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'MoneyUpdateWithoutSubscription_money_subscriptionInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'value'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableFloatFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Currency'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableEnumCurrencyFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryUpdateOneWithoutMoney_history_moneyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_value_item'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpdateOneWithoutValueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'SubscriptionPlan_money_subscriptionPlans'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'SubscriptionPlanUpdateOneWithoutStandardPriceInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const SubscriptionPlanUpdateOneWithoutStandardPriceInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'SubscriptionPlanUpdateOneWithoutStandardPriceInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'SubscriptionPlanCreateWithoutStandardPriceInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'SubscriptionPlanCreateOrConnectWithoutStandardPriceInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'SubscriptionPlanUpsertWithoutStandardPriceInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SubscriptionPlanWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'SubscriptionPlanUpdateWithoutStandardPriceInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const SubscriptionPlanUpsertWithoutStandardPriceInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'SubscriptionPlanUpsertWithoutStandardPriceInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'SubscriptionPlanUpdateWithoutStandardPriceInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'SubscriptionPlanCreateWithoutStandardPriceInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const SubscriptionPlanUpdateWithoutStandardPriceInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'SubscriptionPlanUpdateWithoutStandardPriceInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'StandardDuration'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'DurationUpdateOneRequiredWithoutSubscriptionPlan_duration_subscriptionPlanInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name:
              _i1.NameNode(value: 'Subscription_subscriptionType_subscription'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'SubscriptionUpdateManyWithoutTypeInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const DurationUpdateOneRequiredWithoutSubscriptionPlan_duration_subscriptionPlanInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'DurationUpdateOneRequiredWithoutSubscriptionPlan_duration_subscriptionPlanInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'DurationCreateWithoutSubscriptionPlan_duration_subscriptionPlanInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'DurationCreateOrConnectWithoutSubscriptionPlan_duration_subscriptionPlanInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'DurationUpsertWithoutSubscriptionPlan_duration_subscriptionPlanInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DurationWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'DurationUpdateWithoutSubscriptionPlan_duration_subscriptionPlanInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const DurationUpsertWithoutSubscriptionPlan_duration_subscriptionPlanInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'DurationUpsertWithoutSubscriptionPlan_duration_subscriptionPlanInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'DurationUpdateWithoutSubscriptionPlan_duration_subscriptionPlanInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'DurationCreateWithoutSubscriptionPlan_duration_subscriptionPlanInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const DurationUpdateWithoutSubscriptionPlan_duration_subscriptionPlanInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'DurationUpdateWithoutSubscriptionPlan_duration_subscriptionPlanInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'seconds'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'NullableIntFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'minutes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'NullableIntFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'hours'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'NullableIntFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'days'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'NullableIntFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'weeks'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'NullableIntFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'months'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'NullableIntFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'years'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'NullableIntFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const SubscriptionUpdateManyWithoutTypeInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'SubscriptionUpdateManyWithoutTypeInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name:
                      _i1.NameNode(value: 'SubscriptionCreateWithoutTypeInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'SubscriptionCreateOrConnectWithoutTypeInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'SubscriptionUpsertWithWhereUniqueWithoutTypeInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'createMany'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'SubscriptionCreateManyTypeInputEnvelope'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'set'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'SubscriptionWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'SubscriptionWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'SubscriptionWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'SubscriptionWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'SubscriptionUpdateWithWhereUniqueWithoutTypeInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'updateMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'SubscriptionUpdateManyWithWhereWithoutTypeInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'deleteMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'SubscriptionScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const SubscriptionUpsertWithWhereUniqueWithoutTypeInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'SubscriptionUpsertWithWhereUniqueWithoutTypeInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SubscriptionWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SubscriptionUpdateWithoutTypeInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SubscriptionCreateWithoutTypeInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const SubscriptionUpdateWithoutTypeInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'SubscriptionUpdateWithoutTypeInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Price'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'MoneyUpdateOneRequiredWithoutSubscription_money_subscriptionInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Timespan'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TimespanUpdateOneWithoutSubscription_timespan_subscriptionInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const TimespanUpdateOneWithoutSubscription_timespan_subscriptionInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'TimespanUpdateOneWithoutSubscription_timespan_subscriptionInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TimespanCreateWithoutSubscription_timespan_subscriptionInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TimespanCreateOrConnectWithoutSubscription_timespan_subscriptionInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TimespanUpsertWithoutSubscription_timespan_subscriptionInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TimespanWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TimespanUpdateWithoutSubscription_timespan_subscriptionInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const TimespanUpsertWithoutSubscription_timespan_subscriptionInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'TimespanUpsertWithoutSubscription_timespan_subscriptionInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TimespanUpdateWithoutSubscription_timespan_subscriptionInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TimespanCreateWithoutSubscription_timespan_subscriptionInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const TimespanUpdateWithoutSubscription_timespan_subscriptionInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'TimespanUpdateWithoutSubscription_timespan_subscriptionInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'start'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableDateTimeFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'end'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableDateTimeFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Booster_timespan_booster'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'BoosterUpdateOneWithoutTimespanInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const BoosterUpdateOneWithoutTimespanInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'BoosterUpdateOneWithoutTimespanInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'BoosterCreateWithoutTimespanInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'BoosterCreateOrConnectWithoutTimespanInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'BoosterUpsertWithoutTimespanInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'BoosterWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'BoosterUpdateWithoutTimespanInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const BoosterUpsertWithoutTimespanInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'BoosterUpsertWithoutTimespanInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'BoosterUpdateWithoutTimespanInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'BoosterCreateWithoutTimespanInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const BoosterUpdateWithoutTimespanInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'BoosterUpdateWithoutTimespanInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_booster_item'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpdateOneWithoutBoosterInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemUpdateOneWithoutBoosterInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemUpdateOneWithoutBoosterInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemCreateWithoutBoosterInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'ItemCreateOrConnectWithoutBoosterInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpsertWithoutBoosterInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpdateWithoutBoosterInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemUpsertWithoutBoosterInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemUpsertWithoutBoosterInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpdateWithoutBoosterInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemCreateWithoutBoosterInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ItemUpdateWithoutBoosterInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemUpdateWithoutBoosterInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'active'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'NullableBoolFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'description'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Category'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'CategoryUpdateOneRequiredWithoutItem_category_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Value'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'MoneyUpdateOneWithoutItem_value_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Colors'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ColorUpdateManyWithoutItem_color_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemGenderUpdateManyWithoutItems_itemGender_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Pictures'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PictureUpdateManyWithoutItem_picture_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Condition'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ConditionUpdateOneWithoutItem_condition_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Owner'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonUpdateOneWithoutItem_owner_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_item_cloth'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothUpdateOneWithoutItemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_item_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageUpdateManyWithoutItemsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothUpdateOneWithoutItemInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothUpdateOneWithoutItemInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothCreateWithoutItemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothCreateOrConnectWithoutItemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothUpsertWithoutItemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothUpdateWithoutItemInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothUpsertWithoutItemInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothUpsertWithoutItemInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothUpdateWithoutItemInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothCreateWithoutItemInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ClothUpdateWithoutItemInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothUpdateWithoutItemInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'code'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Material'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'MaterialUpdateOneWithoutCloth_material_clothsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothSizeUpdateManyWithoutCloth_clothSize_clothInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothStyles'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothStyleUpdateManyWithoutItem_clothStyle_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryUpdateOneWithoutCloth_history_clothInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Wardrobe'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'WardrobeUpdateOneWithoutClothsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const HistoryUpdateOneWithoutCloth_history_clothInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'HistoryUpdateOneWithoutCloth_history_clothInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryCreateWithoutCloth_history_clothInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'HistoryCreateOrConnectWithoutCloth_history_clothInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryUpsertWithoutCloth_history_clothInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryUpdateWithoutCloth_history_clothInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const HistoryUpsertWithoutCloth_history_clothInput =
    _i1.InputObjectTypeDefinitionNode(
        name:
            _i1.NameNode(value: 'HistoryUpsertWithoutCloth_history_clothInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryUpdateWithoutCloth_history_clothInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryCreateWithoutCloth_history_clothInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const HistoryUpdateWithoutCloth_history_clothInput =
    _i1.InputObjectTypeDefinitionNode(
        name:
            _i1.NameNode(value: 'HistoryUpdateWithoutCloth_history_clothInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Created'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'EventUpdateOneWithoutHistory_created_historyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Updated'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'EventUpdateManyWithoutHistory_updated_historyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Deleted'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'EventUpdateOneWithoutHistory_deleted_historyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'User_history_user'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonUpdateOneWithoutHistoryInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Money_history_money'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'MoneyUpdateOneWithoutHistoryInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const WardrobeUpdateOneWithoutClothsInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'WardrobeUpdateOneWithoutClothsInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'WardrobeCreateWithoutClothsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'WardrobeCreateOrConnectWithoutClothsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'WardrobeUpsertWithoutClothsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'WardrobeWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'WardrobeUpdateWithoutClothsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const WardrobeUpsertWithoutClothsInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'WardrobeUpsertWithoutClothsInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'WardrobeUpdateWithoutClothsInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'WardrobeCreateWithoutClothsInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const WardrobeUpdateWithoutClothsInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'WardrobeUpdateWithoutClothsInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Address'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'AddressUpdateOneWithoutWardrobesInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const AddressUpdateOneWithoutWardrobesInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'AddressUpdateOneWithoutWardrobesInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressCreateWithoutWardrobesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'AddressCreateOrConnectWithoutWardrobesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressUpsertWithoutWardrobesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressUpdateWithoutWardrobesInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const AddressUpsertWithoutWardrobesInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'AddressUpsertWithoutWardrobesInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressUpdateWithoutWardrobesInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressCreateWithoutWardrobesInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const AddressUpdateWithoutWardrobesInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'AddressUpdateWithoutWardrobesInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'line1'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'line2'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'city'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'province'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'zip'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Country'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'CountryUpdateOneWithoutAddress_county_addressesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Person'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonUpdateOneWithoutAddressInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonUpdateOneWithoutAddressInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PersonUpdateOneWithoutAddressInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonCreateWithoutAddressInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateOrConnectWithoutAddressInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonUpsertWithoutAddressInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonUpdateWithoutAddressInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonUpsertWithoutAddressInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PersonUpsertWithoutAddressInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonUpdateWithoutAddressInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonCreateWithoutAddressInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const PersonUpdateWithoutAddressInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PersonUpdateWithoutAddressInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'email'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'birthday'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableDateTimeFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'firstName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lastName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Gender'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'GenderUpdateOneWithoutProfile_gender_profilesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemGenderUpdateManyWithoutPerson_itemGender_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryUpdateOneWithoutUser_history_userInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Telephone'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TelephoneUpdateOneWithoutPerson_telephone_personInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Picture'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureUpdateOneWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothSizeUpdateManyWithoutPerson_clothSize_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothStyles'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothStyleUpdateManyWithoutPerson_clothStyle_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Event_who_events'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventUpdateManyWithoutWhoInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_owner_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpdateManyWithoutOwnerInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Channel'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ChannelUpdateOneWithoutParticipantsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_wantedBy_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageUpdateManyWithoutWantedByInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_from_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'TradePackageUpdateManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Rating_person_ratings'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'RatingUpdateManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const TradePackageUpdateManyWithoutFromInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'TradePackageUpdateManyWithoutFromInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name:
                      _i1.NameNode(value: 'TradePackageCreateWithoutFromInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'TradePackageCreateOrConnectWithoutFromInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'TradePackageUpsertWithWhereUniqueWithoutFromInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'createMany'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageCreateManyFromInputEnvelope'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'set'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'TradePackageWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'TradePackageWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'TradePackageWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'TradePackageWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'TradePackageUpdateWithWhereUniqueWithoutFromInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'updateMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'TradePackageUpdateManyWithWhereWithoutFromInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'deleteMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'TradePackageScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const TradePackageUpsertWithWhereUniqueWithoutFromInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'TradePackageUpsertWithWhereUniqueWithoutFromInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TradePackageWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TradePackageUpdateWithoutFromInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TradePackageCreateWithoutFromInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const TradePackageUpdateWithoutFromInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'TradePackageUpdateWithoutFromInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'WantedBy'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'PersonUpdateManyWithoutTradePackage_wantedBy_tradePackagesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemUpdateManyWithoutTradePackage_item_tradePackagesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Offer_tradePackage_offers'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'OfferUpdateManyWithoutTradePackagesInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonUpdateManyWithoutTradePackage_wantedBy_tradePackagesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'PersonUpdateManyWithoutTradePackage_wantedBy_tradePackagesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'PersonCreateWithoutTradePackage_wantedBy_tradePackagesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'PersonCreateOrConnectWithoutTradePackage_wantedBy_tradePackagesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'PersonUpsertWithWhereUniqueWithoutTradePackage_wantedBy_tradePackagesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'set'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'PersonUpdateWithWhereUniqueWithoutTradePackage_wantedBy_tradePackagesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'updateMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'PersonUpdateManyWithWhereWithoutTradePackage_wantedBy_tradePackagesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'deleteMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PersonScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonUpsertWithWhereUniqueWithoutTradePackage_wantedBy_tradePackagesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'PersonUpsertWithWhereUniqueWithoutTradePackage_wantedBy_tradePackagesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'PersonUpdateWithoutTradePackage_wantedBy_tradePackagesInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'PersonCreateWithoutTradePackage_wantedBy_tradePackagesInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const PersonUpdateWithoutTradePackage_wantedBy_tradePackagesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'PersonUpdateWithoutTradePackage_wantedBy_tradePackagesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'email'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'birthday'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableDateTimeFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'firstName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lastName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Gender'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'GenderUpdateOneWithoutProfile_gender_profilesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemGenderUpdateManyWithoutPerson_itemGender_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryUpdateOneWithoutUser_history_userInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Telephone'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TelephoneUpdateOneWithoutPerson_telephone_personInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Address'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressUpdateManyWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Picture'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureUpdateOneWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothSizeUpdateManyWithoutPerson_clothSize_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothStyles'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothStyleUpdateManyWithoutPerson_clothStyle_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Event_who_events'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventUpdateManyWithoutWhoInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_owner_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpdateManyWithoutOwnerInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Channel'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ChannelUpdateOneWithoutParticipantsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_from_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'TradePackageUpdateManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Rating_person_ratings'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'RatingUpdateManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const RatingUpdateManyWithoutFromInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'RatingUpdateManyWithoutFromInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'RatingCreateWithoutFromInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'RatingCreateOrConnectWithoutFromInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'RatingUpsertWithWhereUniqueWithoutFromInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'createMany'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'RatingCreateManyFromInputEnvelope'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'set'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'RatingWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'RatingWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'RatingWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'RatingWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'RatingUpdateWithWhereUniqueWithoutFromInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'updateMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'RatingUpdateManyWithWhereWithoutFromInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'deleteMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'RatingScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const RatingUpsertWithWhereUniqueWithoutFromInput =
    _i1.InputObjectTypeDefinitionNode(
        name:
            _i1.NameNode(value: 'RatingUpsertWithWhereUniqueWithoutFromInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'RatingWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'RatingUpdateWithoutFromInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'RatingCreateWithoutFromInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const RatingUpdateWithoutFromInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'RatingUpdateWithoutFromInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'amount'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'NullableIntFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Contract'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ContractUpdateOneWithoutRatingInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ContractUpdateOneWithoutRatingInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ContractUpdateOneWithoutRatingInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ContractCreateWithoutRatingInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ContractCreateOrConnectWithoutRatingInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ContractUpsertWithoutRatingInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ContractWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ContractUpdateWithoutRatingInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ContractUpsertWithoutRatingInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ContractUpsertWithoutRatingInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ContractUpdateWithoutRatingInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ContractCreateWithoutRatingInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ContractUpdateWithoutRatingInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ContractUpdateWithoutRatingInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Offer'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'OfferUpdateOneWithoutContractInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const OfferUpdateOneWithoutContractInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'OfferUpdateOneWithoutContractInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'OfferCreateWithoutContractInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'OfferCreateOrConnectWithoutContractInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'OfferUpsertWithoutContractInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'OfferWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'OfferUpdateWithoutContractInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const OfferUpsertWithoutContractInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'OfferUpsertWithoutContractInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'OfferUpdateWithoutContractInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'OfferCreateWithoutContractInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const OfferUpdateWithoutContractInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'OfferUpdateWithoutContractInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TradePackageUpdateManyWithoutOffer_tradePackage_offersInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const TradePackageUpdateManyWithoutOffer_tradePackage_offersInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'TradePackageUpdateManyWithoutOffer_tradePackage_offersInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'TradePackageCreateWithoutOffer_tradePackage_offersInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'TradePackageCreateOrConnectWithoutOffer_tradePackage_offersInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'TradePackageUpsertWithWhereUniqueWithoutOffer_tradePackage_offersInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'set'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'TradePackageWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'TradePackageWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'TradePackageWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'TradePackageWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'TradePackageUpdateWithWhereUniqueWithoutOffer_tradePackage_offersInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'updateMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'TradePackageUpdateManyWithWhereWithoutOffer_tradePackage_offersInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'deleteMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'TradePackageScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const TradePackageUpsertWithWhereUniqueWithoutOffer_tradePackage_offersInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'TradePackageUpsertWithWhereUniqueWithoutOffer_tradePackage_offersInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TradePackageWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TradePackageUpdateWithoutOffer_tradePackage_offersInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TradePackageCreateWithoutOffer_tradePackage_offersInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const TradePackageUpdateWithoutOffer_tradePackage_offersInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'TradePackageUpdateWithoutOffer_tradePackage_offersInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'WantedBy'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'PersonUpdateManyWithoutTradePackage_wantedBy_tradePackagesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'From'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'PersonUpdateOneWithoutTradePackage_from_tradePackagesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemUpdateManyWithoutTradePackage_item_tradePackagesInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemUpdateManyWithoutTradePackage_item_tradePackagesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ItemUpdateManyWithoutTradePackage_item_tradePackagesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ItemCreateWithoutTradePackage_item_tradePackagesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ItemCreateOrConnectWithoutTradePackage_item_tradePackagesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ItemUpsertWithWhereUniqueWithoutTradePackage_item_tradePackagesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'set'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ItemUpdateWithWhereUniqueWithoutTradePackage_item_tradePackagesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'updateMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ItemUpdateManyWithWhereWithoutTradePackage_item_tradePackagesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'deleteMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemUpsertWithWhereUniqueWithoutTradePackage_item_tradePackagesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'ItemUpsertWithWhereUniqueWithoutTradePackage_item_tradePackagesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemUpdateWithoutTradePackage_item_tradePackagesInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemCreateWithoutTradePackage_item_tradePackagesInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ItemUpdateWithoutTradePackage_item_tradePackagesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ItemUpdateWithoutTradePackage_item_tradePackagesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'active'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'NullableBoolFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'description'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Category'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'CategoryUpdateOneRequiredWithoutItem_category_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Value'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'MoneyUpdateOneWithoutItem_value_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Colors'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ColorUpdateManyWithoutItem_color_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemGenderUpdateManyWithoutItems_itemGender_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Pictures'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PictureUpdateManyWithoutItem_picture_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Condition'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ConditionUpdateOneWithoutItem_condition_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Owner'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonUpdateOneWithoutItem_owner_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Booster'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'BoosterUpdateManyWithoutItem_booster_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_item_cloth'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothUpdateOneWithoutItemInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemUpdateWithWhereUniqueWithoutTradePackage_item_tradePackagesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'ItemUpdateWithWhereUniqueWithoutTradePackage_item_tradePackagesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemUpdateWithoutTradePackage_item_tradePackagesInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ItemUpdateManyWithWhereWithoutTradePackage_item_tradePackagesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'ItemUpdateManyWithWhereWithoutTradePackage_item_tradePackagesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemScalarWhereInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpdateManyMutationInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ItemScalarWhereInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemScalarWhereInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'AND'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'OR'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'NOT'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'active'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'BoolNullableFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'description'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringNullableFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemUpdateManyMutationInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemUpdateManyMutationInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'active'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'NullableBoolFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'description'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const TradePackageUpdateWithWhereUniqueWithoutOffer_tradePackage_offersInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'TradePackageUpdateWithWhereUniqueWithoutOffer_tradePackage_offersInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TradePackageWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TradePackageUpdateWithoutOffer_tradePackage_offersInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const TradePackageUpdateManyWithWhereWithoutOffer_tradePackage_offersInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'TradePackageUpdateManyWithWhereWithoutOffer_tradePackage_offersInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TradePackageScalarWhereInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TradePackageUpdateManyMutationInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const TradePackageScalarWhereInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'TradePackageScalarWhereInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'AND'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'TradePackageScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'OR'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'TradePackageScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'NOT'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'TradePackageScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFilter'), isNonNull: false),
          defaultValue: null)
    ]);
const TradePackageUpdateManyMutationInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'TradePackageUpdateManyMutationInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const RatingUpdateWithWhereUniqueWithoutFromInput =
    _i1.InputObjectTypeDefinitionNode(
        name:
            _i1.NameNode(value: 'RatingUpdateWithWhereUniqueWithoutFromInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'RatingWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'RatingUpdateWithoutFromInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const RatingUpdateManyWithWhereWithoutFromInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'RatingUpdateManyWithWhereWithoutFromInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'RatingScalarWhereInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'RatingUpdateManyMutationInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const RatingScalarWhereInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'RatingScalarWhereInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'AND'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'RatingScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'OR'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'RatingScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'NOT'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'RatingScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'amount'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'IntNullableFilter'), isNonNull: false),
          defaultValue: null)
    ]);
const RatingUpdateManyMutationInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'RatingUpdateManyMutationInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'amount'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'NullableIntFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonUpdateWithWhereUniqueWithoutTradePackage_wantedBy_tradePackagesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'PersonUpdateWithWhereUniqueWithoutTradePackage_wantedBy_tradePackagesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'PersonUpdateWithoutTradePackage_wantedBy_tradePackagesInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const PersonUpdateManyWithWhereWithoutTradePackage_wantedBy_tradePackagesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'PersonUpdateManyWithWhereWithoutTradePackage_wantedBy_tradePackagesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonScalarWhereInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonUpdateManyMutationInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const PersonScalarWhereInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PersonScalarWhereInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'AND'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PersonScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'OR'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PersonScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'NOT'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PersonScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'email'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringNullableFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'birthday'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTimeNullableFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'firstName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringNullableFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lastName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringNullableFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'pictureId'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringNullableFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonUpdateManyMutationInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PersonUpdateManyMutationInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'email'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'birthday'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableDateTimeFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'firstName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lastName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const OfferUpdateManyWithoutTradePackagesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'OfferUpdateManyWithoutTradePackagesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'OfferCreateWithoutTradePackagesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'OfferCreateOrConnectWithoutTradePackagesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'OfferUpsertWithWhereUniqueWithoutTradePackagesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'set'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'OfferWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'OfferWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'OfferWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'OfferWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'OfferUpdateWithWhereUniqueWithoutTradePackagesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'updateMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'OfferUpdateManyWithWhereWithoutTradePackagesInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'deleteMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'OfferScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const OfferUpsertWithWhereUniqueWithoutTradePackagesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'OfferUpsertWithWhereUniqueWithoutTradePackagesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'OfferWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'OfferUpdateWithoutTradePackagesInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'OfferCreateWithoutTradePackagesInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const OfferUpdateWithoutTradePackagesInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'OfferUpdateWithoutTradePackagesInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Contract'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ContractUpdateOneWithoutOfferInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ContractUpdateOneWithoutOfferInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ContractUpdateOneWithoutOfferInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ContractCreateWithoutOfferInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ContractCreateOrConnectWithoutOfferInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ContractUpsertWithoutOfferInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ContractWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ContractUpdateWithoutOfferInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ContractUpsertWithoutOfferInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ContractUpsertWithoutOfferInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ContractUpdateWithoutOfferInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ContractCreateWithoutOfferInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ContractUpdateWithoutOfferInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ContractUpdateWithoutOfferInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Rating'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'RatingUpdateManyWithoutContractInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const RatingUpdateManyWithoutContractInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'RatingUpdateManyWithoutContractInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'RatingCreateWithoutContractInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'RatingCreateOrConnectWithoutContractInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'RatingUpsertWithWhereUniqueWithoutContractInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'createMany'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'RatingCreateManyContractInputEnvelope'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'set'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'RatingWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'RatingWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'RatingWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'RatingWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'RatingUpdateWithWhereUniqueWithoutContractInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'updateMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'RatingUpdateManyWithWhereWithoutContractInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'deleteMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'RatingScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const RatingUpsertWithWhereUniqueWithoutContractInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'RatingUpsertWithWhereUniqueWithoutContractInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'RatingWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'RatingUpdateWithoutContractInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'RatingCreateWithoutContractInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const RatingUpdateWithoutContractInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'RatingUpdateWithoutContractInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'amount'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'NullableIntFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'From'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonUpdateOneWithoutRating_person_ratingsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonUpdateOneWithoutRating_person_ratingsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'PersonUpdateOneWithoutRating_person_ratingsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateWithoutRating_person_ratingsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'PersonCreateOrConnectWithoutRating_person_ratingsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonUpsertWithoutRating_person_ratingsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonUpdateWithoutRating_person_ratingsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonUpsertWithoutRating_person_ratingsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'PersonUpsertWithoutRating_person_ratingsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonUpdateWithoutRating_person_ratingsInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateWithoutRating_person_ratingsInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const PersonUpdateWithoutRating_person_ratingsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'PersonUpdateWithoutRating_person_ratingsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'email'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'birthday'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableDateTimeFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'firstName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lastName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Gender'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'GenderUpdateOneWithoutProfile_gender_profilesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemGenderUpdateManyWithoutPerson_itemGender_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryUpdateOneWithoutUser_history_userInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Telephone'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TelephoneUpdateOneWithoutPerson_telephone_personInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Address'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressUpdateManyWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Picture'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureUpdateOneWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothSizeUpdateManyWithoutPerson_clothSize_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothStyles'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothStyleUpdateManyWithoutPerson_clothStyle_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Event_who_events'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventUpdateManyWithoutWhoInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_owner_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpdateManyWithoutOwnerInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Channel'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ChannelUpdateOneWithoutParticipantsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_wantedBy_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageUpdateManyWithoutWantedByInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_from_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'TradePackageUpdateManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const RatingUpdateWithWhereUniqueWithoutContractInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'RatingUpdateWithWhereUniqueWithoutContractInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'RatingWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'RatingUpdateWithoutContractInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const RatingUpdateManyWithWhereWithoutContractInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'RatingUpdateManyWithWhereWithoutContractInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'RatingScalarWhereInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'RatingUpdateManyMutationInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const OfferUpdateWithWhereUniqueWithoutTradePackagesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'OfferUpdateWithWhereUniqueWithoutTradePackagesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'OfferWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'OfferUpdateWithoutTradePackagesInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const OfferUpdateManyWithWhereWithoutTradePackagesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'OfferUpdateManyWithWhereWithoutTradePackagesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'OfferScalarWhereInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'OfferUpdateManyMutationInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const OfferScalarWhereInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'OfferScalarWhereInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'AND'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'OfferScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'OR'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'OfferScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'NOT'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'OfferScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFilter'), isNonNull: false),
          defaultValue: null)
    ]);
const OfferUpdateManyMutationInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'OfferUpdateManyMutationInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const TradePackageUpdateWithWhereUniqueWithoutFromInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'TradePackageUpdateWithWhereUniqueWithoutFromInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TradePackageWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TradePackageUpdateWithoutFromInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const TradePackageUpdateManyWithWhereWithoutFromInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'TradePackageUpdateManyWithWhereWithoutFromInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TradePackageScalarWhereInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TradePackageUpdateManyMutationInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const TradePackageUpdateManyWithoutItemsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'TradePackageUpdateManyWithoutItemsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'TradePackageCreateWithoutItemsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'TradePackageCreateOrConnectWithoutItemsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'TradePackageUpsertWithWhereUniqueWithoutItemsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'set'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'TradePackageWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'TradePackageWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'TradePackageWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'TradePackageWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'TradePackageUpdateWithWhereUniqueWithoutItemsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'updateMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'TradePackageUpdateManyWithWhereWithoutItemsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'deleteMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'TradePackageScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const TradePackageUpsertWithWhereUniqueWithoutItemsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'TradePackageUpsertWithWhereUniqueWithoutItemsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TradePackageWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TradePackageUpdateWithoutItemsInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TradePackageCreateWithoutItemsInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const TradePackageUpdateWithoutItemsInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'TradePackageUpdateWithoutItemsInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'WantedBy'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'PersonUpdateManyWithoutTradePackage_wantedBy_tradePackagesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'From'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'PersonUpdateOneWithoutTradePackage_from_tradePackagesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Offer_tradePackage_offers'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'OfferUpdateManyWithoutTradePackagesInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const TradePackageUpdateWithWhereUniqueWithoutItemsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'TradePackageUpdateWithWhereUniqueWithoutItemsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TradePackageWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TradePackageUpdateWithoutItemsInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const TradePackageUpdateManyWithWhereWithoutItemsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'TradePackageUpdateManyWithWhereWithoutItemsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TradePackageScalarWhereInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TradePackageUpdateManyMutationInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const SubscriptionUpdateWithWhereUniqueWithoutTypeInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'SubscriptionUpdateWithWhereUniqueWithoutTypeInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SubscriptionWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SubscriptionUpdateWithoutTypeInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const SubscriptionUpdateManyWithWhereWithoutTypeInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'SubscriptionUpdateManyWithWhereWithoutTypeInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SubscriptionScalarWhereInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SubscriptionUpdateManyMutationInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const SubscriptionScalarWhereInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'SubscriptionScalarWhereInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'AND'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'SubscriptionScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'OR'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'SubscriptionScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'NOT'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'SubscriptionScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFilter'), isNonNull: false),
          defaultValue: null)
    ]);
const SubscriptionUpdateManyMutationInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'SubscriptionUpdateManyMutationInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const SubscriptionPlanUpdateOneWithoutSubscription_subscriptionType_subscriptionInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'SubscriptionPlanUpdateOneWithoutSubscription_subscriptionType_subscriptionInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'SubscriptionPlanCreateWithoutSubscription_subscriptionType_subscriptionInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'SubscriptionPlanCreateOrConnectWithoutSubscription_subscriptionType_subscriptionInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'SubscriptionPlanUpsertWithoutSubscription_subscriptionType_subscriptionInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SubscriptionPlanWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'SubscriptionPlanUpdateWithoutSubscription_subscriptionType_subscriptionInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const SubscriptionPlanUpsertWithoutSubscription_subscriptionType_subscriptionInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'SubscriptionPlanUpsertWithoutSubscription_subscriptionType_subscriptionInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'SubscriptionPlanUpdateWithoutSubscription_subscriptionType_subscriptionInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'SubscriptionPlanCreateWithoutSubscription_subscriptionType_subscriptionInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const SubscriptionPlanUpdateWithoutSubscription_subscriptionType_subscriptionInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'SubscriptionPlanUpdateWithoutSubscription_subscriptionType_subscriptionInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'StandardDuration'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'DurationUpdateOneRequiredWithoutSubscriptionPlan_duration_subscriptionPlanInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'StandardPrice'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'MoneyUpdateOneWithoutSubscriptionPlan_money_subscriptionPlansInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const MoneyUpdateOneWithoutSubscriptionPlan_money_subscriptionPlansInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'MoneyUpdateOneWithoutSubscriptionPlan_money_subscriptionPlansInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'MoneyCreateWithoutSubscriptionPlan_money_subscriptionPlansInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'MoneyCreateOrConnectWithoutSubscriptionPlan_money_subscriptionPlansInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'MoneyUpsertWithoutSubscriptionPlan_money_subscriptionPlansInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'MoneyWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'MoneyUpdateWithoutSubscriptionPlan_money_subscriptionPlansInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const MoneyUpsertWithoutSubscriptionPlan_money_subscriptionPlansInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'MoneyUpsertWithoutSubscriptionPlan_money_subscriptionPlansInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'MoneyUpdateWithoutSubscriptionPlan_money_subscriptionPlansInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'MoneyCreateWithoutSubscriptionPlan_money_subscriptionPlansInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const MoneyUpdateWithoutSubscriptionPlan_money_subscriptionPlansInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'MoneyUpdateWithoutSubscriptionPlan_money_subscriptionPlansInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'value'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableFloatFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Currency'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableEnumCurrencyFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryUpdateOneWithoutMoney_history_moneyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_value_item'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpdateOneWithoutValueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Subscription_money_subscription'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'SubscriptionUpdateOneWithoutPriceInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const SubscriptionUpdateOneWithoutPriceInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'SubscriptionUpdateOneWithoutPriceInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SubscriptionCreateWithoutPriceInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'SubscriptionCreateOrConnectWithoutPriceInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SubscriptionUpsertWithoutPriceInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SubscriptionWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SubscriptionUpdateWithoutPriceInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const SubscriptionUpsertWithoutPriceInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'SubscriptionUpsertWithoutPriceInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SubscriptionUpdateWithoutPriceInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SubscriptionCreateWithoutPriceInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const SubscriptionUpdateWithoutPriceInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'SubscriptionUpdateWithoutPriceInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Timespan'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TimespanUpdateOneWithoutSubscription_timespan_subscriptionInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Type'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'SubscriptionPlanUpdateOneWithoutSubscription_subscriptionType_subscriptionInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const BoosterUpdateWithWhereUniqueWithoutItem_booster_itemInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'BoosterUpdateWithWhereUniqueWithoutItem_booster_itemInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'BoosterWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'BoosterUpdateWithoutItem_booster_itemInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const BoosterUpdateManyWithWhereWithoutItem_booster_itemInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'BoosterUpdateManyWithWhereWithoutItem_booster_itemInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'BoosterScalarWhereInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'BoosterUpdateManyMutationInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const BoosterScalarWhereInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'BoosterScalarWhereInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'AND'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'BoosterScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'OR'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'BoosterScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'NOT'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'BoosterScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TimespanId'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringNullableFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const BoosterUpdateManyMutationInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'BoosterUpdateManyMutationInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemUpdateWithWhereUniqueWithoutOwnerInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'ItemUpdateWithWhereUniqueWithoutOwnerInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpdateWithoutOwnerInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ItemUpdateManyWithWhereWithoutOwnerInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'ItemUpdateManyWithWhereWithoutOwnerInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemScalarWhereInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpdateManyMutationInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const TradePackageUpdateWithWhereUniqueWithoutWantedByInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'TradePackageUpdateWithWhereUniqueWithoutWantedByInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TradePackageWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'TradePackageUpdateWithoutWantedByInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const TradePackageUpdateManyWithWhereWithoutWantedByInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'TradePackageUpdateManyWithWhereWithoutWantedByInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TradePackageScalarWhereInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'TradePackageUpdateManyMutationInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ClothUpdateOneWithoutHistoryInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothUpdateOneWithoutHistoryInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothCreateWithoutHistoryInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothCreateOrConnectWithoutHistoryInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothUpsertWithoutHistoryInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothUpdateWithoutHistoryInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothUpsertWithoutHistoryInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothUpsertWithoutHistoryInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothUpdateWithoutHistoryInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothCreateWithoutHistoryInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ClothUpdateWithoutHistoryInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothUpdateWithoutHistoryInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'code'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Material'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'MaterialUpdateOneWithoutCloth_material_clothsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ItemUpdateOneRequiredWithoutCloth_item_clothInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothSizeUpdateManyWithoutCloth_clothSize_clothInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothStyles'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothStyleUpdateManyWithoutItem_clothStyle_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Wardrobe'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'WardrobeUpdateOneWithoutClothsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const EventUpdateWithWhereUniqueWithoutWhoInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'EventUpdateWithWhereUniqueWithoutWhoInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventUpdateWithoutWhoInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const EventUpdateManyWithWhereWithoutWhoInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'EventUpdateManyWithWhereWithoutWhoInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventScalarWhereInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventUpdateManyMutationInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const EventScalarWhereInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'EventScalarWhereInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'AND'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'EventScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'OR'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'EventScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'NOT'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'EventScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'when'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTimeFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'what'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'from'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'JsonNullableFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'to'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'JsonNullableFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const EventUpdateManyMutationInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'EventUpdateManyMutationInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'when'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTimeFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'what'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'from'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'JSON'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'to'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'JSON'), isNonNull: false),
          defaultValue: null)
    ]);
const PersonUpdateWithWhereUniqueWithoutClothSizesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'PersonUpdateWithWhereUniqueWithoutClothSizesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonUpdateWithoutClothSizesInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const PersonUpdateManyWithWhereWithoutClothSizesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'PersonUpdateManyWithWhereWithoutClothSizesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonScalarWhereInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonUpdateManyMutationInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ClothSizeUpdateWithWhereUniqueWithoutClothSizeInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ClothSizeUpdateWithWhereUniqueWithoutClothSizeInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothSizeWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothSizeUpdateWithoutClothSizeInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ClothSizeUpdateManyWithWhereWithoutClothSizeInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ClothSizeUpdateManyWithWhereWithoutClothSizeInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothSizeScalarWhereInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothSizeUpdateManyMutationInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ClothSizeScalarWhereInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothSizeScalarWhereInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'AND'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothSizeScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'OR'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothSizeScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'NOT'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothSizeScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringNullableFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'IntNullableFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'SizeModel'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EnumSizeModelNullableFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothSizeUpdateManyMutationInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothSizeUpdateManyMutationInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'NullableIntFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'SizeModel'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableEnumSizeModelFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothSizeUpdateManyWithoutComparableToInput =
    _i1.InputObjectTypeDefinitionNode(
        name:
            _i1.NameNode(value: 'ClothSizeUpdateManyWithoutComparableToInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'ClothSizeCreateWithoutComparableToInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ClothSizeCreateOrConnectWithoutComparableToInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ClothSizeUpsertWithWhereUniqueWithoutComparableToInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'set'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothSizeWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothSizeWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothSizeWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothSizeWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ClothSizeUpdateWithWhereUniqueWithoutComparableToInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'updateMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'ClothSizeUpdateManyWithWhereWithoutComparableToInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'deleteMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothSizeScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothSizeUpsertWithWhereUniqueWithoutComparableToInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ClothSizeUpsertWithWhereUniqueWithoutComparableToInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothSizeWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothSizeUpdateWithoutComparableToInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothSizeCreateWithoutComparableToInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ClothSizeUpdateWithoutComparableToInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'ClothSizeUpdateWithoutComparableToInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'NullableIntFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'SizeModel'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableEnumSizeModelFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Categories'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryUpdateManyWithoutClothSizesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_clothSize_cloth'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'ClothUpdateManyWithoutClothSizesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Person_clothSize_persons'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'PersonUpdateManyWithoutClothSizesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSize'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothSizeUpdateManyWithoutComparableToInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothSizeUpdateWithWhereUniqueWithoutComparableToInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ClothSizeUpdateWithWhereUniqueWithoutComparableToInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothSizeWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothSizeUpdateWithoutComparableToInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ClothSizeUpdateManyWithWhereWithoutComparableToInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ClothSizeUpdateManyWithWhereWithoutComparableToInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothSizeScalarWhereInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothSizeUpdateManyMutationInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ClothSizeUpdateWithWhereUniqueWithoutPerson_clothSize_personsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'ClothSizeUpdateWithWhereUniqueWithoutPerson_clothSize_personsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothSizeWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothSizeUpdateWithoutPerson_clothSize_personsInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ClothSizeUpdateManyWithWhereWithoutPerson_clothSize_personsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'ClothSizeUpdateManyWithWhereWithoutPerson_clothSize_personsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothSizeScalarWhereInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothSizeUpdateManyMutationInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ItemUpdateOneWithoutPicturesInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemUpdateOneWithoutPicturesInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemCreateWithoutPicturesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ItemCreateOrConnectWithoutPicturesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpsertWithoutPicturesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpdateWithoutPicturesInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemUpsertWithoutPicturesInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemUpsertWithoutPicturesInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpdateWithoutPicturesInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemCreateWithoutPicturesInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ItemUpdateWithoutPicturesInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemUpdateWithoutPicturesInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'active'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'NullableBoolFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'description'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Category'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'CategoryUpdateOneRequiredWithoutItem_category_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Value'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'MoneyUpdateOneWithoutItem_value_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Colors'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ColorUpdateManyWithoutItem_color_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemGenderUpdateManyWithoutItems_itemGender_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Condition'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ConditionUpdateOneWithoutItem_condition_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Owner'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonUpdateOneWithoutItem_owner_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Booster'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'BoosterUpdateManyWithoutItem_booster_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_item_cloth'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothUpdateOneWithoutItemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_item_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageUpdateManyWithoutItemsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonUpdateWithWhereUniqueWithoutItemGendersInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'PersonUpdateWithWhereUniqueWithoutItemGendersInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonUpdateWithoutItemGendersInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const PersonUpdateManyWithWhereWithoutItemGendersInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'PersonUpdateManyWithWhereWithoutItemGendersInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonScalarWhereInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonUpdateManyMutationInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ItemGenderUpdateWithWhereUniqueWithoutItems_itemGender_itemsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'ItemGenderUpdateWithWhereUniqueWithoutItems_itemGender_itemsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemGenderWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ItemGenderUpdateWithoutItems_itemGender_itemsInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ItemGenderUpdateManyWithWhereWithoutItems_itemGender_itemsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'ItemGenderUpdateManyWithWhereWithoutItems_itemGender_itemsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemGenderScalarWhereInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemGenderUpdateManyMutationInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ItemGenderScalarWhereInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemGenderScalarWhereInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'AND'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemGenderScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'OR'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemGenderScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'NOT'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemGenderScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringNullableFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'IntNullableFilter'), isNonNull: false),
          defaultValue: null)
    ]);
const ItemGenderUpdateManyMutationInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemGenderUpdateManyMutationInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'NullableIntFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemUpdateWithWhereUniqueWithoutCategoryInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ItemUpdateWithWhereUniqueWithoutCategoryInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpdateWithoutCategoryInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ItemUpdateManyWithWhereWithoutCategoryInput =
    _i1.InputObjectTypeDefinitionNode(
        name:
            _i1.NameNode(value: 'ItemUpdateManyWithWhereWithoutCategoryInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemScalarWhereInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpdateManyMutationInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const CategoryUpdateOneWithoutSubCategoriesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'CategoryUpdateOneWithoutSubCategoriesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryCreateWithoutSubCategoriesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryCreateOrConnectWithoutSubCategoriesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryUpsertWithoutSubCategoriesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'CategoryWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryUpdateWithoutSubCategoriesInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const CategoryUpsertWithoutSubCategoriesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'CategoryUpsertWithoutSubCategoriesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryUpdateWithoutSubCategoriesInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryCreateWithoutSubCategoriesInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const CategoryUpdateWithoutSubCategoriesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'CategoryUpdateWithoutSubCategoriesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothSizeUpdateManyWithoutCategoriesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Brand_category_brands'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'BrandUpdateManyWithoutCategoriesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_category_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpdateManyWithoutCategoryInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ParentCategory'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryUpdateOneWithoutSubCategoriesInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const CategoryUpdateManyWithoutParentCategoryInput =
    _i1.InputObjectTypeDefinitionNode(
        name:
            _i1.NameNode(value: 'CategoryUpdateManyWithoutParentCategoryInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'CategoryCreateWithoutParentCategoryInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'CategoryCreateOrConnectWithoutParentCategoryInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'CategoryUpsertWithWhereUniqueWithoutParentCategoryInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'createMany'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryCreateManyParentCategoryInputEnvelope'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'set'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'CategoryWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'CategoryWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'CategoryWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'CategoryWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'CategoryUpdateWithWhereUniqueWithoutParentCategoryInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'updateMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'CategoryUpdateManyWithWhereWithoutParentCategoryInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'deleteMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'CategoryScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const CategoryUpsertWithWhereUniqueWithoutParentCategoryInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'CategoryUpsertWithWhereUniqueWithoutParentCategoryInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'CategoryWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryUpdateWithoutParentCategoryInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryCreateWithoutParentCategoryInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const CategoryUpdateWithoutParentCategoryInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'CategoryUpdateWithoutParentCategoryInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothSizeUpdateManyWithoutCategoriesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Brand_category_brands'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'BrandUpdateManyWithoutCategoriesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_category_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpdateManyWithoutCategoryInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'SubCategories'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryUpdateManyWithoutParentCategoryInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const CategoryUpdateWithWhereUniqueWithoutParentCategoryInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'CategoryUpdateWithWhereUniqueWithoutParentCategoryInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'CategoryWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryUpdateWithoutParentCategoryInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const CategoryUpdateManyWithWhereWithoutParentCategoryInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'CategoryUpdateManyWithWhereWithoutParentCategoryInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'CategoryScalarWhereInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'CategoryUpdateManyMutationInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const CategoryScalarWhereInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'CategoryScalarWhereInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'AND'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'CategoryScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'OR'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'CategoryScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'NOT'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'CategoryScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringNullableFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const CategoryUpdateManyMutationInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'CategoryUpdateManyMutationInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const CategoryUpdateWithWhereUniqueWithoutClothSizesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'CategoryUpdateWithWhereUniqueWithoutClothSizesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'CategoryWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'CategoryUpdateWithoutClothSizesInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const CategoryUpdateManyWithWhereWithoutClothSizesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'CategoryUpdateManyWithWhereWithoutClothSizesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'CategoryScalarWhereInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'CategoryUpdateManyMutationInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ClothSizeUpdateWithWhereUniqueWithoutCloth_clothSize_clothInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'ClothSizeUpdateWithWhereUniqueWithoutCloth_clothSize_clothInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothSizeWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothSizeUpdateWithoutCloth_clothSize_clothInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ClothSizeUpdateManyWithWhereWithoutCloth_clothSize_clothInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'ClothSizeUpdateManyWithWhereWithoutCloth_clothSize_clothInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothSizeScalarWhereInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothSizeUpdateManyMutationInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ClothUpdateWithWhereUniqueWithoutWardrobeInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ClothUpdateWithWhereUniqueWithoutWardrobeInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothUpdateWithoutWardrobeInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ClothUpdateManyWithWhereWithoutWardrobeInput =
    _i1.InputObjectTypeDefinitionNode(
        name:
            _i1.NameNode(value: 'ClothUpdateManyWithWhereWithoutWardrobeInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothScalarWhereInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothUpdateManyMutationInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ClothScalarWhereInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothScalarWhereInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'AND'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'OR'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'NOT'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'code'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringNullableFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothUpdateManyMutationInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothUpdateManyMutationInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'code'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const WardrobeUpdateWithWhereUniqueWithoutAddressInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'WardrobeUpdateWithWhereUniqueWithoutAddressInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'WardrobeWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'WardrobeUpdateWithoutAddressInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const WardrobeUpdateManyWithWhereWithoutAddressInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'WardrobeUpdateManyWithWhereWithoutAddressInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'WardrobeScalarWhereInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'WardrobeUpdateManyMutationInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const WardrobeScalarWhereInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'WardrobeScalarWhereInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'AND'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'WardrobeScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'OR'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'WardrobeScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'NOT'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'WardrobeScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringNullableFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const WardrobeUpdateManyMutationInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'WardrobeUpdateManyMutationInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const AddressUpdateWithWhereUniqueWithoutPersonInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'AddressUpdateWithWhereUniqueWithoutPersonInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressUpdateWithoutPersonInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const AddressUpdateManyWithWhereWithoutPersonInput =
    _i1.InputObjectTypeDefinitionNode(
        name:
            _i1.NameNode(value: 'AddressUpdateManyWithWhereWithoutPersonInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressScalarWhereInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressUpdateManyMutationInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const AddressScalarWhereInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'AddressScalarWhereInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'AND'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'AddressScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'OR'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'AddressScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'NOT'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'AddressScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFilter'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'line1'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringNullableFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'line2'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringNullableFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'city'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringNullableFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'province'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringNullableFilter'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'zip'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringNullableFilter'),
              isNonNull: false),
          defaultValue: null)
    ]);
const AddressUpdateManyMutationInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'AddressUpdateManyMutationInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'line1'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'line2'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'city'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'province'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'zip'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const EventUpdateWithWhereUniqueWithoutHistory_updated_historyInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'EventUpdateWithWhereUniqueWithoutHistory_updated_historyInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'EventUpdateWithoutHistory_updated_historyInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const EventUpdateManyWithWhereWithoutHistory_updated_historyInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'EventUpdateManyWithWhereWithoutHistory_updated_historyInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventScalarWhereInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventUpdateManyMutationInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ItemUpdateWithWhereUniqueWithoutItemGendersInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ItemUpdateWithWhereUniqueWithoutItemGendersInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpdateWithoutItemGendersInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ItemUpdateManyWithWhereWithoutItemGendersInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ItemUpdateManyWithWhereWithoutItemGendersInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemScalarWhereInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpdateManyMutationInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ItemGenderUpdateWithWhereUniqueWithoutPerson_itemGender_personsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'ItemGenderUpdateWithWhereUniqueWithoutPerson_itemGender_personsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemGenderWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemGenderUpdateWithoutPerson_itemGender_personsInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ItemGenderUpdateManyWithWhereWithoutPerson_itemGender_personsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'ItemGenderUpdateManyWithWhereWithoutPerson_itemGender_personsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemGenderScalarWhereInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemGenderUpdateManyMutationInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const PersonUpdateWithWhereUniqueWithoutClothStylesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'PersonUpdateWithWhereUniqueWithoutClothStylesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonUpdateWithoutClothStylesInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const PersonUpdateManyWithWhereWithoutClothStylesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'PersonUpdateManyWithWhereWithoutClothStylesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonScalarWhereInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonUpdateManyMutationInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ClothStyleUpdateWithWhereUniqueWithoutItem_clothStyle_itemsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'ClothStyleUpdateWithWhereUniqueWithoutItem_clothStyle_itemsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothStyleWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothStyleUpdateWithoutItem_clothStyle_itemsInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ClothStyleUpdateManyWithWhereWithoutItem_clothStyle_itemsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'ClothStyleUpdateManyWithWhereWithoutItem_clothStyle_itemsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothStyleScalarWhereInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothStyleUpdateManyMutationInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ClothUpdateWithWhereUniqueWithoutClothSizesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ClothUpdateWithWhereUniqueWithoutClothSizesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothUpdateWithoutClothSizesInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ClothUpdateManyWithWhereWithoutClothSizesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ClothUpdateManyWithWhereWithoutClothSizesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothScalarWhereInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothUpdateManyMutationInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ClothSizeUpdateWithWhereUniqueWithoutCategoriesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ClothSizeUpdateWithWhereUniqueWithoutCategoriesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothSizeWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'ClothSizeUpdateWithoutCategoriesInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ClothSizeUpdateManyWithWhereWithoutCategoriesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ClothSizeUpdateManyWithWhereWithoutCategoriesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothSizeScalarWhereInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothSizeUpdateManyMutationInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ClothUpdateWithWhereUniqueWithoutClothStylesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ClothUpdateWithWhereUniqueWithoutClothStylesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothUpdateWithoutClothStylesInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ClothUpdateManyWithWhereWithoutClothStylesInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ClothUpdateManyWithWhereWithoutClothStylesInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothScalarWhereInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothUpdateManyMutationInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ItemGenderCreateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemGenderCreateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Items_itemGender_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ItemCreateNestedManyWithoutItemGendersInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Person_itemGender_persons'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateNestedManyWithoutItemGendersInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemGenderUpdateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemGenderUpdateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'NullableIntFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Items_itemGender_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'ItemUpdateManyWithoutItemGendersInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Person_itemGender_persons'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonUpdateManyWithoutItemGendersInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const MaterialCreateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'MaterialCreateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_material_cloths'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothCreateNestedManyWithoutMaterialInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothCreateNestedManyWithoutMaterialInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'ClothCreateNestedManyWithoutMaterialInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothCreateWithoutMaterialInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'ClothCreateOrConnectWithoutMaterialInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'createMany'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothCreateManyMaterialInputEnvelope'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothCreateWithoutMaterialInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothCreateWithoutMaterialInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'code'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ItemCreateNestedOneWithoutCloth_item_clothInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothSizeCreateNestedManyWithoutCloth_clothSize_clothInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothStyles'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothStyleCreateNestedManyWithoutItem_clothStyle_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'HistoryCreateNestedOneWithoutCloth_history_clothInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Wardrobe'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'WardrobeCreateNestedOneWithoutClothsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothCreateOrConnectWithoutMaterialInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'ClothCreateOrConnectWithoutMaterialInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothCreateWithoutMaterialInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ClothCreateManyMaterialInputEnvelope = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothCreateManyMaterialInputEnvelope'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothCreateManyMaterialInput'),
                  isNonNull: true),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'skipDuplicates'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null)
    ]);
const ClothCreateManyMaterialInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothCreateManyMaterialInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'code'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null)
    ]);
const MaterialUpdateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'MaterialUpdateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_material_cloths'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothUpdateManyWithoutMaterialInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothUpdateManyWithoutMaterialInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothUpdateManyWithoutMaterialInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothCreateWithoutMaterialInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'ClothCreateOrConnectWithoutMaterialInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'ClothUpsertWithWhereUniqueWithoutMaterialInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'createMany'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothCreateManyMaterialInputEnvelope'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'set'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'ClothUpdateWithWhereUniqueWithoutMaterialInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'updateMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'ClothUpdateManyWithWhereWithoutMaterialInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'deleteMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothUpsertWithWhereUniqueWithoutMaterialInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ClothUpsertWithWhereUniqueWithoutMaterialInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothUpdateWithoutMaterialInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothCreateWithoutMaterialInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ClothUpdateWithoutMaterialInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothUpdateWithoutMaterialInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'code'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ItemUpdateOneRequiredWithoutCloth_item_clothInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothSizeUpdateManyWithoutCloth_clothSize_clothInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothStyles'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothStyleUpdateManyWithoutItem_clothStyle_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryUpdateOneWithoutCloth_history_clothInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Wardrobe'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'WardrobeUpdateOneWithoutClothsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothUpdateWithWhereUniqueWithoutMaterialInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ClothUpdateWithWhereUniqueWithoutMaterialInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothUpdateWithoutMaterialInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ClothUpdateManyWithWhereWithoutMaterialInput =
    _i1.InputObjectTypeDefinitionNode(
        name:
            _i1.NameNode(value: 'ClothUpdateManyWithWhereWithoutMaterialInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothScalarWhereInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothUpdateManyMutationInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const PictureCreateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PictureCreateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'LQ'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'FileCreateNestedOneWithoutFile_lqPictureFile_fileInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'MQ'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'FileCreateNestedOneWithoutFile_mqPictureFile_fileInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'HQ'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'FileCreateNestedOneWithoutFile_hqPictureFile_fileInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Person'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateNestedOneWithoutPictureInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_picture_item'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ItemCreateNestedOneWithoutPicturesInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PictureUpdateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PictureUpdateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'NullableIntFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'LQ'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'FileUpdateOneWithoutFile_lqPictureFile_fileInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'MQ'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'FileUpdateOneWithoutFile_mqPictureFile_fileInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'HQ'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'FileUpdateOneWithoutFile_hqPictureFile_fileInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Person'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonUpdateOneWithoutPictureInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_picture_item'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpdateOneWithoutPicturesInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const FileCreateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'FileCreateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'extension'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'File_lqPictureFile_file'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureCreateNestedOneWithoutLQInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'File_mqPictureFile_file'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureCreateNestedOneWithoutMQInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'File_hqPictureFile_file'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureCreateNestedOneWithoutHQInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const FileUpdateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'FileUpdateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'extension'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'File_lqPictureFile_file'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureUpdateOneWithoutLQInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'File_mqPictureFile_file'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureUpdateOneWithoutMQInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'File_hqPictureFile_file'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureUpdateOneWithoutHQInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const RatingCreateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'RatingCreateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'amount'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Contract'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ContractCreateNestedOneWithoutRatingInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'From'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'PersonCreateNestedOneWithoutRating_person_ratingsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const RatingUpdateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'RatingUpdateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'amount'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'NullableIntFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Contract'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ContractUpdateOneWithoutRatingInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'From'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonUpdateOneWithoutRating_person_ratingsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const SubscriptionCreateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'SubscriptionCreateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Price'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'MoneyCreateNestedOneWithoutSubscription_money_subscriptionInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Timespan'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TimespanCreateNestedOneWithoutSubscription_timespan_subscriptionInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Type'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'SubscriptionPlanCreateNestedOneWithoutSubscription_subscriptionType_subscriptionInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const SubscriptionUpdateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'SubscriptionUpdateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Price'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'MoneyUpdateOneRequiredWithoutSubscription_money_subscriptionInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Timespan'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TimespanUpdateOneWithoutSubscription_timespan_subscriptionInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Type'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'SubscriptionPlanUpdateOneWithoutSubscription_subscriptionType_subscriptionInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const SubscriptionPlanCreateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'SubscriptionPlanCreateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'StandardDuration'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'DurationCreateNestedOneWithoutSubscriptionPlan_duration_subscriptionPlanInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'StandardPrice'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'MoneyCreateNestedOneWithoutSubscriptionPlan_money_subscriptionPlansInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name:
              _i1.NameNode(value: 'Subscription_subscriptionType_subscription'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'SubscriptionCreateNestedManyWithoutTypeInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const SubscriptionPlanUpdateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'SubscriptionPlanUpdateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'StandardDuration'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'DurationUpdateOneRequiredWithoutSubscriptionPlan_duration_subscriptionPlanInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'StandardPrice'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'MoneyUpdateOneWithoutSubscriptionPlan_money_subscriptionPlansInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name:
              _i1.NameNode(value: 'Subscription_subscriptionType_subscription'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'SubscriptionUpdateManyWithoutTypeInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const BoosterCreateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'BoosterCreateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Timespan'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TimespanCreateNestedOneWithoutBooster_timespan_boosterInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_booster_item'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'ItemCreateNestedOneWithoutBoosterInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const BoosterUpdateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'BoosterUpdateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Timespan'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TimespanUpdateOneWithoutBooster_timespan_boosterInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_booster_item'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpdateOneWithoutBoosterInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const MoneyCreateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'MoneyCreateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'value'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Float'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Currency'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Currency'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'HistoryCreateNestedOneWithoutMoney_history_moneyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_value_item'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemCreateNestedOneWithoutValueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'SubscriptionPlan_money_subscriptionPlans'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'SubscriptionPlanCreateNestedOneWithoutStandardPriceInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Subscription_money_subscription'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'SubscriptionCreateNestedOneWithoutPriceInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const MoneyUpdateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'MoneyUpdateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'value'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableFloatFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Currency'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableEnumCurrencyFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryUpdateOneWithoutMoney_history_moneyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_value_item'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpdateOneWithoutValueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'SubscriptionPlan_money_subscriptionPlans'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'SubscriptionPlanUpdateOneWithoutStandardPriceInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Subscription_money_subscription'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'SubscriptionUpdateOneWithoutPriceInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ContractCreateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ContractCreateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Offer'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'OfferCreateNestedOneWithoutContractInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Rating'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'RatingCreateNestedManyWithoutContractInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ContractUpdateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ContractUpdateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Offer'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'OfferUpdateOneWithoutContractInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Rating'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'RatingUpdateManyWithoutContractInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const OfferCreateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'OfferCreateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TradePackageCreateNestedManyWithoutOffer_tradePackage_offersInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Contract'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ContractCreateNestedOneWithoutOfferInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const OfferUpdateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'OfferUpdateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TradePackageUpdateManyWithoutOffer_tradePackage_offersInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Contract'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ContractUpdateOneWithoutOfferInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const TradePackageCreateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'TradePackageCreateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'WantedBy'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'PersonCreateNestedManyWithoutTradePackage_wantedBy_tradePackagesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'From'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'PersonCreateNestedOneWithoutTradePackage_from_tradePackagesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemCreateNestedManyWithoutTradePackage_item_tradePackagesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Offer_tradePackage_offers'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'OfferCreateNestedManyWithoutTradePackagesInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const TradePackageUpdateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'TradePackageUpdateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'WantedBy'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'PersonUpdateManyWithoutTradePackage_wantedBy_tradePackagesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'From'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'PersonUpdateOneWithoutTradePackage_from_tradePackagesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemUpdateManyWithoutTradePackage_item_tradePackagesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Offer_tradePackage_offers'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'OfferUpdateManyWithoutTradePackagesInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const WardrobeCreateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'WardrobeCreateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Address'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'AddressCreateNestedOneWithoutWardrobesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloths'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothCreateNestedManyWithoutWardrobeInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const WardrobeUpdateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'WardrobeUpdateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Address'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'AddressUpdateOneWithoutWardrobesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloths'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothUpdateManyWithoutWardrobeInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonCreateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PersonCreateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'email'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'birthday'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'firstName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lastName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Gender'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'GenderCreateNestedOneWithoutProfile_gender_profilesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemGenderCreateNestedManyWithoutPerson_itemGender_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryCreateNestedOneWithoutUser_history_userInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Telephone'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TelephoneCreateNestedOneWithoutPerson_telephone_personInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Address'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'AddressCreateNestedManyWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Picture'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PictureCreateNestedOneWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothSizeCreateNestedManyWithoutPerson_clothSize_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothStyles'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothStyleCreateNestedManyWithoutPerson_clothStyle_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Event_who_events'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventCreateNestedManyWithoutWhoInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_owner_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'ItemCreateNestedManyWithoutOwnerInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Channel'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ChannelCreateNestedOneWithoutParticipantsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_wantedBy_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageCreateNestedManyWithoutWantedByInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_from_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageCreateNestedManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Rating_person_ratings'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'RatingCreateNestedManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonUpdateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PersonUpdateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'email'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'birthday'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableDateTimeFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'firstName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lastName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Gender'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'GenderUpdateOneWithoutProfile_gender_profilesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemGenderUpdateManyWithoutPerson_itemGender_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryUpdateOneWithoutUser_history_userInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Telephone'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TelephoneUpdateOneWithoutPerson_telephone_personInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Address'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressUpdateManyWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Picture'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureUpdateOneWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothSizeUpdateManyWithoutPerson_clothSize_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothStyles'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothStyleUpdateManyWithoutPerson_clothStyle_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Event_who_events'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventUpdateManyWithoutWhoInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_owner_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpdateManyWithoutOwnerInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Channel'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ChannelUpdateOneWithoutParticipantsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_wantedBy_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageUpdateManyWithoutWantedByInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_from_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'TradePackageUpdateManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Rating_person_ratings'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'RatingUpdateManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonUncheckedUpdateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PersonUncheckedUpdateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'email'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'birthday'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableDateTimeFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'firstName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lastName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PictureInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PictureInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Float'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'pictureBase64'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: true),
          defaultValue: null)
    ]);
const ClothCreateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothCreateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'code'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Material'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'MaterialCreateNestedOneWithoutCloth_material_clothsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ItemCreateNestedOneWithoutCloth_item_clothInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothSizeCreateNestedManyWithoutCloth_clothSize_clothInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothStyles'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothStyleCreateNestedManyWithoutItem_clothStyle_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'HistoryCreateNestedOneWithoutCloth_history_clothInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Wardrobe'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'WardrobeCreateNestedOneWithoutClothsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothUpdateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothUpdateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'code'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Material'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'MaterialUpdateOneWithoutCloth_material_clothsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ItemUpdateOneRequiredWithoutCloth_item_clothInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothSizeUpdateManyWithoutCloth_clothSize_clothInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothStyles'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothStyleUpdateManyWithoutItem_clothStyle_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryUpdateOneWithoutCloth_history_clothInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Wardrobe'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'WardrobeUpdateOneWithoutClothsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const CreateMyClothInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'CreateMyClothInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloth'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothUncheckedCreateInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Material'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'MaterialWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothSizeWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothStyles'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ClothStyleWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Wardrobe'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'WardrobeWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'CreateMyItemInput'), isNonNull: true),
          defaultValue: null)
    ]);
const ClothUncheckedCreateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothUncheckedCreateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'code'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null)
    ]);
const CreateMyItemInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'CreateMyItemInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Scalars'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUncheckedCreateInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Category'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'CategoryWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Pictures'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PictureInput'), isNonNull: true),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Genders'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemGenderWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Condition'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ConditionWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Value'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'MoneyUncheckedCreateInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Colors'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ColorWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemUncheckedCreateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemUncheckedCreateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'active'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'description'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null)
    ]);
const MoneyUncheckedCreateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'MoneyUncheckedCreateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'value'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Float'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Currency'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Currency'), isNonNull: false),
          defaultValue: null)
    ]);
const ConditionCreateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ConditionCreateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_condition_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ItemCreateNestedManyWithoutConditionInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemCreateNestedManyWithoutConditionInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'ItemCreateNestedManyWithoutConditionInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemCreateWithoutConditionInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'ItemCreateOrConnectWithoutConditionInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'createMany'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemCreateManyConditionInputEnvelope'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemCreateWithoutConditionInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemCreateWithoutConditionInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'active'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'description'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Category'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'CategoryCreateNestedOneWithoutItem_category_itemsInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Value'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'MoneyCreateNestedOneWithoutItem_value_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Colors'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ColorCreateNestedManyWithoutItem_color_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemGenderCreateNestedManyWithoutItems_itemGender_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Pictures'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'PictureCreateNestedManyWithoutItem_picture_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Owner'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateNestedOneWithoutItem_owner_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Booster'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'BoosterCreateNestedManyWithoutItem_booster_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_item_cloth'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothCreateNestedOneWithoutItemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_item_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageCreateNestedManyWithoutItemsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemCreateOrConnectWithoutConditionInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'ItemCreateOrConnectWithoutConditionInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemCreateWithoutConditionInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ItemCreateManyConditionInputEnvelope = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemCreateManyConditionInputEnvelope'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemCreateManyConditionInput'),
                  isNonNull: true),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'skipDuplicates'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null)
    ]);
const ItemCreateManyConditionInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemCreateManyConditionInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'active'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'description'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null)
    ]);
const ConditionUpdateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ConditionUpdateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_condition_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpdateManyWithoutConditionInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemUpdateManyWithoutConditionInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemUpdateManyWithoutConditionInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemCreateWithoutConditionInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'ItemCreateOrConnectWithoutConditionInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'ItemUpsertWithWhereUniqueWithoutConditionInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'createMany'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemCreateManyConditionInputEnvelope'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'set'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'ItemUpdateWithWhereUniqueWithoutConditionInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'updateMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'ItemUpdateManyWithWhereWithoutConditionInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'deleteMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemUpsertWithWhereUniqueWithoutConditionInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ItemUpsertWithWhereUniqueWithoutConditionInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpdateWithoutConditionInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemCreateWithoutConditionInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ItemUpdateWithoutConditionInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemUpdateWithoutConditionInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'active'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'NullableBoolFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'description'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Category'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'CategoryUpdateOneRequiredWithoutItem_category_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Value'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'MoneyUpdateOneWithoutItem_value_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Colors'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ColorUpdateManyWithoutItem_color_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemGenderUpdateManyWithoutItems_itemGender_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Pictures'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PictureUpdateManyWithoutItem_picture_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Owner'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonUpdateOneWithoutItem_owner_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Booster'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'BoosterUpdateManyWithoutItem_booster_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_item_cloth'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothUpdateOneWithoutItemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_item_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageUpdateManyWithoutItemsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemUpdateWithWhereUniqueWithoutConditionInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'ItemUpdateWithWhereUniqueWithoutConditionInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpdateWithoutConditionInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ItemUpdateManyWithWhereWithoutConditionInput =
    _i1.InputObjectTypeDefinitionNode(
        name:
            _i1.NameNode(value: 'ItemUpdateManyWithWhereWithoutConditionInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemScalarWhereInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpdateManyMutationInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ClothSizeCreateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothSizeCreateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'SizeModel'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SizeModel'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Categories'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryCreateNestedManyWithoutClothSizesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_clothSize_cloth'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothCreateNestedManyWithoutClothSizesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Person_clothSize_persons'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateNestedManyWithoutClothSizesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ComparableTo'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothSizeCreateNestedManyWithoutClothSizeInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSize'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothSizeCreateNestedManyWithoutComparableToInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ClothSizeUpdateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ClothSizeUpdateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'rank'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'NullableIntFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'SizeModel'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableEnumSizeModelFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Categories'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryUpdateManyWithoutClothSizesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_clothSize_cloth'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'ClothUpdateManyWithoutClothSizesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Person_clothSize_persons'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'PersonUpdateManyWithoutClothSizesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ComparableTo'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothSizeUpdateManyWithoutClothSizeInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSize'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothSizeUpdateManyWithoutComparableToInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ColorCreateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ColorCreateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Type'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ColorType'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_color_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'ItemCreateNestedManyWithoutColorsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemCreateNestedManyWithoutColorsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'ItemCreateNestedManyWithoutColorsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemCreateWithoutColorsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'ItemCreateOrConnectWithoutColorsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemCreateWithoutColorsInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemCreateWithoutColorsInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'active'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'description'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Category'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'CategoryCreateNestedOneWithoutItem_category_itemsInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Value'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'MoneyCreateNestedOneWithoutItem_value_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemGenderCreateNestedManyWithoutItems_itemGender_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Pictures'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'PictureCreateNestedManyWithoutItem_picture_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Condition'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ConditionCreateNestedOneWithoutItem_condition_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Owner'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateNestedOneWithoutItem_owner_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Booster'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'BoosterCreateNestedManyWithoutItem_booster_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_item_cloth'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothCreateNestedOneWithoutItemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_item_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageCreateNestedManyWithoutItemsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemCreateOrConnectWithoutColorsInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemCreateOrConnectWithoutColorsInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemCreateWithoutColorsInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ColorUpdateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ColorUpdateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Type'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableEnumColorTypeFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_color_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpdateManyWithoutColorsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemUpdateManyWithoutColorsInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemUpdateManyWithoutColorsInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemCreateWithoutColorsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'ItemCreateOrConnectWithoutColorsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'ItemUpsertWithWhereUniqueWithoutColorsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'set'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'ItemUpdateWithWhereUniqueWithoutColorsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'updateMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'ItemUpdateManyWithWhereWithoutColorsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'deleteMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'ItemScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemUpsertWithWhereUniqueWithoutColorsInput =
    _i1.InputObjectTypeDefinitionNode(
        name:
            _i1.NameNode(value: 'ItemUpsertWithWhereUniqueWithoutColorsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpdateWithoutColorsInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemCreateWithoutColorsInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ItemUpdateWithoutColorsInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemUpdateWithoutColorsInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'active'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'NullableBoolFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'description'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Category'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'CategoryUpdateOneRequiredWithoutItem_category_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Value'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'MoneyUpdateOneWithoutItem_value_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemGenderUpdateManyWithoutItems_itemGender_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Pictures'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PictureUpdateManyWithoutItem_picture_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Condition'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ConditionUpdateOneWithoutItem_condition_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Owner'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonUpdateOneWithoutItem_owner_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Booster'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'BoosterUpdateManyWithoutItem_booster_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_item_cloth'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothUpdateOneWithoutItemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_item_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageUpdateManyWithoutItemsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemUpdateWithWhereUniqueWithoutColorsInput =
    _i1.InputObjectTypeDefinitionNode(
        name:
            _i1.NameNode(value: 'ItemUpdateWithWhereUniqueWithoutColorsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpdateWithoutColorsInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ItemUpdateManyWithWhereWithoutColorsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'ItemUpdateManyWithWhereWithoutColorsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemScalarWhereInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpdateManyMutationInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const ItemCreateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemCreateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'active'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'description'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Category'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'CategoryCreateNestedOneWithoutItem_category_itemsInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Value'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'MoneyCreateNestedOneWithoutItem_value_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Colors'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ColorCreateNestedManyWithoutItem_color_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemGenderCreateNestedManyWithoutItems_itemGender_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Pictures'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'PictureCreateNestedManyWithoutItem_picture_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Condition'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ConditionCreateNestedOneWithoutItem_condition_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Owner'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateNestedOneWithoutItem_owner_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Booster'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'BoosterCreateNestedManyWithoutItem_booster_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_item_cloth'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothCreateNestedOneWithoutItemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_item_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageCreateNestedManyWithoutItemsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ItemUpdateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ItemUpdateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'active'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'NullableBoolFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'description'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Category'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'CategoryUpdateOneRequiredWithoutItem_category_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Value'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'MoneyUpdateOneWithoutItem_value_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Colors'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ColorUpdateManyWithoutItem_color_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemGenderUpdateManyWithoutItems_itemGender_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Pictures'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PictureUpdateManyWithoutItem_picture_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Condition'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ConditionUpdateOneWithoutItem_condition_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Owner'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonUpdateOneWithoutItem_owner_itemsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Booster'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'BoosterUpdateManyWithoutItem_booster_itemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_item_cloth'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothUpdateOneWithoutItemInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_item_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageUpdateManyWithoutItemsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const BrandCreateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'BrandCreateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Categories'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'CategoryCreateNestedManyWithoutBrand_category_brandsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const CategoryCreateNestedManyWithoutBrand_category_brandsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'CategoryCreateNestedManyWithoutBrand_category_brandsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'CategoryCreateWithoutBrand_category_brandsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'CategoryCreateOrConnectWithoutBrand_category_brandsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'CategoryWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const CategoryCreateWithoutBrand_category_brandsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'CategoryCreateWithoutBrand_category_brandsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothSizeCreateNestedManyWithoutCategoriesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_category_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ItemCreateNestedManyWithoutCategoryInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ParentCategory'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryCreateNestedOneWithoutSubCategoriesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'SubCategories'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryCreateNestedManyWithoutParentCategoryInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const CategoryCreateOrConnectWithoutBrand_category_brandsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'CategoryCreateOrConnectWithoutBrand_category_brandsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'CategoryWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryCreateWithoutBrand_category_brandsInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const BrandUpdateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'BrandUpdateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Categories'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryUpdateManyWithoutBrand_category_brandsInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const CategoryUpdateManyWithoutBrand_category_brandsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'CategoryUpdateManyWithoutBrand_category_brandsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'CategoryCreateWithoutBrand_category_brandsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'CategoryCreateOrConnectWithoutBrand_category_brandsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'CategoryUpsertWithWhereUniqueWithoutBrand_category_brandsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'set'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'CategoryWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'CategoryWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'CategoryWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'CategoryWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'CategoryUpdateWithWhereUniqueWithoutBrand_category_brandsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'updateMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value:
                          'CategoryUpdateManyWithWhereWithoutBrand_category_brandsInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'deleteMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'CategoryScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const CategoryUpsertWithWhereUniqueWithoutBrand_category_brandsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'CategoryUpsertWithWhereUniqueWithoutBrand_category_brandsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'CategoryWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryUpdateWithoutBrand_category_brandsInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryCreateWithoutBrand_category_brandsInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const CategoryUpdateWithoutBrand_category_brandsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'CategoryUpdateWithoutBrand_category_brandsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothSizeUpdateManyWithoutCategoriesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_category_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpdateManyWithoutCategoryInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ParentCategory'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryUpdateOneWithoutSubCategoriesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'SubCategories'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryUpdateManyWithoutParentCategoryInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const CategoryUpdateWithWhereUniqueWithoutBrand_category_brandsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'CategoryUpdateWithWhereUniqueWithoutBrand_category_brandsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'CategoryWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryUpdateWithoutBrand_category_brandsInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const CategoryUpdateManyWithWhereWithoutBrand_category_brandsInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'CategoryUpdateManyWithWhereWithoutBrand_category_brandsInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'CategoryScalarWhereInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'CategoryUpdateManyMutationInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const CategoryCreateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'CategoryCreateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothSizeCreateNestedManyWithoutCategoriesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Brand_category_brands'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'BrandCreateNestedManyWithoutCategoriesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_category_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ItemCreateNestedManyWithoutCategoryInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ParentCategory'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryCreateNestedOneWithoutSubCategoriesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'SubCategories'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryCreateNestedManyWithoutParentCategoryInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const CategoryUpdateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'CategoryUpdateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothSizeUpdateManyWithoutCategoriesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Brand_category_brands'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'BrandUpdateManyWithoutCategoriesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_category_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpdateManyWithoutCategoryInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ParentCategory'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryUpdateOneWithoutSubCategoriesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'SubCategories'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'CategoryUpdateManyWithoutParentCategoryInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const AddressCreateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'AddressCreateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'line1'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'line2'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'city'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'province'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'zip'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Country'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'CountryCreateNestedOneWithoutAddress_county_addressesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Person'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateNestedOneWithoutAddressInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Wardrobes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'WardrobeCreateNestedManyWithoutAddressInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const AddressUpdateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'AddressUpdateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'line1'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'line2'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'city'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'province'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'zip'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Country'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'CountryUpdateOneWithoutAddress_county_addressesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Person'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonUpdateOneWithoutAddressInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Wardrobes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'WardrobeUpdateManyWithoutAddressInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const CountryCreateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'CountryCreateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Address_county_addresses'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'AddressCreateNestedManyWithoutCountryInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const AddressCreateNestedManyWithoutCountryInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'AddressCreateNestedManyWithoutCountryInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'AddressCreateWithoutCountryInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'AddressCreateOrConnectWithoutCountryInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'createMany'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'AddressCreateManyCountryInputEnvelope'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'AddressWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const AddressCreateWithoutCountryInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'AddressCreateWithoutCountryInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'line1'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'line2'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'city'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'province'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'zip'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Person'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateNestedOneWithoutAddressInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Wardrobes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'WardrobeCreateNestedManyWithoutAddressInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const AddressCreateOrConnectWithoutCountryInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'AddressCreateOrConnectWithoutCountryInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressCreateWithoutCountryInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const AddressCreateManyCountryInputEnvelope = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'AddressCreateManyCountryInputEnvelope'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'AddressCreateManyCountryInput'),
                  isNonNull: true),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'skipDuplicates'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null)
    ]);
const AddressCreateManyCountryInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'AddressCreateManyCountryInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'line1'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'line2'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'city'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'province'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'zip'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null)
    ]);
const CountryUpdateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'CountryUpdateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Address_county_addresses'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressUpdateManyWithoutCountryInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const AddressUpdateManyWithoutCountryInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'AddressUpdateManyWithoutCountryInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'AddressCreateWithoutCountryInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'AddressCreateOrConnectWithoutCountryInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'AddressUpsertWithWhereUniqueWithoutCountryInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'createMany'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'AddressCreateManyCountryInputEnvelope'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'set'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'AddressWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'AddressWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'AddressWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'AddressWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'AddressUpdateWithWhereUniqueWithoutCountryInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'updateMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'AddressUpdateManyWithWhereWithoutCountryInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'deleteMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'AddressScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const AddressUpsertWithWhereUniqueWithoutCountryInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'AddressUpsertWithWhereUniqueWithoutCountryInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressUpdateWithoutCountryInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressCreateWithoutCountryInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const AddressUpdateWithoutCountryInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'AddressUpdateWithoutCountryInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'line1'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'line2'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'city'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'province'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'zip'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Person'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonUpdateOneWithoutAddressInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Wardrobes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'WardrobeUpdateManyWithoutAddressInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const AddressUpdateWithWhereUniqueWithoutCountryInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'AddressUpdateWithWhereUniqueWithoutCountryInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressUpdateWithoutCountryInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const AddressUpdateManyWithWhereWithoutCountryInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'AddressUpdateManyWithWhereWithoutCountryInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressScalarWhereInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressUpdateManyMutationInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const TelephoneCreateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'TelephoneCreateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'telephoneNumber'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Person_telephone_person'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateNestedOneWithoutTelephoneInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonCreateNestedOneWithoutTelephoneInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'PersonCreateNestedOneWithoutTelephoneInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonCreateWithoutTelephoneInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateOrConnectWithoutTelephoneInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonCreateWithoutTelephoneInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PersonCreateWithoutTelephoneInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'email'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'birthday'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'firstName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lastName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Gender'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'GenderCreateNestedOneWithoutProfile_gender_profilesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemGenderCreateNestedManyWithoutPerson_itemGender_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryCreateNestedOneWithoutUser_history_userInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Address'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'AddressCreateNestedManyWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Picture'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PictureCreateNestedOneWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothSizeCreateNestedManyWithoutPerson_clothSize_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothStyles'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothStyleCreateNestedManyWithoutPerson_clothStyle_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Event_who_events'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventCreateNestedManyWithoutWhoInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_owner_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'ItemCreateNestedManyWithoutOwnerInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Channel'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ChannelCreateNestedOneWithoutParticipantsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_wantedBy_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageCreateNestedManyWithoutWantedByInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_from_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageCreateNestedManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Rating_person_ratings'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'RatingCreateNestedManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonCreateOrConnectWithoutTelephoneInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'PersonCreateOrConnectWithoutTelephoneInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonCreateWithoutTelephoneInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const TelephoneUpdateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'TelephoneUpdateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'telephoneNumber'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Person_telephone_person'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonUpdateOneWithoutTelephoneInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonUpdateOneWithoutTelephoneInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PersonUpdateOneWithoutTelephoneInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonCreateWithoutTelephoneInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateOrConnectWithoutTelephoneInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonUpsertWithoutTelephoneInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonUpdateWithoutTelephoneInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonUpsertWithoutTelephoneInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PersonUpsertWithoutTelephoneInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonUpdateWithoutTelephoneInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonCreateWithoutTelephoneInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const PersonUpdateWithoutTelephoneInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PersonUpdateWithoutTelephoneInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'email'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'birthday'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableDateTimeFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'firstName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lastName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Gender'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'GenderUpdateOneWithoutProfile_gender_profilesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemGenderUpdateManyWithoutPerson_itemGender_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryUpdateOneWithoutUser_history_userInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Address'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressUpdateManyWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Picture'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureUpdateOneWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothSizeUpdateManyWithoutPerson_clothSize_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothStyles'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothStyleUpdateManyWithoutPerson_clothStyle_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Event_who_events'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventUpdateManyWithoutWhoInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_owner_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpdateManyWithoutOwnerInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Channel'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ChannelUpdateOneWithoutParticipantsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_wantedBy_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageUpdateManyWithoutWantedByInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_from_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'TradePackageUpdateManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Rating_person_ratings'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'RatingUpdateManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const ChannelCreateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ChannelCreateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Participants'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateNestedManyWithoutChannelInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonCreateNestedManyWithoutChannelInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'PersonCreateNestedManyWithoutChannelInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PersonCreateWithoutChannelInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'PersonCreateOrConnectWithoutChannelInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'createMany'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonCreateManyChannelInputEnvelope'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonCreateWithoutChannelInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PersonCreateWithoutChannelInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'email'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'birthday'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'firstName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lastName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Gender'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'GenderCreateNestedOneWithoutProfile_gender_profilesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemGenderCreateNestedManyWithoutPerson_itemGender_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryCreateNestedOneWithoutUser_history_userInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Telephone'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TelephoneCreateNestedOneWithoutPerson_telephone_personInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Address'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'AddressCreateNestedManyWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Picture'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PictureCreateNestedOneWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothSizeCreateNestedManyWithoutPerson_clothSize_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothStyles'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothStyleCreateNestedManyWithoutPerson_clothStyle_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Event_who_events'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventCreateNestedManyWithoutWhoInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_owner_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'ItemCreateNestedManyWithoutOwnerInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_wantedBy_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageCreateNestedManyWithoutWantedByInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_from_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageCreateNestedManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Rating_person_ratings'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'RatingCreateNestedManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonCreateOrConnectWithoutChannelInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'PersonCreateOrConnectWithoutChannelInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonCreateWithoutChannelInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const PersonCreateManyChannelInputEnvelope = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PersonCreateManyChannelInputEnvelope'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PersonCreateManyChannelInput'),
                  isNonNull: true),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'skipDuplicates'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null)
    ]);
const PersonCreateManyChannelInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PersonCreateManyChannelInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'email'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'birthday'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'firstName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lastName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'pictureId'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null)
    ]);
const ChannelUpdateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'ChannelUpdateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Participants'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonUpdateManyWithoutChannelInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonUpdateManyWithoutChannelInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PersonUpdateManyWithoutChannelInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PersonCreateWithoutChannelInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'PersonCreateOrConnectWithoutChannelInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'PersonUpsertWithWhereUniqueWithoutChannelInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'createMany'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonCreateManyChannelInputEnvelope'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'set'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'PersonUpdateWithWhereUniqueWithoutChannelInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'updateMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'PersonUpdateManyWithWhereWithoutChannelInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'deleteMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PersonScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonUpsertWithWhereUniqueWithoutChannelInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'PersonUpsertWithWhereUniqueWithoutChannelInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonUpdateWithoutChannelInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonCreateWithoutChannelInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const PersonUpdateWithoutChannelInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PersonUpdateWithoutChannelInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'email'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'birthday'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableDateTimeFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'firstName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lastName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Gender'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'GenderUpdateOneWithoutProfile_gender_profilesInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemGenderUpdateManyWithoutPerson_itemGender_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryUpdateOneWithoutUser_history_userInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Telephone'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TelephoneUpdateOneWithoutPerson_telephone_personInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Address'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressUpdateManyWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Picture'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureUpdateOneWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothSizeUpdateManyWithoutPerson_clothSize_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothStyles'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothStyleUpdateManyWithoutPerson_clothStyle_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Event_who_events'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventUpdateManyWithoutWhoInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_owner_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpdateManyWithoutOwnerInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_wantedBy_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageUpdateManyWithoutWantedByInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_from_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'TradePackageUpdateManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Rating_person_ratings'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'RatingUpdateManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonUpdateWithWhereUniqueWithoutChannelInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'PersonUpdateWithWhereUniqueWithoutChannelInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonUpdateWithoutChannelInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const PersonUpdateManyWithWhereWithoutChannelInput =
    _i1.InputObjectTypeDefinitionNode(
        name:
            _i1.NameNode(value: 'PersonUpdateManyWithWhereWithoutChannelInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonScalarWhereInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonUpdateManyMutationInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const GenderCreateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'GenderCreateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Profile_gender_profiles'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateNestedManyWithoutGenderInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonCreateNestedManyWithoutGenderInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'PersonCreateNestedManyWithoutGenderInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PersonCreateWithoutGenderInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'PersonCreateOrConnectWithoutGenderInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'createMany'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonCreateManyGenderInputEnvelope'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonCreateWithoutGenderInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PersonCreateWithoutGenderInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'email'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'birthday'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'firstName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lastName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemGenderCreateNestedManyWithoutPerson_itemGender_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryCreateNestedOneWithoutUser_history_userInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Telephone'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TelephoneCreateNestedOneWithoutPerson_telephone_personInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Address'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'AddressCreateNestedManyWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Picture'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PictureCreateNestedOneWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothSizeCreateNestedManyWithoutPerson_clothSize_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothStyles'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothStyleCreateNestedManyWithoutPerson_clothStyle_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Event_who_events'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventCreateNestedManyWithoutWhoInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_owner_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'ItemCreateNestedManyWithoutOwnerInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Channel'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ChannelCreateNestedOneWithoutParticipantsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_wantedBy_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageCreateNestedManyWithoutWantedByInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_from_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageCreateNestedManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Rating_person_ratings'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'RatingCreateNestedManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonCreateOrConnectWithoutGenderInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(value: 'PersonCreateOrConnectWithoutGenderInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonCreateWithoutGenderInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const PersonCreateManyGenderInputEnvelope = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PersonCreateManyGenderInputEnvelope'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PersonCreateManyGenderInput'),
                  isNonNull: true),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'skipDuplicates'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null)
    ]);
const PersonCreateManyGenderInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PersonCreateManyGenderInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'email'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'birthday'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'firstName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lastName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'pictureId'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null)
    ]);
const GenderUpdateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'GenderUpdateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Profile_gender_profiles'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonUpdateManyWithoutGenderInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonUpdateManyWithoutGenderInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PersonUpdateManyWithoutGenderInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PersonCreateWithoutGenderInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'PersonCreateOrConnectWithoutGenderInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'PersonUpsertWithWhereUniqueWithoutGenderInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'createMany'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonCreateManyGenderInputEnvelope'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'set'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'PersonUpdateWithWhereUniqueWithoutGenderInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'updateMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(
                      value: 'PersonUpdateManyWithWhereWithoutGenderInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'deleteMany'),
          directives: [],
          type: _i1.ListTypeNode(
              type: _i1.NamedTypeNode(
                  name: _i1.NameNode(value: 'PersonScalarWhereInput'),
                  isNonNull: true),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonUpsertWithWhereUniqueWithoutGenderInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'PersonUpsertWithWhereUniqueWithoutGenderInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonUpdateWithoutGenderInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonCreateWithoutGenderInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const PersonUpdateWithoutGenderInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'PersonUpdateWithoutGenderInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'email'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'birthday'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableDateTimeFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'firstName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'lastName'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ItemGenders'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ItemGenderUpdateManyWithoutPerson_itemGender_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryUpdateOneWithoutUser_history_userInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Telephone'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'TelephoneUpdateOneWithoutPerson_telephone_personInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Address'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'AddressUpdateManyWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Picture'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PictureUpdateOneWithoutPersonInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothSizes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothSizeUpdateManyWithoutPerson_clothSize_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'ClothStyles'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'ClothStyleUpdateManyWithoutPerson_clothStyle_personsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Event_who_events'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'EventUpdateManyWithoutWhoInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Item_owner_items'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ItemUpdateManyWithoutOwnerInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Channel'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ChannelUpdateOneWithoutParticipantsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_wantedBy_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'TradePackageUpdateManyWithoutWantedByInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'TradePackage_from_tradePackages'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'TradePackageUpdateManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Rating_person_ratings'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'RatingUpdateManyWithoutFromInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const PersonUpdateWithWhereUniqueWithoutGenderInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'PersonUpdateWithWhereUniqueWithoutGenderInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonUpdateWithoutGenderInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const PersonUpdateManyWithWhereWithoutGenderInput =
    _i1.InputObjectTypeDefinitionNode(
        name:
            _i1.NameNode(value: 'PersonUpdateManyWithWhereWithoutGenderInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonScalarWhereInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'data'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonUpdateManyMutationInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const DurationCreateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'DurationCreateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'seconds'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'minutes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'hours'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'days'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'weeks'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'months'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'years'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Int'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name:
              _i1.NameNode(value: 'SubscriptionPlan_duration_subscriptionPlan'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'SubscriptionPlanCreateNestedOneWithoutStandardDurationInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const SubscriptionPlanCreateNestedOneWithoutStandardDurationInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'SubscriptionPlanCreateNestedOneWithoutStandardDurationInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'SubscriptionPlanCreateWithoutStandardDurationInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'SubscriptionPlanCreateOrConnectWithoutStandardDurationInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SubscriptionPlanWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const SubscriptionPlanCreateWithoutStandardDurationInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'SubscriptionPlanCreateWithoutStandardDurationInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'StandardPrice'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'MoneyCreateNestedOneWithoutSubscriptionPlan_money_subscriptionPlansInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name:
              _i1.NameNode(value: 'Subscription_subscriptionType_subscription'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'SubscriptionCreateNestedManyWithoutTypeInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const SubscriptionPlanCreateOrConnectWithoutStandardDurationInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value:
                'SubscriptionPlanCreateOrConnectWithoutStandardDurationInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'where'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SubscriptionPlanWhereUniqueInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'SubscriptionPlanCreateWithoutStandardDurationInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const DurationUpdateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'DurationUpdateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'seconds'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'NullableIntFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'minutes'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'NullableIntFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'hours'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'NullableIntFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'days'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'NullableIntFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'weeks'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'NullableIntFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'months'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'NullableIntFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'years'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'NullableIntFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name:
              _i1.NameNode(value: 'SubscriptionPlan_duration_subscriptionPlan'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'SubscriptionPlanUpdateOneWithoutStandardDurationInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const SubscriptionPlanUpdateOneWithoutStandardDurationInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'SubscriptionPlanUpdateOneWithoutStandardDurationInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'SubscriptionPlanCreateWithoutStandardDurationInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connectOrCreate'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'SubscriptionPlanCreateOrConnectWithoutStandardDurationInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'upsert'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'SubscriptionPlanUpsertWithoutStandardDurationInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'disconnect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'delete'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'Boolean'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'connect'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'SubscriptionPlanWhereUniqueInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'SubscriptionPlanUpdateWithoutStandardDurationInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const SubscriptionPlanUpsertWithoutStandardDurationInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'SubscriptionPlanUpsertWithoutStandardDurationInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'update'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'SubscriptionPlanUpdateWithoutStandardDurationInput'),
              isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'create'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'SubscriptionPlanCreateWithoutStandardDurationInput'),
              isNonNull: true),
          defaultValue: null)
    ]);
const SubscriptionPlanUpdateWithoutStandardDurationInput =
    _i1.InputObjectTypeDefinitionNode(
        name: _i1.NameNode(
            value: 'SubscriptionPlanUpdateWithoutStandardDurationInput'),
        directives: [],
        fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'name'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableStringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'StandardPrice'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'MoneyUpdateOneWithoutSubscriptionPlan_money_subscriptionPlansInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name:
              _i1.NameNode(value: 'Subscription_subscriptionType_subscription'),
          directives: [],
          type: _i1.NamedTypeNode(
              name:
                  _i1.NameNode(value: 'SubscriptionUpdateManyWithoutTypeInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const TimespanCreateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'TimespanCreateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'start'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'end'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Booster_timespan_booster'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'BoosterCreateNestedOneWithoutTimespanInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Subscription_timespan_subscription'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'SubscriptionCreateNestedOneWithoutTimespanInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const TimespanUpdateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'TimespanUpdateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'start'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableDateTimeFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'end'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'NullableDateTimeFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Booster_timespan_booster'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'BoosterUpdateOneWithoutTimespanInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Subscription_timespan_subscription'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'SubscriptionUpdateOneWithoutTimespanInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const HistoryCreateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'HistoryCreateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Created'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'EventCreateNestedOneWithoutHistory_created_historyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Updated'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'EventCreateNestedManyWithoutHistory_updated_historyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Deleted'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value:
                      'EventCreateNestedOneWithoutHistory_deleted_historyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'User_history_user'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateNestedOneWithoutHistoryInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Money_history_money'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'MoneyCreateNestedOneWithoutHistoryInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_history_cloth'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'ClothCreateNestedOneWithoutHistoryInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const HistoryUpdateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'HistoryUpdateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Created'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'EventUpdateOneWithoutHistory_created_historyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Updated'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'EventUpdateManyWithoutHistory_updated_historyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Deleted'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'EventUpdateOneWithoutHistory_deleted_historyInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'User_history_user'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'PersonUpdateOneWithoutHistoryInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Money_history_money'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'MoneyUpdateOneWithoutHistoryInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Cloth_history_cloth'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'ClothUpdateOneWithoutHistoryInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const EventCreateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'EventCreateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'when'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTime'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'what'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'String'), isNonNull: true),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'from'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'JSON'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'to'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'JSON'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Who'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonCreateNestedOneWithoutEvent_who_eventsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History_created_history'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryCreateNestedOneWithoutCreatedInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History_updated_history'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryCreateNestedOneWithoutUpdatedInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History_deleted_history'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'HistoryCreateNestedOneWithoutDeletedInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const EventUpdateInput = _i1.InputObjectTypeDefinitionNode(
    name: _i1.NameNode(value: 'EventUpdateInput'),
    directives: [],
    fields: [
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'id'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'when'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'DateTimeFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'what'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'StringFieldUpdateOperationsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'from'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'JSON'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'to'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'JSON'), isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'Who'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(
                  value: 'PersonUpdateOneWithoutEvent_who_eventsInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History_created_history'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryUpdateOneWithoutCreatedInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History_updated_history'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryUpdateOneWithoutUpdatedInput'),
              isNonNull: false),
          defaultValue: null),
      _i1.InputValueDefinitionNode(
          name: _i1.NameNode(value: 'History_deleted_history'),
          directives: [],
          type: _i1.NamedTypeNode(
              name: _i1.NameNode(value: 'HistoryUpdateOneWithoutDeletedInput'),
              isNonNull: false),
          defaultValue: null)
    ]);
const document = _i1.DocumentNode(definitions: [
  AddressCountAggregate,
  AddressCount,
  AddressMaxAggregate,
  AddressMinAggregate,
  Address,
  WardrobeWhereInput,
  StringFilter,
  QueryMode,
  NestedStringFilter,
  StringNullableFilter,
  NestedStringNullableFilter,
  AddressRelationFilter,
  AddressWhereInput,
  CountryRelationFilter,
  CountryWhereInput,
  AddressListRelationFilter,
  PersonRelationFilter,
  PersonWhereInput,
  DateTimeNullableFilter,
  DateTime,
  NestedDateTimeNullableFilter,
  GenderRelationFilter,
  GenderWhereInput,
  PersonListRelationFilter,
  ItemGenderListRelationFilter,
  ItemGenderWhereInput,
  IntNullableFilter,
  NestedIntNullableFilter,
  ItemListRelationFilter,
  ItemWhereInput,
  BoolNullableFilter,
  NestedBoolNullableFilter,
  CategoryRelationFilter,
  CategoryWhereInput,
  ClothSizeListRelationFilter,
  ClothSizeWhereInput,
  EnumSizeModelNullableFilter,
  SizeModel,
  NestedEnumSizeModelNullableFilter,
  CategoryListRelationFilter,
  ClothListRelationFilter,
  ClothWhereInput,
  MaterialRelationFilter,
  MaterialWhereInput,
  ItemRelationFilter,
  ClothStyleListRelationFilter,
  ClothStyleWhereInput,
  HistoryRelationFilter,
  HistoryWhereInput,
  EventRelationFilter,
  EventWhereInput,
  DateTimeFilter,
  NestedDateTimeFilter,
  JsonNullableFilter,
  JSON,
  EventListRelationFilter,
  MoneyRelationFilter,
  MoneyWhereInput,
  FloatNullableFilter,
  NestedFloatNullableFilter,
  EnumCurrencyNullableFilter,
  Currency,
  NestedEnumCurrencyNullableFilter,
  SubscriptionPlanRelationFilter,
  SubscriptionPlanWhereInput,
  DurationRelationFilter,
  DurationWhereInput,
  SubscriptionListRelationFilter,
  SubscriptionWhereInput,
  TimespanRelationFilter,
  TimespanWhereInput,
  BoosterRelationFilter,
  BoosterWhereInput,
  SubscriptionRelationFilter,
  ClothRelationFilter,
  WardrobeRelationFilter,
  BrandListRelationFilter,
  BrandWhereInput,
  ColorListRelationFilter,
  ColorWhereInput,
  EnumColorTypeNullableFilter,
  ColorType,
  NestedEnumColorTypeNullableFilter,
  PictureListRelationFilter,
  PictureWhereInput,
  FileRelationFilter,
  FileWhereInput,
  PictureRelationFilter,
  ConditionRelationFilter,
  ConditionWhereInput,
  BoosterListRelationFilter,
  TradePackageListRelationFilter,
  TradePackageWhereInput,
  OfferListRelationFilter,
  OfferWhereInput,
  ContractRelationFilter,
  ContractWhereInput,
  OfferRelationFilter,
  RatingListRelationFilter,
  RatingWhereInput,
  TelephoneRelationFilter,
  TelephoneWhereInput,
  ChannelRelationFilter,
  ChannelWhereInput,
  WardrobeListRelationFilter,
  WardrobeOrderByWithRelationInput,
  SortOrder,
  AddressOrderByWithRelationInput,
  CountryOrderByWithRelationInput,
  AddressOrderByRelationAggregateInput,
  PersonOrderByWithRelationInput,
  GenderOrderByWithRelationInput,
  PersonOrderByRelationAggregateInput,
  ItemGenderOrderByRelationAggregateInput,
  HistoryOrderByWithRelationInput,
  EventOrderByWithRelationInput,
  EventOrderByRelationAggregateInput,
  MoneyOrderByWithRelationInput,
  ItemOrderByWithRelationInput,
  CategoryOrderByWithRelationInput,
  ClothSizeOrderByRelationAggregateInput,
  BrandOrderByRelationAggregateInput,
  ItemOrderByRelationAggregateInput,
  CategoryOrderByRelationAggregateInput,
  ColorOrderByRelationAggregateInput,
  PictureOrderByRelationAggregateInput,
  ConditionOrderByWithRelationInput,
  BoosterOrderByRelationAggregateInput,
  ClothOrderByWithRelationInput,
  MaterialOrderByWithRelationInput,
  ClothOrderByRelationAggregateInput,
  ClothStyleOrderByRelationAggregateInput,
  TradePackageOrderByRelationAggregateInput,
  SubscriptionPlanOrderByWithRelationInput,
  DurationOrderByWithRelationInput,
  SubscriptionOrderByRelationAggregateInput,
  SubscriptionOrderByWithRelationInput,
  TimespanOrderByWithRelationInput,
  BoosterOrderByWithRelationInput,
  TelephoneOrderByWithRelationInput,
  PictureOrderByWithRelationInput,
  FileOrderByWithRelationInput,
  ChannelOrderByWithRelationInput,
  RatingOrderByRelationAggregateInput,
  WardrobeOrderByRelationAggregateInput,
  WardrobeWhereUniqueInput,
  WardrobeScalarFieldEnum,
  BoosterCountAggregate,
  BoosterMaxAggregate,
  BoosterMinAggregate,
  Booster,
  BrandCountAggregate,
  BrandCount,
  BrandMaxAggregate,
  BrandMinAggregate,
  Brand,
  CategoryWhereUniqueInput,
  CategoryScalarFieldEnum,
  CategoryCountAggregate,
  CategoryCount,
  CategoryMaxAggregate,
  CategoryMinAggregate,
  Category,
  ClothSizeOrderByWithRelationInput,
  ClothSizeWhereUniqueInput,
  ClothSizeScalarFieldEnum,
  BrandOrderByWithRelationInput,
  BrandWhereUniqueInput,
  BrandScalarFieldEnum,
  ItemWhereUniqueInput,
  ItemScalarFieldEnum,
  ChannelCountAggregate,
  ChannelCount,
  ChannelMaxAggregate,
  ChannelMinAggregate,
  Channel,
  PersonWhereUniqueInput,
  PersonScalarFieldEnum,
  ClothCountAggregate,
  ClothCount,
  ClothMaxAggregate,
  ClothMinAggregate,
  Cloth,
  ClothStyleOrderByWithRelationInput,
  ClothStyleWhereUniqueInput,
  ClothStyleScalarFieldEnum,
  ClothSizeAvgAggregate,
  ClothSizeCountAggregate,
  ClothSizeCount,
  ClothSizeMaxAggregate,
  ClothSizeMinAggregate,
  ClothSizeSumAggregate,
  ClothSize,
  ClothWhereUniqueInput,
  ClothScalarFieldEnum,
  ClothStyleCountAggregate,
  ClothStyleCount,
  ClothStyleMaxAggregate,
  ClothStyleMinAggregate,
  ClothStyle,
  ColorCountAggregate,
  ColorCount,
  ColorMaxAggregate,
  ColorMinAggregate,
  Color,
  ConditionCountAggregate,
  ConditionCount,
  ConditionMaxAggregate,
  ConditionMinAggregate,
  Condition,
  ContractCountAggregate,
  ContractCount,
  ContractMaxAggregate,
  ContractMinAggregate,
  Contract,
  RatingOrderByWithRelationInput,
  ContractOrderByWithRelationInput,
  OfferOrderByWithRelationInput,
  RatingWhereUniqueInput,
  RatingScalarFieldEnum,
  CountryCountAggregate,
  CountryCount,
  CountryMaxAggregate,
  CountryMinAggregate,
  Country,
  AddressWhereUniqueInput,
  AddressScalarFieldEnum,
  DurationAvgAggregate,
  DurationCountAggregate,
  DurationMaxAggregate,
  DurationMinAggregate,
  DurationSumAggregate,
  Duration,
  EventCountAggregate,
  EventMaxAggregate,
  EventMinAggregate,
  Event,
  FileCountAggregate,
  FileMaxAggregate,
  FileMinAggregate,
  File,
  GenderCountAggregate,
  GenderCount,
  GenderMaxAggregate,
  GenderMinAggregate,
  Gender,
  HistoryCountAggregate,
  HistoryCount,
  HistoryMaxAggregate,
  HistoryMinAggregate,
  History,
  EventWhereUniqueInput,
  EventScalarFieldEnum,
  ItemCountAggregate,
  ItemCount,
  ItemGenderCount,
  ItemMaxAggregate,
  ItemMinAggregate,
  Item,
  ColorOrderByWithRelationInput,
  ColorWhereUniqueInput,
  ColorScalarFieldEnum,
  ItemGenderOrderByWithRelationInput,
  ItemGenderWhereUniqueInput,
  ItemGenderScalarFieldEnum,
  PictureWhereUniqueInput,
  PictureScalarFieldEnum,
  BoosterWhereUniqueInput,
  BoosterScalarFieldEnum,
  TradePackageOrderByWithRelationInput,
  OfferOrderByRelationAggregateInput,
  TradePackageWhereUniqueInput,
  TradePackageScalarFieldEnum,
  ItemGenderAvgAggregate,
  ItemGenderCountAggregate,
  ItemGenderMaxAggregate,
  ItemGenderMinAggregate,
  ItemGenderSumAggregate,
  ItemGender,
  MaterialCountAggregate,
  MaterialCount,
  MaterialMaxAggregate,
  MaterialMinAggregate,
  Material,
  MoneyAvgAggregate,
  MoneyCountAggregate,
  MoneyMaxAggregate,
  MoneyMinAggregate,
  MoneySumAggregate,
  Money,
  OfferCountAggregate,
  OfferCount,
  OfferMaxAggregate,
  OfferMinAggregate,
  Offer,
  PersonCountAggregate,
  PersonCount,
  PersonMaxAggregate,
  PersonMinAggregate,
  Person,
  PictureAvgAggregate,
  PictureCountAggregate,
  PictureMaxAggregate,
  PictureMinAggregate,
  PictureSumAggregate,
  Picture,
  RatingAvgAggregate,
  RatingCountAggregate,
  RatingMaxAggregate,
  RatingMinAggregate,
  RatingSumAggregate,
  Rating,
  SubscriptionCountAggregate,
  SubscriptionMaxAggregate,
  SubscriptionMinAggregate,
  Subscription,
  SubscriptionPlanCountAggregate,
  SubscriptionPlanCount,
  SubscriptionPlanMaxAggregate,
  SubscriptionPlanMinAggregate,
  SubscriptionPlan,
  SubscriptionWhereUniqueInput,
  SubscriptionScalarFieldEnum,
  TelephoneCountAggregate,
  TelephoneMaxAggregate,
  TelephoneMinAggregate,
  Telephone,
  TimespanCountAggregate,
  TimespanMaxAggregate,
  TimespanMinAggregate,
  Timespan,
  TradePackageCountAggregate,
  TradePackageCount,
  TradePackageMaxAggregate,
  TradePackageMinAggregate,
  TradePackage,
  OfferWhereUniqueInput,
  OfferScalarFieldEnum,
  WardrobeCountAggregate,
  WardrobeCount,
  WardrobeMaxAggregate,
  WardrobeMinAggregate,
  Wardrobe,
  Query,
  MaterialWhereUniqueInput,
  MaterialScalarFieldEnum,
  FileWhereUniqueInput,
  FileScalarFieldEnum,
  SubscriptionPlanWhereUniqueInput,
  SubscriptionPlanScalarFieldEnum,
  MoneyWhereUniqueInput,
  MoneyScalarFieldEnum,
  ContractWhereUniqueInput,
  ContractScalarFieldEnum,
  ConditionWhereUniqueInput,
  ConditionScalarFieldEnum,
  CountryWhereUniqueInput,
  CountryScalarFieldEnum,
  TelephoneWhereUniqueInput,
  TelephoneScalarFieldEnum,
  ChannelWhereUniqueInput,
  ChannelScalarFieldEnum,
  GenderWhereUniqueInput,
  GenderScalarFieldEnum,
  DurationWhereUniqueInput,
  DurationScalarFieldEnum,
  TimespanWhereUniqueInput,
  TimespanScalarFieldEnum,
  HistoryWhereUniqueInput,
  HistoryScalarFieldEnum,
  Mutation,
  ClothStyleCreateInput,
  ClothCreateNestedManyWithoutClothStylesInput,
  ClothCreateWithoutClothStylesInput,
  MaterialCreateNestedOneWithoutCloth_material_clothsInput,
  MaterialCreateWithoutCloth_material_clothsInput,
  MaterialCreateOrConnectWithoutCloth_material_clothsInput,
  ItemCreateNestedOneWithoutCloth_item_clothInput,
  ItemCreateWithoutCloth_item_clothInput,
  CategoryCreateNestedOneWithoutItem_category_itemsInput,
  CategoryCreateWithoutItem_category_itemsInput,
  ClothSizeCreateNestedManyWithoutCategoriesInput,
  ClothSizeCreateWithoutCategoriesInput,
  ClothCreateNestedManyWithoutClothSizesInput,
  ClothCreateWithoutClothSizesInput,
  ClothStyleCreateNestedManyWithoutItem_clothStyle_itemsInput,
  ClothStyleCreateWithoutItem_clothStyle_itemsInput,
  PersonCreateNestedManyWithoutClothStylesInput,
  PersonCreateWithoutClothStylesInput,
  GenderCreateNestedOneWithoutProfile_gender_profilesInput,
  GenderCreateWithoutProfile_gender_profilesInput,
  GenderCreateOrConnectWithoutProfile_gender_profilesInput,
  ItemGenderCreateNestedManyWithoutPerson_itemGender_personsInput,
  ItemGenderCreateWithoutPerson_itemGender_personsInput,
  ItemCreateNestedManyWithoutItemGendersInput,
  ItemCreateWithoutItemGendersInput,
  MoneyCreateNestedOneWithoutItem_value_itemInput,
  MoneyCreateWithoutItem_value_itemInput,
  HistoryCreateNestedOneWithoutMoney_history_moneyInput,
  HistoryCreateWithoutMoney_history_moneyInput,
  EventCreateNestedOneWithoutHistory_created_historyInput,
  EventCreateWithoutHistory_created_historyInput,
  PersonCreateNestedOneWithoutEvent_who_eventsInput,
  PersonCreateWithoutEvent_who_eventsInput,
  HistoryCreateNestedOneWithoutUser_history_userInput,
  HistoryCreateWithoutUser_history_userInput,
  EventCreateNestedManyWithoutHistory_updated_historyInput,
  EventCreateWithoutHistory_updated_historyInput,
  HistoryCreateNestedOneWithoutCreatedInput,
  HistoryCreateWithoutCreatedInput,
  EventCreateNestedOneWithoutHistory_deleted_historyInput,
  EventCreateWithoutHistory_deleted_historyInput,
  HistoryCreateNestedOneWithoutUpdatedInput,
  HistoryCreateWithoutUpdatedInput,
  PersonCreateNestedOneWithoutHistoryInput,
  PersonCreateWithoutHistoryInput,
  TelephoneCreateNestedOneWithoutPerson_telephone_personInput,
  TelephoneCreateWithoutPerson_telephone_personInput,
  TelephoneCreateOrConnectWithoutPerson_telephone_personInput,
  AddressCreateNestedManyWithoutPersonInput,
  AddressCreateWithoutPersonInput,
  CountryCreateNestedOneWithoutAddress_county_addressesInput,
  CountryCreateWithoutAddress_county_addressesInput,
  CountryCreateOrConnectWithoutAddress_county_addressesInput,
  WardrobeCreateNestedManyWithoutAddressInput,
  WardrobeCreateWithoutAddressInput,
  ClothCreateNestedManyWithoutWardrobeInput,
  ClothCreateWithoutWardrobeInput,
  ClothSizeCreateNestedManyWithoutCloth_clothSize_clothInput,
  ClothSizeCreateWithoutCloth_clothSize_clothInput,
  CategoryCreateNestedManyWithoutClothSizesInput,
  CategoryCreateWithoutClothSizesInput,
  BrandCreateNestedManyWithoutCategoriesInput,
  BrandCreateWithoutCategoriesInput,
  BrandCreateOrConnectWithoutCategoriesInput,
  ItemCreateNestedManyWithoutCategoryInput,
  ItemCreateWithoutCategoryInput,
  ColorCreateNestedManyWithoutItem_color_itemsInput,
  ColorCreateWithoutItem_color_itemsInput,
  ColorCreateOrConnectWithoutItem_color_itemsInput,
  ItemGenderCreateNestedManyWithoutItems_itemGender_itemsInput,
  ItemGenderCreateWithoutItems_itemGender_itemsInput,
  PersonCreateNestedManyWithoutItemGendersInput,
  PersonCreateWithoutItemGendersInput,
  PictureCreateNestedOneWithoutPersonInput,
  PictureCreateWithoutPersonInput,
  FileCreateNestedOneWithoutFile_lqPictureFile_fileInput,
  FileCreateWithoutFile_lqPictureFile_fileInput,
  PictureCreateNestedOneWithoutMQInput,
  PictureCreateWithoutMQInput,
  FileCreateNestedOneWithoutFile_hqPictureFile_fileInput,
  FileCreateWithoutFile_hqPictureFile_fileInput,
  PictureCreateNestedOneWithoutLQInput,
  PictureCreateWithoutLQInput,
  FileCreateNestedOneWithoutFile_mqPictureFile_fileInput,
  FileCreateWithoutFile_mqPictureFile_fileInput,
  PictureCreateNestedOneWithoutHQInput,
  PictureCreateWithoutHQInput,
  PersonCreateNestedOneWithoutPictureInput,
  PersonCreateWithoutPictureInput,
  ClothSizeCreateNestedManyWithoutPerson_clothSize_personsInput,
  ClothSizeCreateWithoutPerson_clothSize_personsInput,
  ClothSizeCreateNestedManyWithoutClothSizeInput,
  ClothSizeCreateWithoutClothSizeInput,
  PersonCreateNestedManyWithoutClothSizesInput,
  PersonCreateWithoutClothSizesInput,
  ClothStyleCreateNestedManyWithoutPerson_clothStyle_personsInput,
  ClothStyleCreateWithoutPerson_clothStyle_personsInput,
  ClothStyleCreateOrConnectWithoutPerson_clothStyle_personsInput,
  EventCreateNestedManyWithoutWhoInput,
  EventCreateWithoutWhoInput,
  HistoryCreateNestedOneWithoutDeletedInput,
  HistoryCreateWithoutDeletedInput,
  MoneyCreateNestedOneWithoutHistoryInput,
  MoneyCreateWithoutHistoryInput,
  ItemCreateNestedOneWithoutValueInput,
  ItemCreateWithoutValueInput,
  PictureCreateNestedManyWithoutItem_picture_itemInput,
  PictureCreateWithoutItem_picture_itemInput,
  PictureCreateOrConnectWithoutItem_picture_itemInput,
  PictureCreateManyItem_picture_itemInputEnvelope,
  PictureCreateManyItem_picture_itemInput,
  ConditionCreateNestedOneWithoutItem_condition_itemsInput,
  ConditionCreateWithoutItem_condition_itemsInput,
  ConditionCreateOrConnectWithoutItem_condition_itemsInput,
  PersonCreateNestedOneWithoutItem_owner_itemsInput,
  PersonCreateWithoutItem_owner_itemsInput,
  ChannelCreateNestedOneWithoutParticipantsInput,
  ChannelCreateWithoutParticipantsInput,
  ChannelCreateOrConnectWithoutParticipantsInput,
  TradePackageCreateNestedManyWithoutWantedByInput,
  TradePackageCreateWithoutWantedByInput,
  PersonCreateNestedOneWithoutTradePackage_from_tradePackagesInput,
  PersonCreateWithoutTradePackage_from_tradePackagesInput,
  ItemCreateNestedManyWithoutOwnerInput,
  ItemCreateWithoutOwnerInput,
  BoosterCreateNestedManyWithoutItem_booster_itemInput,
  BoosterCreateWithoutItem_booster_itemInput,
  TimespanCreateNestedOneWithoutBooster_timespan_boosterInput,
  TimespanCreateWithoutBooster_timespan_boosterInput,
  SubscriptionCreateNestedOneWithoutTimespanInput,
  SubscriptionCreateWithoutTimespanInput,
  MoneyCreateNestedOneWithoutSubscription_money_subscriptionInput,
  MoneyCreateWithoutSubscription_money_subscriptionInput,
  SubscriptionPlanCreateNestedOneWithoutStandardPriceInput,
  SubscriptionPlanCreateWithoutStandardPriceInput,
  DurationCreateNestedOneWithoutSubscriptionPlan_duration_subscriptionPlanInput,
  DurationCreateWithoutSubscriptionPlan_duration_subscriptionPlanInput,
  DurationCreateOrConnectWithoutSubscriptionPlan_duration_subscriptionPlanInput,
  SubscriptionCreateNestedManyWithoutTypeInput,
  SubscriptionCreateWithoutTypeInput,
  TimespanCreateNestedOneWithoutSubscription_timespan_subscriptionInput,
  TimespanCreateWithoutSubscription_timespan_subscriptionInput,
  BoosterCreateNestedOneWithoutTimespanInput,
  BoosterCreateWithoutTimespanInput,
  ItemCreateNestedOneWithoutBoosterInput,
  ItemCreateWithoutBoosterInput,
  ClothCreateNestedOneWithoutItemInput,
  ClothCreateWithoutItemInput,
  HistoryCreateNestedOneWithoutCloth_history_clothInput,
  HistoryCreateWithoutCloth_history_clothInput,
  HistoryCreateOrConnectWithoutCloth_history_clothInput,
  WardrobeCreateNestedOneWithoutClothsInput,
  WardrobeCreateWithoutClothsInput,
  AddressCreateNestedOneWithoutWardrobesInput,
  AddressCreateWithoutWardrobesInput,
  PersonCreateNestedOneWithoutAddressInput,
  PersonCreateWithoutAddressInput,
  TradePackageCreateNestedManyWithoutFromInput,
  TradePackageCreateWithoutFromInput,
  PersonCreateNestedManyWithoutTradePackage_wantedBy_tradePackagesInput,
  PersonCreateWithoutTradePackage_wantedBy_tradePackagesInput,
  RatingCreateNestedManyWithoutFromInput,
  RatingCreateWithoutFromInput,
  ContractCreateNestedOneWithoutRatingInput,
  ContractCreateWithoutRatingInput,
  OfferCreateNestedOneWithoutContractInput,
  OfferCreateWithoutContractInput,
  TradePackageCreateNestedManyWithoutOffer_tradePackage_offersInput,
  TradePackageCreateWithoutOffer_tradePackage_offersInput,
  ItemCreateNestedManyWithoutTradePackage_item_tradePackagesInput,
  ItemCreateWithoutTradePackage_item_tradePackagesInput,
  ItemCreateOrConnectWithoutTradePackage_item_tradePackagesInput,
  TradePackageCreateOrConnectWithoutOffer_tradePackage_offersInput,
  OfferCreateOrConnectWithoutContractInput,
  ContractCreateOrConnectWithoutRatingInput,
  RatingCreateOrConnectWithoutFromInput,
  RatingCreateManyFromInputEnvelope,
  RatingCreateManyFromInput,
  PersonCreateOrConnectWithoutTradePackage_wantedBy_tradePackagesInput,
  OfferCreateNestedManyWithoutTradePackagesInput,
  OfferCreateWithoutTradePackagesInput,
  ContractCreateNestedOneWithoutOfferInput,
  ContractCreateWithoutOfferInput,
  RatingCreateNestedManyWithoutContractInput,
  RatingCreateWithoutContractInput,
  PersonCreateNestedOneWithoutRating_person_ratingsInput,
  PersonCreateWithoutRating_person_ratingsInput,
  PersonCreateOrConnectWithoutRating_person_ratingsInput,
  RatingCreateOrConnectWithoutContractInput,
  RatingCreateManyContractInputEnvelope,
  RatingCreateManyContractInput,
  ContractCreateOrConnectWithoutOfferInput,
  OfferCreateOrConnectWithoutTradePackagesInput,
  TradePackageCreateOrConnectWithoutFromInput,
  TradePackageCreateManyFromInputEnvelope,
  TradePackageCreateManyFromInput,
  PersonCreateOrConnectWithoutAddressInput,
  AddressCreateOrConnectWithoutWardrobesInput,
  WardrobeCreateOrConnectWithoutClothsInput,
  ClothCreateOrConnectWithoutItemInput,
  TradePackageCreateNestedManyWithoutItemsInput,
  TradePackageCreateWithoutItemsInput,
  TradePackageCreateOrConnectWithoutItemsInput,
  ItemCreateOrConnectWithoutBoosterInput,
  BoosterCreateOrConnectWithoutTimespanInput,
  TimespanCreateOrConnectWithoutSubscription_timespan_subscriptionInput,
  SubscriptionCreateOrConnectWithoutTypeInput,
  SubscriptionCreateManyTypeInputEnvelope,
  SubscriptionCreateManyTypeInput,
  SubscriptionPlanCreateOrConnectWithoutStandardPriceInput,
  MoneyCreateOrConnectWithoutSubscription_money_subscriptionInput,
  SubscriptionPlanCreateNestedOneWithoutSubscription_subscriptionType_subscriptionInput,
  SubscriptionPlanCreateWithoutSubscription_subscriptionType_subscriptionInput,
  MoneyCreateNestedOneWithoutSubscriptionPlan_money_subscriptionPlansInput,
  MoneyCreateWithoutSubscriptionPlan_money_subscriptionPlansInput,
  SubscriptionCreateNestedOneWithoutPriceInput,
  SubscriptionCreateWithoutPriceInput,
  SubscriptionCreateOrConnectWithoutPriceInput,
  MoneyCreateOrConnectWithoutSubscriptionPlan_money_subscriptionPlansInput,
  SubscriptionPlanCreateOrConnectWithoutSubscription_subscriptionType_subscriptionInput,
  SubscriptionCreateOrConnectWithoutTimespanInput,
  TimespanCreateOrConnectWithoutBooster_timespan_boosterInput,
  BoosterCreateOrConnectWithoutItem_booster_itemInput,
  BoosterCreateManyItem_booster_itemInputEnvelope,
  BoosterCreateManyItem_booster_itemInput,
  ItemCreateOrConnectWithoutOwnerInput,
  ItemCreateManyOwnerInputEnvelope,
  ItemCreateManyOwnerInput,
  PersonCreateOrConnectWithoutTradePackage_from_tradePackagesInput,
  TradePackageCreateOrConnectWithoutWantedByInput,
  PersonCreateOrConnectWithoutItem_owner_itemsInput,
  ItemCreateOrConnectWithoutValueInput,
  MoneyCreateOrConnectWithoutHistoryInput,
  ClothCreateNestedOneWithoutHistoryInput,
  ClothCreateWithoutHistoryInput,
  ClothCreateOrConnectWithoutHistoryInput,
  HistoryCreateOrConnectWithoutDeletedInput,
  EventCreateOrConnectWithoutWhoInput,
  EventCreateManyWhoInputEnvelope,
  EventCreateManyWhoInput,
  PersonCreateOrConnectWithoutClothSizesInput,
  ClothSizeCreateOrConnectWithoutClothSizeInput,
  ClothSizeCreateNestedManyWithoutComparableToInput,
  ClothSizeCreateWithoutComparableToInput,
  ClothSizeCreateOrConnectWithoutComparableToInput,
  ClothSizeCreateOrConnectWithoutPerson_clothSize_personsInput,
  PersonCreateOrConnectWithoutPictureInput,
  ItemCreateNestedOneWithoutPicturesInput,
  ItemCreateWithoutPicturesInput,
  ItemCreateOrConnectWithoutPicturesInput,
  PictureCreateOrConnectWithoutHQInput,
  FileCreateOrConnectWithoutFile_mqPictureFile_fileInput,
  PictureCreateOrConnectWithoutLQInput,
  FileCreateOrConnectWithoutFile_hqPictureFile_fileInput,
  PictureCreateOrConnectWithoutMQInput,
  FileCreateOrConnectWithoutFile_lqPictureFile_fileInput,
  PictureCreateOrConnectWithoutPersonInput,
  PersonCreateOrConnectWithoutItemGendersInput,
  ItemGenderCreateOrConnectWithoutItems_itemGender_itemsInput,
  ItemCreateOrConnectWithoutCategoryInput,
  ItemCreateManyCategoryInputEnvelope,
  ItemCreateManyCategoryInput,
  CategoryCreateNestedOneWithoutSubCategoriesInput,
  CategoryCreateWithoutSubCategoriesInput,
  CategoryCreateOrConnectWithoutSubCategoriesInput,
  CategoryCreateNestedManyWithoutParentCategoryInput,
  CategoryCreateWithoutParentCategoryInput,
  CategoryCreateOrConnectWithoutParentCategoryInput,
  CategoryCreateManyParentCategoryInputEnvelope,
  CategoryCreateManyParentCategoryInput,
  CategoryCreateOrConnectWithoutClothSizesInput,
  ClothSizeCreateOrConnectWithoutCloth_clothSize_clothInput,
  ClothCreateOrConnectWithoutWardrobeInput,
  ClothCreateManyWardrobeInputEnvelope,
  ClothCreateManyWardrobeInput,
  WardrobeCreateOrConnectWithoutAddressInput,
  WardrobeCreateManyAddressInputEnvelope,
  WardrobeCreateManyAddressInput,
  AddressCreateOrConnectWithoutPersonInput,
  AddressCreateManyPersonInputEnvelope,
  AddressCreateManyPersonInput,
  PersonCreateOrConnectWithoutHistoryInput,
  HistoryCreateOrConnectWithoutUpdatedInput,
  EventCreateOrConnectWithoutHistory_deleted_historyInput,
  HistoryCreateOrConnectWithoutCreatedInput,
  EventCreateOrConnectWithoutHistory_updated_historyInput,
  EventCreateManyHistory_updated_historyInputEnvelope,
  EventCreateManyHistory_updated_historyInput,
  HistoryCreateOrConnectWithoutUser_history_userInput,
  PersonCreateOrConnectWithoutEvent_who_eventsInput,
  EventCreateOrConnectWithoutHistory_created_historyInput,
  HistoryCreateOrConnectWithoutMoney_history_moneyInput,
  MoneyCreateOrConnectWithoutItem_value_itemInput,
  ItemCreateOrConnectWithoutItemGendersInput,
  ItemGenderCreateOrConnectWithoutPerson_itemGender_personsInput,
  PersonCreateOrConnectWithoutClothStylesInput,
  ClothStyleCreateOrConnectWithoutItem_clothStyle_itemsInput,
  ClothCreateOrConnectWithoutClothSizesInput,
  ClothSizeCreateOrConnectWithoutCategoriesInput,
  CategoryCreateOrConnectWithoutItem_category_itemsInput,
  ItemCreateOrConnectWithoutCloth_item_clothInput,
  ClothCreateOrConnectWithoutClothStylesInput,
  ClothStyleUpdateInput,
  StringFieldUpdateOperationsInput,
  NullableStringFieldUpdateOperationsInput,
  ClothUpdateManyWithoutClothStylesInput,
  ClothUpsertWithWhereUniqueWithoutClothStylesInput,
  ClothUpdateWithoutClothStylesInput,
  MaterialUpdateOneWithoutCloth_material_clothsInput,
  MaterialUpsertWithoutCloth_material_clothsInput,
  MaterialUpdateWithoutCloth_material_clothsInput,
  ItemUpdateOneRequiredWithoutCloth_item_clothInput,
  ItemUpsertWithoutCloth_item_clothInput,
  ItemUpdateWithoutCloth_item_clothInput,
  NullableBoolFieldUpdateOperationsInput,
  CategoryUpdateOneRequiredWithoutItem_category_itemsInput,
  CategoryUpsertWithoutItem_category_itemsInput,
  CategoryUpdateWithoutItem_category_itemsInput,
  ClothSizeUpdateManyWithoutCategoriesInput,
  ClothSizeUpsertWithWhereUniqueWithoutCategoriesInput,
  ClothSizeUpdateWithoutCategoriesInput,
  NullableIntFieldUpdateOperationsInput,
  NullableEnumSizeModelFieldUpdateOperationsInput,
  ClothUpdateManyWithoutClothSizesInput,
  ClothUpsertWithWhereUniqueWithoutClothSizesInput,
  ClothUpdateWithoutClothSizesInput,
  ClothStyleUpdateManyWithoutItem_clothStyle_itemsInput,
  ClothStyleUpsertWithWhereUniqueWithoutItem_clothStyle_itemsInput,
  ClothStyleUpdateWithoutItem_clothStyle_itemsInput,
  PersonUpdateManyWithoutClothStylesInput,
  PersonUpsertWithWhereUniqueWithoutClothStylesInput,
  PersonUpdateWithoutClothStylesInput,
  NullableDateTimeFieldUpdateOperationsInput,
  GenderUpdateOneWithoutProfile_gender_profilesInput,
  GenderUpsertWithoutProfile_gender_profilesInput,
  GenderUpdateWithoutProfile_gender_profilesInput,
  ItemGenderUpdateManyWithoutPerson_itemGender_personsInput,
  ItemGenderUpsertWithWhereUniqueWithoutPerson_itemGender_personsInput,
  ItemGenderUpdateWithoutPerson_itemGender_personsInput,
  ItemUpdateManyWithoutItemGendersInput,
  ItemUpsertWithWhereUniqueWithoutItemGendersInput,
  ItemUpdateWithoutItemGendersInput,
  MoneyUpdateOneWithoutItem_value_itemInput,
  MoneyUpsertWithoutItem_value_itemInput,
  MoneyUpdateWithoutItem_value_itemInput,
  NullableFloatFieldUpdateOperationsInput,
  NullableEnumCurrencyFieldUpdateOperationsInput,
  HistoryUpdateOneWithoutMoney_history_moneyInput,
  HistoryUpsertWithoutMoney_history_moneyInput,
  HistoryUpdateWithoutMoney_history_moneyInput,
  EventUpdateOneWithoutHistory_created_historyInput,
  EventUpsertWithoutHistory_created_historyInput,
  EventUpdateWithoutHistory_created_historyInput,
  DateTimeFieldUpdateOperationsInput,
  PersonUpdateOneWithoutEvent_who_eventsInput,
  PersonUpsertWithoutEvent_who_eventsInput,
  PersonUpdateWithoutEvent_who_eventsInput,
  HistoryUpdateOneWithoutUser_history_userInput,
  HistoryUpsertWithoutUser_history_userInput,
  HistoryUpdateWithoutUser_history_userInput,
  EventUpdateManyWithoutHistory_updated_historyInput,
  EventUpsertWithWhereUniqueWithoutHistory_updated_historyInput,
  EventUpdateWithoutHistory_updated_historyInput,
  HistoryUpdateOneWithoutCreatedInput,
  HistoryUpsertWithoutCreatedInput,
  HistoryUpdateWithoutCreatedInput,
  EventUpdateOneWithoutHistory_deleted_historyInput,
  EventUpsertWithoutHistory_deleted_historyInput,
  EventUpdateWithoutHistory_deleted_historyInput,
  HistoryUpdateOneWithoutUpdatedInput,
  HistoryUpsertWithoutUpdatedInput,
  HistoryUpdateWithoutUpdatedInput,
  PersonUpdateOneWithoutHistoryInput,
  PersonUpsertWithoutHistoryInput,
  PersonUpdateWithoutHistoryInput,
  TelephoneUpdateOneWithoutPerson_telephone_personInput,
  TelephoneUpsertWithoutPerson_telephone_personInput,
  TelephoneUpdateWithoutPerson_telephone_personInput,
  AddressUpdateManyWithoutPersonInput,
  AddressUpsertWithWhereUniqueWithoutPersonInput,
  AddressUpdateWithoutPersonInput,
  CountryUpdateOneWithoutAddress_county_addressesInput,
  CountryUpsertWithoutAddress_county_addressesInput,
  CountryUpdateWithoutAddress_county_addressesInput,
  WardrobeUpdateManyWithoutAddressInput,
  WardrobeUpsertWithWhereUniqueWithoutAddressInput,
  WardrobeUpdateWithoutAddressInput,
  ClothUpdateManyWithoutWardrobeInput,
  ClothUpsertWithWhereUniqueWithoutWardrobeInput,
  ClothUpdateWithoutWardrobeInput,
  ClothSizeUpdateManyWithoutCloth_clothSize_clothInput,
  ClothSizeUpsertWithWhereUniqueWithoutCloth_clothSize_clothInput,
  ClothSizeUpdateWithoutCloth_clothSize_clothInput,
  CategoryUpdateManyWithoutClothSizesInput,
  CategoryUpsertWithWhereUniqueWithoutClothSizesInput,
  CategoryUpdateWithoutClothSizesInput,
  BrandUpdateManyWithoutCategoriesInput,
  BrandUpsertWithWhereUniqueWithoutCategoriesInput,
  BrandUpdateWithoutCategoriesInput,
  BrandUpdateWithWhereUniqueWithoutCategoriesInput,
  BrandUpdateManyWithWhereWithoutCategoriesInput,
  BrandScalarWhereInput,
  BrandUpdateManyMutationInput,
  ItemUpdateManyWithoutCategoryInput,
  ItemUpsertWithWhereUniqueWithoutCategoryInput,
  ItemUpdateWithoutCategoryInput,
  ColorUpdateManyWithoutItem_color_itemsInput,
  ColorUpsertWithWhereUniqueWithoutItem_color_itemsInput,
  ColorUpdateWithoutItem_color_itemsInput,
  NullableEnumColorTypeFieldUpdateOperationsInput,
  ColorUpdateWithWhereUniqueWithoutItem_color_itemsInput,
  ColorUpdateManyWithWhereWithoutItem_color_itemsInput,
  ColorScalarWhereInput,
  ColorUpdateManyMutationInput,
  ItemGenderUpdateManyWithoutItems_itemGender_itemsInput,
  ItemGenderUpsertWithWhereUniqueWithoutItems_itemGender_itemsInput,
  ItemGenderUpdateWithoutItems_itemGender_itemsInput,
  PersonUpdateManyWithoutItemGendersInput,
  PersonUpsertWithWhereUniqueWithoutItemGendersInput,
  PersonUpdateWithoutItemGendersInput,
  PictureUpdateOneWithoutPersonInput,
  PictureUpsertWithoutPersonInput,
  PictureUpdateWithoutPersonInput,
  FileUpdateOneWithoutFile_lqPictureFile_fileInput,
  FileUpsertWithoutFile_lqPictureFile_fileInput,
  FileUpdateWithoutFile_lqPictureFile_fileInput,
  PictureUpdateOneWithoutMQInput,
  PictureUpsertWithoutMQInput,
  PictureUpdateWithoutMQInput,
  FileUpdateOneWithoutFile_hqPictureFile_fileInput,
  FileUpsertWithoutFile_hqPictureFile_fileInput,
  FileUpdateWithoutFile_hqPictureFile_fileInput,
  PictureUpdateOneWithoutLQInput,
  PictureUpsertWithoutLQInput,
  PictureUpdateWithoutLQInput,
  FileUpdateOneWithoutFile_mqPictureFile_fileInput,
  FileUpsertWithoutFile_mqPictureFile_fileInput,
  FileUpdateWithoutFile_mqPictureFile_fileInput,
  PictureUpdateOneWithoutHQInput,
  PictureUpsertWithoutHQInput,
  PictureUpdateWithoutHQInput,
  PersonUpdateOneWithoutPictureInput,
  PersonUpsertWithoutPictureInput,
  PersonUpdateWithoutPictureInput,
  ClothSizeUpdateManyWithoutPerson_clothSize_personsInput,
  ClothSizeUpsertWithWhereUniqueWithoutPerson_clothSize_personsInput,
  ClothSizeUpdateWithoutPerson_clothSize_personsInput,
  ClothSizeUpdateManyWithoutClothSizeInput,
  ClothSizeUpsertWithWhereUniqueWithoutClothSizeInput,
  ClothSizeUpdateWithoutClothSizeInput,
  PersonUpdateManyWithoutClothSizesInput,
  PersonUpsertWithWhereUniqueWithoutClothSizesInput,
  PersonUpdateWithoutClothSizesInput,
  ClothStyleUpdateManyWithoutPerson_clothStyle_personsInput,
  ClothStyleUpsertWithWhereUniqueWithoutPerson_clothStyle_personsInput,
  ClothStyleUpdateWithoutPerson_clothStyle_personsInput,
  ClothStyleUpdateWithWhereUniqueWithoutPerson_clothStyle_personsInput,
  ClothStyleUpdateManyWithWhereWithoutPerson_clothStyle_personsInput,
  ClothStyleScalarWhereInput,
  ClothStyleUpdateManyMutationInput,
  EventUpdateManyWithoutWhoInput,
  EventUpsertWithWhereUniqueWithoutWhoInput,
  EventUpdateWithoutWhoInput,
  HistoryUpdateOneWithoutDeletedInput,
  HistoryUpsertWithoutDeletedInput,
  HistoryUpdateWithoutDeletedInput,
  MoneyUpdateOneWithoutHistoryInput,
  MoneyUpsertWithoutHistoryInput,
  MoneyUpdateWithoutHistoryInput,
  ItemUpdateOneWithoutValueInput,
  ItemUpsertWithoutValueInput,
  ItemUpdateWithoutValueInput,
  PictureUpdateManyWithoutItem_picture_itemInput,
  PictureUpsertWithWhereUniqueWithoutItem_picture_itemInput,
  PictureUpdateWithoutItem_picture_itemInput,
  PictureUpdateWithWhereUniqueWithoutItem_picture_itemInput,
  PictureUpdateManyWithWhereWithoutItem_picture_itemInput,
  PictureScalarWhereInput,
  PictureUpdateManyMutationInput,
  ConditionUpdateOneWithoutItem_condition_itemsInput,
  ConditionUpsertWithoutItem_condition_itemsInput,
  ConditionUpdateWithoutItem_condition_itemsInput,
  PersonUpdateOneWithoutItem_owner_itemsInput,
  PersonUpsertWithoutItem_owner_itemsInput,
  PersonUpdateWithoutItem_owner_itemsInput,
  ChannelUpdateOneWithoutParticipantsInput,
  ChannelUpsertWithoutParticipantsInput,
  ChannelUpdateWithoutParticipantsInput,
  TradePackageUpdateManyWithoutWantedByInput,
  TradePackageUpsertWithWhereUniqueWithoutWantedByInput,
  TradePackageUpdateWithoutWantedByInput,
  PersonUpdateOneWithoutTradePackage_from_tradePackagesInput,
  PersonUpsertWithoutTradePackage_from_tradePackagesInput,
  PersonUpdateWithoutTradePackage_from_tradePackagesInput,
  ItemUpdateManyWithoutOwnerInput,
  ItemUpsertWithWhereUniqueWithoutOwnerInput,
  ItemUpdateWithoutOwnerInput,
  BoosterUpdateManyWithoutItem_booster_itemInput,
  BoosterUpsertWithWhereUniqueWithoutItem_booster_itemInput,
  BoosterUpdateWithoutItem_booster_itemInput,
  TimespanUpdateOneWithoutBooster_timespan_boosterInput,
  TimespanUpsertWithoutBooster_timespan_boosterInput,
  TimespanUpdateWithoutBooster_timespan_boosterInput,
  SubscriptionUpdateOneWithoutTimespanInput,
  SubscriptionUpsertWithoutTimespanInput,
  SubscriptionUpdateWithoutTimespanInput,
  MoneyUpdateOneRequiredWithoutSubscription_money_subscriptionInput,
  MoneyUpsertWithoutSubscription_money_subscriptionInput,
  MoneyUpdateWithoutSubscription_money_subscriptionInput,
  SubscriptionPlanUpdateOneWithoutStandardPriceInput,
  SubscriptionPlanUpsertWithoutStandardPriceInput,
  SubscriptionPlanUpdateWithoutStandardPriceInput,
  DurationUpdateOneRequiredWithoutSubscriptionPlan_duration_subscriptionPlanInput,
  DurationUpsertWithoutSubscriptionPlan_duration_subscriptionPlanInput,
  DurationUpdateWithoutSubscriptionPlan_duration_subscriptionPlanInput,
  SubscriptionUpdateManyWithoutTypeInput,
  SubscriptionUpsertWithWhereUniqueWithoutTypeInput,
  SubscriptionUpdateWithoutTypeInput,
  TimespanUpdateOneWithoutSubscription_timespan_subscriptionInput,
  TimespanUpsertWithoutSubscription_timespan_subscriptionInput,
  TimespanUpdateWithoutSubscription_timespan_subscriptionInput,
  BoosterUpdateOneWithoutTimespanInput,
  BoosterUpsertWithoutTimespanInput,
  BoosterUpdateWithoutTimespanInput,
  ItemUpdateOneWithoutBoosterInput,
  ItemUpsertWithoutBoosterInput,
  ItemUpdateWithoutBoosterInput,
  ClothUpdateOneWithoutItemInput,
  ClothUpsertWithoutItemInput,
  ClothUpdateWithoutItemInput,
  HistoryUpdateOneWithoutCloth_history_clothInput,
  HistoryUpsertWithoutCloth_history_clothInput,
  HistoryUpdateWithoutCloth_history_clothInput,
  WardrobeUpdateOneWithoutClothsInput,
  WardrobeUpsertWithoutClothsInput,
  WardrobeUpdateWithoutClothsInput,
  AddressUpdateOneWithoutWardrobesInput,
  AddressUpsertWithoutWardrobesInput,
  AddressUpdateWithoutWardrobesInput,
  PersonUpdateOneWithoutAddressInput,
  PersonUpsertWithoutAddressInput,
  PersonUpdateWithoutAddressInput,
  TradePackageUpdateManyWithoutFromInput,
  TradePackageUpsertWithWhereUniqueWithoutFromInput,
  TradePackageUpdateWithoutFromInput,
  PersonUpdateManyWithoutTradePackage_wantedBy_tradePackagesInput,
  PersonUpsertWithWhereUniqueWithoutTradePackage_wantedBy_tradePackagesInput,
  PersonUpdateWithoutTradePackage_wantedBy_tradePackagesInput,
  RatingUpdateManyWithoutFromInput,
  RatingUpsertWithWhereUniqueWithoutFromInput,
  RatingUpdateWithoutFromInput,
  ContractUpdateOneWithoutRatingInput,
  ContractUpsertWithoutRatingInput,
  ContractUpdateWithoutRatingInput,
  OfferUpdateOneWithoutContractInput,
  OfferUpsertWithoutContractInput,
  OfferUpdateWithoutContractInput,
  TradePackageUpdateManyWithoutOffer_tradePackage_offersInput,
  TradePackageUpsertWithWhereUniqueWithoutOffer_tradePackage_offersInput,
  TradePackageUpdateWithoutOffer_tradePackage_offersInput,
  ItemUpdateManyWithoutTradePackage_item_tradePackagesInput,
  ItemUpsertWithWhereUniqueWithoutTradePackage_item_tradePackagesInput,
  ItemUpdateWithoutTradePackage_item_tradePackagesInput,
  ItemUpdateWithWhereUniqueWithoutTradePackage_item_tradePackagesInput,
  ItemUpdateManyWithWhereWithoutTradePackage_item_tradePackagesInput,
  ItemScalarWhereInput,
  ItemUpdateManyMutationInput,
  TradePackageUpdateWithWhereUniqueWithoutOffer_tradePackage_offersInput,
  TradePackageUpdateManyWithWhereWithoutOffer_tradePackage_offersInput,
  TradePackageScalarWhereInput,
  TradePackageUpdateManyMutationInput,
  RatingUpdateWithWhereUniqueWithoutFromInput,
  RatingUpdateManyWithWhereWithoutFromInput,
  RatingScalarWhereInput,
  RatingUpdateManyMutationInput,
  PersonUpdateWithWhereUniqueWithoutTradePackage_wantedBy_tradePackagesInput,
  PersonUpdateManyWithWhereWithoutTradePackage_wantedBy_tradePackagesInput,
  PersonScalarWhereInput,
  PersonUpdateManyMutationInput,
  OfferUpdateManyWithoutTradePackagesInput,
  OfferUpsertWithWhereUniqueWithoutTradePackagesInput,
  OfferUpdateWithoutTradePackagesInput,
  ContractUpdateOneWithoutOfferInput,
  ContractUpsertWithoutOfferInput,
  ContractUpdateWithoutOfferInput,
  RatingUpdateManyWithoutContractInput,
  RatingUpsertWithWhereUniqueWithoutContractInput,
  RatingUpdateWithoutContractInput,
  PersonUpdateOneWithoutRating_person_ratingsInput,
  PersonUpsertWithoutRating_person_ratingsInput,
  PersonUpdateWithoutRating_person_ratingsInput,
  RatingUpdateWithWhereUniqueWithoutContractInput,
  RatingUpdateManyWithWhereWithoutContractInput,
  OfferUpdateWithWhereUniqueWithoutTradePackagesInput,
  OfferUpdateManyWithWhereWithoutTradePackagesInput,
  OfferScalarWhereInput,
  OfferUpdateManyMutationInput,
  TradePackageUpdateWithWhereUniqueWithoutFromInput,
  TradePackageUpdateManyWithWhereWithoutFromInput,
  TradePackageUpdateManyWithoutItemsInput,
  TradePackageUpsertWithWhereUniqueWithoutItemsInput,
  TradePackageUpdateWithoutItemsInput,
  TradePackageUpdateWithWhereUniqueWithoutItemsInput,
  TradePackageUpdateManyWithWhereWithoutItemsInput,
  SubscriptionUpdateWithWhereUniqueWithoutTypeInput,
  SubscriptionUpdateManyWithWhereWithoutTypeInput,
  SubscriptionScalarWhereInput,
  SubscriptionUpdateManyMutationInput,
  SubscriptionPlanUpdateOneWithoutSubscription_subscriptionType_subscriptionInput,
  SubscriptionPlanUpsertWithoutSubscription_subscriptionType_subscriptionInput,
  SubscriptionPlanUpdateWithoutSubscription_subscriptionType_subscriptionInput,
  MoneyUpdateOneWithoutSubscriptionPlan_money_subscriptionPlansInput,
  MoneyUpsertWithoutSubscriptionPlan_money_subscriptionPlansInput,
  MoneyUpdateWithoutSubscriptionPlan_money_subscriptionPlansInput,
  SubscriptionUpdateOneWithoutPriceInput,
  SubscriptionUpsertWithoutPriceInput,
  SubscriptionUpdateWithoutPriceInput,
  BoosterUpdateWithWhereUniqueWithoutItem_booster_itemInput,
  BoosterUpdateManyWithWhereWithoutItem_booster_itemInput,
  BoosterScalarWhereInput,
  BoosterUpdateManyMutationInput,
  ItemUpdateWithWhereUniqueWithoutOwnerInput,
  ItemUpdateManyWithWhereWithoutOwnerInput,
  TradePackageUpdateWithWhereUniqueWithoutWantedByInput,
  TradePackageUpdateManyWithWhereWithoutWantedByInput,
  ClothUpdateOneWithoutHistoryInput,
  ClothUpsertWithoutHistoryInput,
  ClothUpdateWithoutHistoryInput,
  EventUpdateWithWhereUniqueWithoutWhoInput,
  EventUpdateManyWithWhereWithoutWhoInput,
  EventScalarWhereInput,
  EventUpdateManyMutationInput,
  PersonUpdateWithWhereUniqueWithoutClothSizesInput,
  PersonUpdateManyWithWhereWithoutClothSizesInput,
  ClothSizeUpdateWithWhereUniqueWithoutClothSizeInput,
  ClothSizeUpdateManyWithWhereWithoutClothSizeInput,
  ClothSizeScalarWhereInput,
  ClothSizeUpdateManyMutationInput,
  ClothSizeUpdateManyWithoutComparableToInput,
  ClothSizeUpsertWithWhereUniqueWithoutComparableToInput,
  ClothSizeUpdateWithoutComparableToInput,
  ClothSizeUpdateWithWhereUniqueWithoutComparableToInput,
  ClothSizeUpdateManyWithWhereWithoutComparableToInput,
  ClothSizeUpdateWithWhereUniqueWithoutPerson_clothSize_personsInput,
  ClothSizeUpdateManyWithWhereWithoutPerson_clothSize_personsInput,
  ItemUpdateOneWithoutPicturesInput,
  ItemUpsertWithoutPicturesInput,
  ItemUpdateWithoutPicturesInput,
  PersonUpdateWithWhereUniqueWithoutItemGendersInput,
  PersonUpdateManyWithWhereWithoutItemGendersInput,
  ItemGenderUpdateWithWhereUniqueWithoutItems_itemGender_itemsInput,
  ItemGenderUpdateManyWithWhereWithoutItems_itemGender_itemsInput,
  ItemGenderScalarWhereInput,
  ItemGenderUpdateManyMutationInput,
  ItemUpdateWithWhereUniqueWithoutCategoryInput,
  ItemUpdateManyWithWhereWithoutCategoryInput,
  CategoryUpdateOneWithoutSubCategoriesInput,
  CategoryUpsertWithoutSubCategoriesInput,
  CategoryUpdateWithoutSubCategoriesInput,
  CategoryUpdateManyWithoutParentCategoryInput,
  CategoryUpsertWithWhereUniqueWithoutParentCategoryInput,
  CategoryUpdateWithoutParentCategoryInput,
  CategoryUpdateWithWhereUniqueWithoutParentCategoryInput,
  CategoryUpdateManyWithWhereWithoutParentCategoryInput,
  CategoryScalarWhereInput,
  CategoryUpdateManyMutationInput,
  CategoryUpdateWithWhereUniqueWithoutClothSizesInput,
  CategoryUpdateManyWithWhereWithoutClothSizesInput,
  ClothSizeUpdateWithWhereUniqueWithoutCloth_clothSize_clothInput,
  ClothSizeUpdateManyWithWhereWithoutCloth_clothSize_clothInput,
  ClothUpdateWithWhereUniqueWithoutWardrobeInput,
  ClothUpdateManyWithWhereWithoutWardrobeInput,
  ClothScalarWhereInput,
  ClothUpdateManyMutationInput,
  WardrobeUpdateWithWhereUniqueWithoutAddressInput,
  WardrobeUpdateManyWithWhereWithoutAddressInput,
  WardrobeScalarWhereInput,
  WardrobeUpdateManyMutationInput,
  AddressUpdateWithWhereUniqueWithoutPersonInput,
  AddressUpdateManyWithWhereWithoutPersonInput,
  AddressScalarWhereInput,
  AddressUpdateManyMutationInput,
  EventUpdateWithWhereUniqueWithoutHistory_updated_historyInput,
  EventUpdateManyWithWhereWithoutHistory_updated_historyInput,
  ItemUpdateWithWhereUniqueWithoutItemGendersInput,
  ItemUpdateManyWithWhereWithoutItemGendersInput,
  ItemGenderUpdateWithWhereUniqueWithoutPerson_itemGender_personsInput,
  ItemGenderUpdateManyWithWhereWithoutPerson_itemGender_personsInput,
  PersonUpdateWithWhereUniqueWithoutClothStylesInput,
  PersonUpdateManyWithWhereWithoutClothStylesInput,
  ClothStyleUpdateWithWhereUniqueWithoutItem_clothStyle_itemsInput,
  ClothStyleUpdateManyWithWhereWithoutItem_clothStyle_itemsInput,
  ClothUpdateWithWhereUniqueWithoutClothSizesInput,
  ClothUpdateManyWithWhereWithoutClothSizesInput,
  ClothSizeUpdateWithWhereUniqueWithoutCategoriesInput,
  ClothSizeUpdateManyWithWhereWithoutCategoriesInput,
  ClothUpdateWithWhereUniqueWithoutClothStylesInput,
  ClothUpdateManyWithWhereWithoutClothStylesInput,
  ItemGenderCreateInput,
  ItemGenderUpdateInput,
  MaterialCreateInput,
  ClothCreateNestedManyWithoutMaterialInput,
  ClothCreateWithoutMaterialInput,
  ClothCreateOrConnectWithoutMaterialInput,
  ClothCreateManyMaterialInputEnvelope,
  ClothCreateManyMaterialInput,
  MaterialUpdateInput,
  ClothUpdateManyWithoutMaterialInput,
  ClothUpsertWithWhereUniqueWithoutMaterialInput,
  ClothUpdateWithoutMaterialInput,
  ClothUpdateWithWhereUniqueWithoutMaterialInput,
  ClothUpdateManyWithWhereWithoutMaterialInput,
  PictureCreateInput,
  PictureUpdateInput,
  FileCreateInput,
  FileUpdateInput,
  RatingCreateInput,
  RatingUpdateInput,
  SubscriptionCreateInput,
  SubscriptionUpdateInput,
  SubscriptionPlanCreateInput,
  SubscriptionPlanUpdateInput,
  BoosterCreateInput,
  BoosterUpdateInput,
  MoneyCreateInput,
  MoneyUpdateInput,
  ContractCreateInput,
  ContractUpdateInput,
  OfferCreateInput,
  OfferUpdateInput,
  TradePackageCreateInput,
  TradePackageUpdateInput,
  WardrobeCreateInput,
  WardrobeUpdateInput,
  PersonCreateInput,
  PersonUpdateInput,
  PersonUncheckedUpdateInput,
  PictureInput,
  ClothCreateInput,
  ClothUpdateInput,
  CreateMyClothInput,
  ClothUncheckedCreateInput,
  CreateMyItemInput,
  ItemUncheckedCreateInput,
  MoneyUncheckedCreateInput,
  ConditionCreateInput,
  ItemCreateNestedManyWithoutConditionInput,
  ItemCreateWithoutConditionInput,
  ItemCreateOrConnectWithoutConditionInput,
  ItemCreateManyConditionInputEnvelope,
  ItemCreateManyConditionInput,
  ConditionUpdateInput,
  ItemUpdateManyWithoutConditionInput,
  ItemUpsertWithWhereUniqueWithoutConditionInput,
  ItemUpdateWithoutConditionInput,
  ItemUpdateWithWhereUniqueWithoutConditionInput,
  ItemUpdateManyWithWhereWithoutConditionInput,
  ClothSizeCreateInput,
  ClothSizeUpdateInput,
  ColorCreateInput,
  ItemCreateNestedManyWithoutColorsInput,
  ItemCreateWithoutColorsInput,
  ItemCreateOrConnectWithoutColorsInput,
  ColorUpdateInput,
  ItemUpdateManyWithoutColorsInput,
  ItemUpsertWithWhereUniqueWithoutColorsInput,
  ItemUpdateWithoutColorsInput,
  ItemUpdateWithWhereUniqueWithoutColorsInput,
  ItemUpdateManyWithWhereWithoutColorsInput,
  ItemCreateInput,
  ItemUpdateInput,
  BrandCreateInput,
  CategoryCreateNestedManyWithoutBrand_category_brandsInput,
  CategoryCreateWithoutBrand_category_brandsInput,
  CategoryCreateOrConnectWithoutBrand_category_brandsInput,
  BrandUpdateInput,
  CategoryUpdateManyWithoutBrand_category_brandsInput,
  CategoryUpsertWithWhereUniqueWithoutBrand_category_brandsInput,
  CategoryUpdateWithoutBrand_category_brandsInput,
  CategoryUpdateWithWhereUniqueWithoutBrand_category_brandsInput,
  CategoryUpdateManyWithWhereWithoutBrand_category_brandsInput,
  CategoryCreateInput,
  CategoryUpdateInput,
  AddressCreateInput,
  AddressUpdateInput,
  CountryCreateInput,
  AddressCreateNestedManyWithoutCountryInput,
  AddressCreateWithoutCountryInput,
  AddressCreateOrConnectWithoutCountryInput,
  AddressCreateManyCountryInputEnvelope,
  AddressCreateManyCountryInput,
  CountryUpdateInput,
  AddressUpdateManyWithoutCountryInput,
  AddressUpsertWithWhereUniqueWithoutCountryInput,
  AddressUpdateWithoutCountryInput,
  AddressUpdateWithWhereUniqueWithoutCountryInput,
  AddressUpdateManyWithWhereWithoutCountryInput,
  TelephoneCreateInput,
  PersonCreateNestedOneWithoutTelephoneInput,
  PersonCreateWithoutTelephoneInput,
  PersonCreateOrConnectWithoutTelephoneInput,
  TelephoneUpdateInput,
  PersonUpdateOneWithoutTelephoneInput,
  PersonUpsertWithoutTelephoneInput,
  PersonUpdateWithoutTelephoneInput,
  ChannelCreateInput,
  PersonCreateNestedManyWithoutChannelInput,
  PersonCreateWithoutChannelInput,
  PersonCreateOrConnectWithoutChannelInput,
  PersonCreateManyChannelInputEnvelope,
  PersonCreateManyChannelInput,
  ChannelUpdateInput,
  PersonUpdateManyWithoutChannelInput,
  PersonUpsertWithWhereUniqueWithoutChannelInput,
  PersonUpdateWithoutChannelInput,
  PersonUpdateWithWhereUniqueWithoutChannelInput,
  PersonUpdateManyWithWhereWithoutChannelInput,
  GenderCreateInput,
  PersonCreateNestedManyWithoutGenderInput,
  PersonCreateWithoutGenderInput,
  PersonCreateOrConnectWithoutGenderInput,
  PersonCreateManyGenderInputEnvelope,
  PersonCreateManyGenderInput,
  GenderUpdateInput,
  PersonUpdateManyWithoutGenderInput,
  PersonUpsertWithWhereUniqueWithoutGenderInput,
  PersonUpdateWithoutGenderInput,
  PersonUpdateWithWhereUniqueWithoutGenderInput,
  PersonUpdateManyWithWhereWithoutGenderInput,
  DurationCreateInput,
  SubscriptionPlanCreateNestedOneWithoutStandardDurationInput,
  SubscriptionPlanCreateWithoutStandardDurationInput,
  SubscriptionPlanCreateOrConnectWithoutStandardDurationInput,
  DurationUpdateInput,
  SubscriptionPlanUpdateOneWithoutStandardDurationInput,
  SubscriptionPlanUpsertWithoutStandardDurationInput,
  SubscriptionPlanUpdateWithoutStandardDurationInput,
  TimespanCreateInput,
  TimespanUpdateInput,
  HistoryCreateInput,
  HistoryUpdateInput,
  EventCreateInput,
  EventUpdateInput
]);
